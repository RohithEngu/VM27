/**
 * VimBindingStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.vmware.vim25;

public class VimBindingStub extends org.apache.axis.client.Stub implements
		com.vmware.vim25.VimPortType {
	private java.util.Vector cachedSerClasses = new java.util.Vector();
	private java.util.Vector cachedSerQNames = new java.util.Vector();
	private java.util.Vector cachedSerFactories = new java.util.Vector();
	private java.util.Vector cachedDeserFactories = new java.util.Vector();

	static org.apache.axis.description.OperationDesc[] _operations;

	static {
		_operations = new org.apache.axis.description.OperationDesc[463];
		_initOperationDesc1();
		_initOperationDesc2();
		_initOperationDesc3();
		_initOperationDesc4();
		_initOperationDesc5();
		_initOperationDesc6();
		_initOperationDesc7();
		_initOperationDesc8();
		_initOperationDesc9();
		_initOperationDesc10();
		_initOperationDesc11();
		_initOperationDesc12();
		_initOperationDesc13();
		_initOperationDesc14();
		_initOperationDesc15();
		_initOperationDesc16();
		_initOperationDesc17();
		_initOperationDesc18();
		_initOperationDesc19();
		_initOperationDesc20();
		_initOperationDesc21();
		_initOperationDesc22();
		_initOperationDesc23();
		_initOperationDesc24();
		_initOperationDesc25();
		_initOperationDesc26();
		_initOperationDesc27();
		_initOperationDesc28();
		_initOperationDesc29();
		_initOperationDesc30();
		_initOperationDesc31();
		_initOperationDesc32();
		_initOperationDesc33();
		_initOperationDesc34();
		_initOperationDesc35();
		_initOperationDesc36();
		_initOperationDesc37();
		_initOperationDesc38();
		_initOperationDesc39();
		_initOperationDesc40();
		_initOperationDesc41();
		_initOperationDesc42();
		_initOperationDesc43();
		_initOperationDesc44();
		_initOperationDesc45();
		_initOperationDesc46();
		_initOperationDesc47();
	}

	private static void _initOperationDesc1() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyPropertyFilter");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[0] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateFilter");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec"),
				com.vmware.vim25.PropertyFilterSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "partialUpdates"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidPropertyFault"),
				"com.vmware.vim25.InvalidProperty",
				new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[1] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveProperties");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "specSet"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec"),
				com.vmware.vim25.PropertyFilterSpec[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ObjectContent"));
		oper.setReturnClass(com.vmware.vim25.ObjectContent[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidPropertyFault"),
				"com.vmware.vim25.InvalidProperty",
				new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[2] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckForUpdates");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "version"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UpdateSet"));
		oper.setReturnClass(com.vmware.vim25.UpdateSet.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidCollectorVersionFault"),
				"com.vmware.vim25.InvalidCollectorVersion",
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidCollectorVersion"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[3] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("WaitForUpdates");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "version"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UpdateSet"));
		oper.setReturnClass(com.vmware.vim25.UpdateSet.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidCollectorVersionFault"),
				"com.vmware.vim25.InvalidCollectorVersion",
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidCollectorVersion"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[4] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CancelWaitForUpdates");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[5] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddAuthorizationRole");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "privIds"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "int"));
		oper.setReturnClass(int.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[6] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveAuthorizationRole");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "roleId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "failIfUsed"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RemoveFailedFault"),
						"com.vmware.vim25.RemoveFailed",
						new javax.xml.namespace.QName("urn:vim25",
								"RemoveFailed"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[7] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateAuthorizationRole");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "roleId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "privIds"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[8] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MergePermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "srcRoleId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dstRoleId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermissionFault"),
				"com.vmware.vim25.AuthMinimumAdminPermission",
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermission"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[9] = oper;

	}

	private static void _initOperationDesc2() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveRolePermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "roleId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"Permission"));
		oper.setReturnClass(com.vmware.vim25.Permission[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[10] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveEntityPermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "inherited"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"Permission"));
		oper.setReturnClass(com.vmware.vim25.Permission[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[11] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveAllPermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"Permission"));
		oper.setReturnClass(com.vmware.vim25.Permission[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[12] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetEntityPermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "permission"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "Permission"),
				com.vmware.vim25.Permission[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermissionFault"),
				"com.vmware.vim25.AuthMinimumAdminPermission",
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermission"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[13] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetEntityPermissions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "permission"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "Permission"),
				com.vmware.vim25.Permission[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermissionFault"),
				"com.vmware.vim25.AuthMinimumAdminPermission",
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermission"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[14] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveEntityPermission");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "user"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "isGroup"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermissionFault"),
				"com.vmware.vim25.AuthMinimumAdminPermission",
				new javax.xml.namespace.QName("urn:vim25",
						"AuthMinimumAdminPermission"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[15] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureCluster_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ClusterConfigSpec"),
				com.vmware.vim25.ClusterConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "modify"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[16] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ApplyRecommendation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[17] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RecommendHostsForVm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ClusterHostRecommendation"));
		oper.setReturnClass(com.vmware.vim25.ClusterHostRecommendation[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[18] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostConnectSpec"),
				com.vmware.vim25.HostConnectSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "asConnected"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resourcePool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "license"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConnectFaultFault"),
				"com.vmware.vim25.HostConnectFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConnectFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[19] = oper;

	}

	private static void _initOperationDesc3() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveInto_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"TooManyHostsFault"),
						"com.vmware.vim25.TooManyHosts",
						new javax.xml.namespace.QName("urn:vim25",
								"TooManyHosts"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[20] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveHostInto_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resourcePool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"TooManyHostsFault"),
						"com.vmware.vim25.TooManyHosts",
						new javax.xml.namespace.QName("urn:vim25",
								"TooManyHosts"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[21] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshRecommendation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[22] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveDasAdvancedRuntimeInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAdvancedRuntimeInfo"));
		oper
				.setReturnClass(com.vmware.vim25.ClusterDasAdvancedRuntimeInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[23] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureComputeResource_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ComputeResourceConfigSpec"),
				com.vmware.vim25.ComputeResourceConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "modify"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[24] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddCustomFieldDef");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "moType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "fieldDefPolicy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PrivilegePolicyDef"),
				com.vmware.vim25.PrivilegePolicyDef.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "fieldPolicy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PrivilegePolicyDef"),
				com.vmware.vim25.PrivilegePolicyDef.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldDef"));
		oper.setReturnClass(com.vmware.vim25.CustomFieldDef.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidPrivilegeFault"),
				"com.vmware.vim25.InvalidPrivilege",
				new javax.xml.namespace.QName("urn:vim25", "InvalidPrivilege"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[25] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveCustomFieldDef");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[26] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RenameCustomFieldDef");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[27] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetField");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "value"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[28] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DoesCustomizationSpecExist");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[29] = oper;

	}

	private static void _initOperationDesc4() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GetCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecItem"));
		oper.setReturnClass(com.vmware.vim25.CustomizationSpecItem.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[30] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "item"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"CustomizationSpecItem"),
				com.vmware.vim25.CustomizationSpecItem.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[31] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("OverwriteCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "item"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"CustomizationSpecItem"),
				com.vmware.vim25.CustomizationSpecItem.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[32] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeleteCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[33] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DuplicateCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[34] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RenameCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[35] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CustomizationSpecItemToXml");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "item"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"CustomizationSpecItem"),
				com.vmware.vim25.CustomizationSpecItem.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[36] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("XmlToCustomizationSpecItem");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "specItemXml"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecItem"));
		oper.setReturnClass(com.vmware.vim25.CustomizationSpecItem.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[37] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckCustomizationResources");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "guestOs"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[38] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryConnectionInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "hostname"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "port"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "username"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "password"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sslThumbprint"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostConnectInfo"));
		oper.setReturnClass(com.vmware.vim25.HostConnectInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConnectFaultFault"),
				"com.vmware.vim25.HostConnectFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConnectFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[39] = oper;

	}

	private static void _initOperationDesc5() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerOnMultiVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[40] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[41] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshDatastoreStorageInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[42] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RenameDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[43] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[44] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryDescriptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogDescriptor"));
		oper
				.setReturnClass(com.vmware.vim25.DiagnosticManagerLogDescriptor[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[45] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("BrowseDiagnosticLog");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "start"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"),
				java.lang.Integer.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "lines"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"),
				java.lang.Integer.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogHeader"));
		oper.setReturnClass(com.vmware.vim25.DiagnosticManagerLogHeader.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"CannotAccessFileFault"),
				"com.vmware.vim25.CannotAccessFile",
				new javax.xml.namespace.QName("urn:vim25", "CannotAccessFile"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[46] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GenerateLogBundles_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "includeDefault"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"LogBundlingFailedFault"),
						"com.vmware.vim25.LogBundlingFailed",
						new javax.xml.namespace.QName("urn:vim25",
								"LogBundlingFailed"), true));
		_operations[47] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FetchDVPortKeys");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "criteria"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DistributedVirtualSwitchPortCriteria"),
				com.vmware.vim25.DistributedVirtualSwitchPortCriteria.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[48] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FetchDVPorts");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "criteria"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DistributedVirtualSwitchPortCriteria"),
				com.vmware.vim25.DistributedVirtualSwitchPortCriteria.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualPort"));
		oper.setReturnClass(com.vmware.vim25.DistributedVirtualPort[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[49] = oper;

	}

	private static void _initOperationDesc6() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryUsedVlanIdInDvs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "int"));
		oper.setReturnClass(int[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[50] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureDvs_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "DVSConfigSpec"),
				com.vmware.vim25.DVSConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"DvsNotAuthorizedFault"),
				"com.vmware.vim25.DvsNotAuthorized",
				new javax.xml.namespace.QName("urn:vim25", "DvsNotAuthorized"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ResourceNotAvailableFault"),
				"com.vmware.vim25.ResourceNotAvailable",
				new javax.xml.namespace.QName("urn:vim25",
						"ResourceNotAvailable"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"LimitExceededFault"),
						"com.vmware.vim25.LimitExceeded",
						new javax.xml.namespace.QName("urn:vim25",
								"LimitExceeded"), true));
		_operations[51] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PerformDvsProductSpecOperation_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "operation"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "productSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DistributedVirtualSwitchProductSpec"),
				com.vmware.vim25.DistributedVirtualSwitchProductSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[52] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MergeDvs_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dvs"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidHostStateFault"),
				"com.vmware.vim25.InvalidHostState",
				new javax.xml.namespace.QName("urn:vim25", "InvalidHostState"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[53] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddDVPortgroup_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DVPortgroupConfigSpec"),
				com.vmware.vim25.DVPortgroupConfigSpec[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[54] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveDVPort_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"destinationPortgroupKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[55] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDvsCapability");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "capability"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "DVSCapability"),
				com.vmware.vim25.DVSCapability.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[56] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureDVPort_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "port"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "DVPortConfigSpec"),
				com.vmware.vim25.DVPortConfigSpec[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[57] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshDVPortState");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portKeys"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[58] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RectifyDvsHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "hosts"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[59] = oper;

	}

	private static void _initOperationDesc7() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryConfigOptionDescriptor");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigOptionDescriptor"));
		oper
				.setReturnClass(com.vmware.vim25.VirtualMachineConfigOptionDescriptor[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[60] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryConfigOption");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigOption"));
		oper.setReturnClass(com.vmware.vim25.VirtualMachineConfigOption.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[61] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryConfigTarget");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ConfigTarget"));
		oper.setReturnClass(com.vmware.vim25.ConfigTarget.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[62] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryTargetCapabilities");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostCapability"));
		oper.setReturnClass(com.vmware.vim25.HostCapability.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[63] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("setCustomValue");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "value"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[64] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnregisterExtension");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[65] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindExtension");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"Extension"));
		oper.setReturnClass(com.vmware.vim25.Extension.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[66] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RegisterExtension");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extension"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "Extension"),
				com.vmware.vim25.Extension.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[67] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateExtension");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extension"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "Extension"),
				com.vmware.vim25.Extension.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[68] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GetPublicKey");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[69] = oper;

	}

	private static void _initOperationDesc8() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetPublicKey");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "publicKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[70] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetExtensionCertificate");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "certificatePem"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificateFault"),
				"com.vmware.vim25.NoClientCertificate",
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificate"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[71] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveDatastoreFile_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destinationName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"destinationDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[72] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CopyDatastoreFile_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destinationName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"destinationDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[73] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeleteDatastoreFile_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[74] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MakeDirectory");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"createParentDirectories"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[75] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ChangeOwner");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "owner"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[76] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateFolder");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[77] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveIntoFolder_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "list"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidFolderFault"),
						"com.vmware.vim25.InvalidFolder",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidFolder"), true));
		_operations[78] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineConfigSpec"),
				com.vmware.vim25.VirtualMachineConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[79] = oper;

	}

	private static void _initOperationDesc9() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RegisterVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "path"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "asTemplate"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[80] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateCluster");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ClusterConfigSpec"),
				com.vmware.vim25.ClusterConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[81] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateClusterEx");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ClusterConfigSpecEx"),
				com.vmware.vim25.ClusterConfigSpecEx.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[82] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddStandaloneHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostConnectSpec"),
				com.vmware.vim25.HostConnectSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "compResSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ComputeResourceConfigSpec"),
				com.vmware.vim25.ComputeResourceConfigSpec.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "addConnected"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "license"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConnectFaultFault"),
				"com.vmware.vim25.HostConnectFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConnectFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[83] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateDatacenter");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[84] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnregisterAndDestroy_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[85] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateDVS_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "DVSCreateSpec"),
				com.vmware.vim25.DVSCreateSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"DvsNotAuthorizedFault"),
				"com.vmware.vim25.DvsNotAuthorized",
				new javax.xml.namespace.QName("urn:vim25", "DvsNotAuthorized"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[86] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetCollectorPageSize");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "maxCount"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[87] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RewindCollector");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[88] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetCollector");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[89] = oper;

	}

	private static void _initOperationDesc10() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyCollector");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[90] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryHostConnectionInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostConnectInfo"));
		oper.setReturnClass(com.vmware.vim25.HostConnectInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[91] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateSystemResources");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resourceInfo"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostSystemResourceInfo"),
				com.vmware.vim25.HostSystemResourceInfo.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[92] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconnectHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cnxSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostConnectSpec"),
				com.vmware.vim25.HostConnectSpec.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConnectFaultFault"),
				"com.vmware.vim25.HostConnectFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConnectFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[93] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisconnectHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[94] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnterMaintenanceMode_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "timeout"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"evacuatePoweredOffVms"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[95] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExitMaintenanceMode_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "timeout"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[96] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RebootHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[97] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ShutdownHost_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[98] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerDownHostToStandBy_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "timeoutSec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"evacuatePoweredOffVms"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"HostPowerOpFailedFault"),
						"com.vmware.vim25.HostPowerOpFailed",
						new javax.xml.namespace.QName("urn:vim25",
								"HostPowerOpFailed"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"NotSupportedFault"),
						"com.vmware.vim25.NotSupported",
						new javax.xml.namespace.QName("urn:vim25",
								"NotSupported"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[99] = oper;

	}

	private static void _initOperationDesc11() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerUpHostFromStandBy_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "timeoutSec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"HostPowerOpFailedFault"),
						"com.vmware.vim25.HostPowerOpFailed",
						new javax.xml.namespace.QName("urn:vim25",
								"HostPowerOpFailed"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"NotSupportedFault"),
						"com.vmware.vim25.NotSupported",
						new javax.xml.namespace.QName("urn:vim25",
								"NotSupported"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[100] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryMemoryOverhead");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "memorySize"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "long"),
				long.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "videoRamSize"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"),
				java.lang.Integer.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "numVcpus"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "long"));
		oper.setReturnClass(long.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[101] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryMemoryOverheadEx");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmConfigInfo"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineConfigInfo"),
				com.vmware.vim25.VirtualMachineConfigInfo.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "long"));
		oper.setReturnClass(long.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[102] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureHostForDAS_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"DasConfigFaultFault"),
				"com.vmware.vim25.DasConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "DasConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[103] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateFlags");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "flagInfo"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostFlagInfo"),
				com.vmware.vim25.HostFlagInfo.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[104] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AcquireCimServicesTicket");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostServiceTicket"));
		oper.setReturnClass(com.vmware.vim25.HostServiceTicket.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[105] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateIpmi");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ipmiInfo"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostIpmiInfo"),
				com.vmware.vim25.HostIpmiInfo.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidIpmiMacAddressFault"),
				"com.vmware.vim25.InvalidIpmiMacAddress",
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidIpmiMacAddress"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidIpmiLoginInfoFault"),
				"com.vmware.vim25.InvalidIpmiLoginInfo",
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidIpmiLoginInfo"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[106] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("HttpNfcLeaseComplete");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[107] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("HttpNfcLeaseAbort");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "fault"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"LocalizedMethodFault"),
				com.vmware.vim25.LocalizedMethodFault.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[108] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("HttpNfcLeaseProgress");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "percent"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[109] = oper;

	}

	private static void _initOperationDesc12() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryIpPools");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dc"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper
				.setReturnType(new javax.xml.namespace.QName("urn:vim25",
						"IpPool"));
		oper.setReturnClass(com.vmware.vim25.IpPool[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[110] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateIpPool");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dc"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "IpPool"),
				com.vmware.vim25.IpPool.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "int"));
		oper.setReturnClass(int.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[111] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateIpPool");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dc"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "IpPool"),
				com.vmware.vim25.IpPool.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[112] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyIpPool");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dc"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[113] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateAssignedLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entityDisplayName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseManagerLicenseInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseEntityNotFoundFault"),
				"com.vmware.vim25.LicenseEntityNotFound",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseEntityNotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[114] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveAssignedLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entityId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseEntityNotFoundFault"),
				"com.vmware.vim25.LicenseEntityNotFound",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseEntityNotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[115] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAssignedLicenses");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entityId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseAssignmentManagerLicenseAssignment"));
		oper
				.setReturnClass(com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[116] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QuerySupportedFeatures");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseFeatureInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseFeatureInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[117] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryLicenseSourceAvailability");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseAvailabilityInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseAvailabilityInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[118] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryLicenseUsage");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseUsageInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseUsageInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[119] = oper;

	}

	private static void _initOperationDesc13() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetLicenseEdition");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "featureKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailableFault"),
				"com.vmware.vim25.LicenseServerUnavailable",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailable"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[120] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckLicenseFeature");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "featureKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[121] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableFeature");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "featureKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailableFault"),
				"com.vmware.vim25.LicenseServerUnavailable",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailable"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[122] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisableFeature");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "featureKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailableFault"),
				"com.vmware.vim25.LicenseServerUnavailable",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailable"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[123] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ConfigureLicenseSource");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseSource"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "LicenseSource"),
				com.vmware.vim25.LicenseSource.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"CannotAccessLocalSourceFault"),
				"com.vmware.vim25.CannotAccessLocalSource",
				new javax.xml.namespace.QName("urn:vim25",
						"CannotAccessLocalSource"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailableFault"),
				"com.vmware.vim25.LicenseServerUnavailable",
				new javax.xml.namespace.QName("urn:vim25",
						"LicenseServerUnavailable"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidLicenseFault"),
				"com.vmware.vim25.InvalidLicense",
				new javax.xml.namespace.QName("urn:vim25", "InvalidLicense"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[124] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "labels"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "KeyValue"),
				com.vmware.vim25.KeyValue[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseManagerLicenseInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[125] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "labels"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "KeyValue"),
				com.vmware.vim25.KeyValue[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseManagerLicenseInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[126] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[127] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DecodeLicense");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseInfo"));
		oper.setReturnClass(com.vmware.vim25.LicenseManagerLicenseInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[128] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateLicenseLabel");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "labelKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "labelValue"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[129] = oper;

	}

	private static void _initOperationDesc14() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveLicenseLabel");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "licenseKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "labelKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[130] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Reload");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[131] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Rename_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[132] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Destroy_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "VimFaultFault"),
				"com.vmware.vim25.VimFault", new javax.xml.namespace.QName(
						"urn:vim25", "VimFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[133] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyNetwork");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[134] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ValidateHost");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ovfDescriptor"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vhp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"OvfValidateHostParams"),
				com.vmware.vim25.OvfValidateHostParams.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"OvfValidateHostResult"));
		oper.setReturnClass(com.vmware.vim25.OvfValidateHostResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[135] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ParseDescriptor");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ovfDescriptor"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pdp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"OvfParseDescriptorParams"),
				com.vmware.vim25.OvfParseDescriptorParams.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"OvfParseDescriptorResult"));
		oper.setReturnClass(com.vmware.vim25.OvfParseDescriptorResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[136] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateImportSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ovfDescriptor"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resourcePool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cisp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"OvfCreateImportSpecParams"),
				com.vmware.vim25.OvfCreateImportSpecParams.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateImportSpecResult"));
		oper.setReturnClass(com.vmware.vim25.OvfCreateImportSpecResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[137] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateDescriptor");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cdp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"OvfCreateDescriptorParams"),
				com.vmware.vim25.OvfCreateDescriptorParams.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateDescriptorResult"));
		oper.setReturnClass(com.vmware.vim25.OvfCreateDescriptorResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[138] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPerfProviderSummary");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfProviderSummary"));
		oper.setReturnClass(com.vmware.vim25.PerfProviderSummary.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[139] = oper;

	}

	private static void _initOperationDesc15() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAvailablePerfMetric");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "beginTime"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "dateTime"),
				java.util.Calendar.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "endTime"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "dateTime"),
				java.util.Calendar.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "intervalId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"),
				java.lang.Integer.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfMetricId"));
		oper.setReturnClass(com.vmware.vim25.PerfMetricId[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[140] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPerfCounter");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "counterId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"),
				int[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfCounterInfo"));
		oper.setReturnClass(com.vmware.vim25.PerfCounterInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[141] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPerfCounterByLevel");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "level"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfCounterInfo"));
		oper.setReturnClass(com.vmware.vim25.PerfCounterInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[142] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPerf");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "querySpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PerfQuerySpec"),
				com.vmware.vim25.PerfQuerySpec[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfEntityMetricBase"));
		oper.setReturnClass(com.vmware.vim25.PerfEntityMetricBase[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[143] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPerfComposite");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "querySpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PerfQuerySpec"),
				com.vmware.vim25.PerfQuerySpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PerfCompositeMetric"));
		oper.setReturnClass(com.vmware.vim25.PerfCompositeMetric.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[144] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreatePerfInterval");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "intervalId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PerfInterval"),
				com.vmware.vim25.PerfInterval.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[145] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemovePerfInterval");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "samplePeriod"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[146] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdatePerfInterval");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "interval"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "PerfInterval"),
				com.vmware.vim25.PerfInterval.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[147] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EstimateDatabaseSize");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dbSizeParam"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "DatabaseSizeParam"),
				com.vmware.vim25.DatabaseSizeParam.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DatabaseSizeEstimate"));
		oper.setReturnClass(com.vmware.vim25.DatabaseSizeEstimate.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[148] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec"),
				com.vmware.vim25.ResourceConfigSpec.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[149] = oper;

	}

	private static void _initOperationDesc16() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveIntoResourcePool");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "list"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[150] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateChildResourceConfiguration");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec"),
				com.vmware.vim25.ResourceConfigSpec[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[151] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateResourcePool");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec"),
				com.vmware.vim25.ResourceConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[152] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyChildren");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[153] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateVApp");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec"),
				com.vmware.vim25.ResourceConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "configSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VAppConfigSpec"),
				com.vmware.vim25.VAppConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmFolder"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[154] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateChildVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineConfigSpec"),
				com.vmware.vim25.VirtualMachineConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[155] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RegisterChildVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "path"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[156] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ImportVApp");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ImportSpec"),
				com.vmware.vim25.ImportSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "folder"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[157] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindByUuid");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "uuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "instanceUuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[158] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindByDatastorePath");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "path"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[159] = oper;

	}

	private static void _initOperationDesc17() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindByDnsName");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dnsName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[160] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindByIp");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ip"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[161] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindByInventoryPath");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "inventoryPath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[162] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindChild");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[163] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindAllByUuid");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "uuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "instanceUuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[164] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindAllByDnsName");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dnsName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[165] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindAllByIp");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ip"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmSearch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[166] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CurrentTime");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "dateTime"));
		oper.setReturnClass(java.util.Calendar.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[167] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveServiceContent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ServiceContent"));
		oper.setReturnClass(com.vmware.vim25.ServiceContent.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[168] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ValidateMigration");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "state"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachinePowerState"),
				com.vmware.vim25.VirtualMachinePowerState.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "testType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "Event"));
		oper.setReturnClass(com.vmware.vim25.Event[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[169] = oper;

	}

	private static void _initOperationDesc18() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVMotionCompatibility");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "compatibility"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostVMotionCompatibility"));
		oper.setReturnClass(com.vmware.vim25.HostVMotionCompatibility[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[170] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveProductComponents");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ProductComponentInfo"));
		oper.setReturnClass(com.vmware.vim25.ProductComponentInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[171] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateServiceMessage");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "message"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[172] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Login");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "password"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[173] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("LoginBySSPI");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "base64Token"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SSPIChallengeFault"),
						"com.vmware.vim25.SSPIChallenge",
						new javax.xml.namespace.QName("urn:vim25",
								"SSPIChallenge"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[174] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Logout");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[175] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AcquireLocalTicket");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"SessionManagerLocalTicket"));
		oper.setReturnClass(com.vmware.vim25.SessionManagerLocalTicket.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[176] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("TerminateSession");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sessionId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[177] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetLocale");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[178] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("LoginExtensionBySubjectName");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"NoSubjectNameFault"),
						"com.vmware.vim25.NoSubjectName",
						new javax.xml.namespace.QName("urn:vim25",
								"NoSubjectName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificateFault"),
				"com.vmware.vim25.NoClientCertificate",
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificate"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[179] = oper;

	}

	private static void _initOperationDesc19() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("LoginExtensionByCertificate");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extensionKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificateFault"),
				"com.vmware.vim25.NoClientCertificate",
				new javax.xml.namespace.QName("urn:vim25",
						"NoClientCertificate"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[180] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ImpersonateUser");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "locale"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocaleFault"),
						"com.vmware.vim25.InvalidLocale",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLocale"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[181] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SessionIsActive");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sessionID"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[182] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AcquireCloneTicket");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[183] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CloneSession");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cloneTicket"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSession"));
		oper.setReturnClass(com.vmware.vim25.UserSession.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLoginFault"),
						"com.vmware.vim25.InvalidLogin",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidLogin"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[184] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CancelTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[185] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateProgress");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "percentDone"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "OutOfBoundsFault"),
				"com.vmware.vim25.OutOfBounds", new javax.xml.namespace.QName(
						"urn:vim25", "OutOfBounds"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[186] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetTaskState");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "state"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "TaskInfoState"),
				com.vmware.vim25.TaskInfoState.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "result"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "anyType"),
				java.lang.Object.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "fault"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"LocalizedMethodFault"),
				com.vmware.vim25.LocalizedMethodFault.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[187] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetTaskDescription");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "description"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "LocalizableMessage"),
				com.vmware.vim25.LocalizableMessage.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[188] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReadNextTasks");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "maxCount"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"TaskInfo"));
		oper.setReturnClass(com.vmware.vim25.TaskInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[189] = oper;

	}

	private static void _initOperationDesc20() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReadPreviousTasks");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "maxCount"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"TaskInfo"));
		oper.setReturnClass(com.vmware.vim25.TaskInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[190] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateCollectorForTasks");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "filter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpec"),
				com.vmware.vim25.TaskFilterSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[191] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "taskTypeId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "initiatedBy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cancelable"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "parentTaskKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"TaskInfo"));
		oper.setReturnClass(com.vmware.vim25.TaskInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[192] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveUserGroups");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "domain"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "searchStr"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "belongsToGroup"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "belongsToUser"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "exactMatch"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "findUsers"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "findGroups"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"UserSearchResult"));
		oper.setReturnClass(com.vmware.vim25.UserSearchResult[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[193] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateVAppConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VAppConfigSpec"),
				com.vmware.vim25.VAppConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[194] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CloneVApp_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "target"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpec"),
				com.vmware.vim25.VAppCloneSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"MigrationFaultFault"),
				"com.vmware.vim25.MigrationFault",
				new javax.xml.namespace.QName("urn:vim25", "MigrationFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[195] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExportVApp");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[196] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerOnVApp_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VAppConfigFaultFault"),
				"com.vmware.vim25.VAppConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "VAppConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[197] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerOffVApp_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VAppConfigFaultFault"),
				"com.vmware.vim25.VAppConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "VAppConfigFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[198] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("unregisterVApp_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[199] = oper;

	}

	private static void _initOperationDesc21() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSpec"),
				com.vmware.vim25.VirtualDiskSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[200] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeleteVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[201] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MoveVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[202] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CopyVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "sourceDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destDatacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "destSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSpec"),
				com.vmware.vim25.VirtualDiskSpec.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[203] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExtendVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "newCapacityKb"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "long"),
				long.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "eagerZero"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[204] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVirtualDiskFragmentation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "int"));
		oper.setReturnClass(int.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[205] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DefragmentVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[206] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ShrinkVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "copy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[207] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("InflateVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[208] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EagerZeroVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[209] = oper;

	}

	private static void _initOperationDesc22() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ZeroFillVirtualDisk_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[210] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetVirtualDiskUuid");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "uuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[211] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVirtualDiskUuid");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[212] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVirtualDiskGeometry");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datacenter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiskDimensionsChs"));
		oper.setReturnClass(com.vmware.vim25.HostDiskDimensionsChs.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[213] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshStorageInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[214] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateSnapshot_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "description"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "memory"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "quiesce"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[215] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RevertToCurrentSnapshot_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "suppressPowerOn"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[216] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveAllSnapshots_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[217] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineConfigSpec"),
				com.vmware.vim25.VirtualMachineConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[218] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpgradeVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "version"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"AlreadyUpgradedFault"),
				"com.vmware.vim25.AlreadyUpgraded",
				new javax.xml.namespace.QName("urn:vim25", "AlreadyUpgraded"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NoDiskFoundFault"),
				"com.vmware.vim25.NoDiskFound", new javax.xml.namespace.QName(
						"urn:vim25", "NoDiskFound"), true));
		_operations[219] = oper;

	}

	private static void _initOperationDesc23() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExtractOvfEnvironment");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[220] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerOnVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[221] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PowerOffVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[222] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SuspendVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[223] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[224] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ShutdownGuest");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[225] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RebootGuest");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[226] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StandbyGuest");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[227] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AnswerVM");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "questionId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "answerChoice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[228] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CustomizeVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "CustomizationSpec"),
				com.vmware.vim25.CustomizationSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[229] = oper;

	}

	private static void _initOperationDesc24() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckCustomizationSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "CustomizationSpec"),
				com.vmware.vim25.CustomizationSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[230] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MigrateVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "priority"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineMovePriority"),
				com.vmware.vim25.VirtualMachineMovePriority.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "state"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachinePowerState"),
				com.vmware.vim25.VirtualMachinePowerState.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"MigrationFaultFault"),
				"com.vmware.vim25.MigrationFault",
				new javax.xml.namespace.QName("urn:vim25", "MigrationFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[231] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RelocateVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineRelocateSpec"),
				com.vmware.vim25.VirtualMachineRelocateSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "priority"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineMovePriority"),
				com.vmware.vim25.VirtualMachineMovePriority.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "TimedoutFault"),
				"com.vmware.vim25.Timedout", new javax.xml.namespace.QName(
						"urn:vim25", "Timedout"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"MigrationFaultFault"),
				"com.vmware.vim25.MigrationFault",
				new javax.xml.namespace.QName("urn:vim25", "MigrationFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[232] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CloneVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "folder"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineCloneSpec"),
				com.vmware.vim25.VirtualMachineCloneSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFaultFault"),
						"com.vmware.vim25.CustomizationFault",
						new javax.xml.namespace.QName("urn:vim25",
								"CustomizationFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"MigrationFaultFault"),
				"com.vmware.vim25.MigrationFault",
				new javax.xml.namespace.QName("urn:vim25", "MigrationFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[233] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExportVm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[234] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MarkAsTemplate");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[235] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MarkAsVirtualMachine");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[236] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnregisterVM");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[237] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetGuestInformation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[238] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MountToolsInstaller");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[239] = oper;

	}

	private static void _initOperationDesc25() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnmountToolsInstaller");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[240] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpgradeTools_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "installerOptions"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmToolsUpgradeFaultFault"),
				"com.vmware.vim25.VmToolsUpgradeFault",
				new javax.xml.namespace.QName("urn:vim25",
						"VmToolsUpgradeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[241] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AcquireMksTicket");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMksTicket"));
		oper.setReturnClass(com.vmware.vim25.VirtualMachineMksTicket.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[242] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetScreenResolution");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "width"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "height"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[243] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DefragmentAllDisks");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[244] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateSecondaryVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[245] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("TurnOffFaultToleranceForVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[246] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("MakePrimaryVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[247] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("TerminateFaultTolerantVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[248] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisableSecondaryVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[249] = oper;

	}

	private static void _initOperationDesc26() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableSecondaryVM_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssueFault"),
				"com.vmware.vim25.VmFaultToleranceIssue",
				new javax.xml.namespace.QName("urn:vim25",
						"VmFaultToleranceIssue"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[250] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetDisplayTopology");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "displays"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineDisplayTopology"),
				com.vmware.vim25.VirtualMachineDisplayTopology[].class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ToolsUnavailableFault"),
				"com.vmware.vim25.ToolsUnavailable",
				new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[251] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StartRecording_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "description"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostIncompatibleForRecordReplayFault"),
				"com.vmware.vim25.HostIncompatibleForRecordReplay",
				new javax.xml.namespace.QName("urn:vim25",
						"HostIncompatibleForRecordReplay"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RecordReplayDisabledFault"),
				"com.vmware.vim25.RecordReplayDisabled",
				new javax.xml.namespace.QName("urn:vim25",
						"RecordReplayDisabled"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[252] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StopRecording_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[253] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StartReplaying_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "replaySnapshot"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostIncompatibleForRecordReplayFault"),
				"com.vmware.vim25.HostIncompatibleForRecordReplay",
				new javax.xml.namespace.QName("urn:vim25",
						"HostIncompatibleForRecordReplay"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RecordReplayDisabledFault"),
				"com.vmware.vim25.RecordReplayDisabled",
				new javax.xml.namespace.QName("urn:vim25",
						"RecordReplayDisabled"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[254] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StopReplaying_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFaultFault"),
						"com.vmware.vim25.SnapshotFault",
						new javax.xml.namespace.QName("urn:vim25",
								"SnapshotFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[255] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PromoteDisks_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "unlink"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "disks"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "VirtualDisk"),
				com.vmware.vim25.VirtualDisk[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerStateFault"),
						"com.vmware.vim25.InvalidPowerState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidPowerState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[256] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateScreenshot_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[257] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryChangedDiskAreas");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "snapshot"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "deviceKey"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "startOffset"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "long"),
				long.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "changeId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DiskChangeInfo"));
		oper.setReturnClass(com.vmware.vim25.DiskChangeInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[258] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryUnownedFiles");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[259] = oper;

	}

	private static void _initOperationDesc27() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveAlarm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[260] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureAlarm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "AlarmSpec"),
				com.vmware.vim25.AlarmSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[261] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateAlarm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "AlarmSpec"),
				com.vmware.vim25.AlarmSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[262] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GetAlarm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[263] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AreAlarmActionsEnabled");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "boolean"));
		oper.setReturnClass(boolean.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[264] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableAlarmActions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "enabled"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[265] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GetAlarmState");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"AlarmState"));
		oper.setReturnClass(com.vmware.vim25.AlarmState[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[266] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AcknowledgeAlarm");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "alarm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[267] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureDVPortgroup_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DVPortgroupConfigSpec"),
				com.vmware.vim25.DVPortgroupConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "DvsFaultFault"),
				"com.vmware.vim25.DvsFault", new javax.xml.namespace.QName(
						"urn:vim25", "DvsFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ConcurrentAccessFault"),
				"com.vmware.vim25.ConcurrentAccess",
				new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[268] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAvailableDvsSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchProductSpec"));
		oper
				.setReturnClass(com.vmware.vim25.DistributedVirtualSwitchProductSpec[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[269] = oper;

	}

	private static void _initOperationDesc28() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryCompatibleHostForNewDvs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "container"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "recursive"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "switchProductSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DistributedVirtualSwitchProductSpec"),
				com.vmware.vim25.DistributedVirtualSwitchProductSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[270] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryCompatibleHostForExistingDvs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "container"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "recursive"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dvs"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[271] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryDvsCompatibleHostSpec");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "switchProductSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"DistributedVirtualSwitchProductSpec"),
				com.vmware.vim25.DistributedVirtualSwitchProductSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostProductSpec"));
		oper
				.setReturnClass(com.vmware.vim25.DistributedVirtualSwitchHostProductSpec[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[272] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryDvsByUuid");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "uuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[273] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryDvsConfigTarget");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dvs"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"DVSManagerDvsConfigTarget"));
		oper.setReturnClass(com.vmware.vim25.DVSManagerDvsConfigTarget.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[274] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReadNextEvents");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "maxCount"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "Event"));
		oper.setReturnClass(com.vmware.vim25.Event[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[275] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReadPreviousEvents");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "maxCount"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "int"), int.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "Event"));
		oper.setReturnClass(com.vmware.vim25.Event[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[276] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveArgumentDescription");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "eventTypeId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"EventArgDesc"));
		oper.setReturnClass(com.vmware.vim25.EventArgDesc[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[277] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateCollectorForEvents");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "filter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "EventFilterSpec"),
				com.vmware.vim25.EventFilterSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[278] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("LogUserEvent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "msg"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[279] = oper;

	}

	private static void _initOperationDesc29() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryEvents");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "filter"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "EventFilterSpec"),
				com.vmware.vim25.EventFilterSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "Event"));
		oper.setReturnClass(com.vmware.vim25.Event[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[280] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("PostEvent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "eventToPost"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "Event"),
				com.vmware.vim25.Event.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "taskInfo"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "TaskInfo"),
				com.vmware.vim25.TaskInfo.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidEventFault"),
						"com.vmware.vim25.InvalidEvent",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidEvent"), true));
		_operations[281] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureAutostart");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostAutoStartManagerConfig"),
				com.vmware.vim25.HostAutoStartManagerConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[282] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AutoStartPowerOn");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[283] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AutoStartPowerOff");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[284] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryBootDevices");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostBootDeviceInfo"));
		oper.setReturnClass(com.vmware.vim25.HostBootDeviceInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[285] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateBootDevice");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "key"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[286] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableHyperThreading");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[287] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisableHyperThreading");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[288] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SearchDatastore_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastorePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "searchSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDatastoreBrowserSearchSpec"),
				com.vmware.vim25.HostDatastoreBrowserSearchSpec.class, false,
				false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[289] = oper;

	}

	private static void _initOperationDesc30() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SearchDatastoreSubFolders_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastorePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "searchSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDatastoreBrowserSearchSpec"),
				com.vmware.vim25.HostDatastoreBrowserSearchSpec.class, false,
				false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[290] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeleteFile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastorePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidDatastoreFault"),
				"com.vmware.vim25.InvalidDatastore",
				new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[291] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateLocalSwapDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InaccessibleDatastoreFault"),
				"com.vmware.vim25.InaccessibleDatastore",
				new javax.xml.namespace.QName("urn:vim25",
						"InaccessibleDatastore"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"DatastoreNotWritableOnHostFault"),
				"com.vmware.vim25.DatastoreNotWritableOnHost",
				new javax.xml.namespace.QName("urn:vim25",
						"DatastoreNotWritableOnHost"), true));
		_operations[292] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAvailableDisksForVmfs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostScsiDisk"));
		oper.setReturnClass(com.vmware.vim25.HostScsiDisk[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[293] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVmfsDatastoreCreateOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "devicePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreOption"));
		oper.setReturnClass(com.vmware.vim25.VmfsDatastoreOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[294] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateVmfsDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VmfsDatastoreCreateSpec"),
				com.vmware.vim25.VmfsDatastoreCreateSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[295] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVmfsDatastoreExtendOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "devicePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"suppressExpandCandidates"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreOption"));
		oper.setReturnClass(com.vmware.vim25.VmfsDatastoreOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[296] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVmfsDatastoreExpandOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreOption"));
		oper.setReturnClass(com.vmware.vim25.VmfsDatastoreOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[297] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExtendVmfsDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VmfsDatastoreExtendSpec"),
				com.vmware.vim25.VmfsDatastoreExtendSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[298] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExpandVmfsDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VmfsDatastoreExpandSpec"),
				com.vmware.vim25.VmfsDatastoreExpandSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[299] = oper;

	}

	private static void _initOperationDesc31() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateNasDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeSpec"),
				com.vmware.vim25.HostNasVolumeSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[300] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateLocalDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "path"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"FileNotFoundFault"),
						"com.vmware.vim25.FileNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"FileNotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[301] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveDatastore");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "datastore"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[302] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ConfigureDatastorePrincipal");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "password"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[303] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryUnresolvedVmfsVolumes");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsVolume"));
		oper.setReturnClass(com.vmware.vim25.HostUnresolvedVmfsVolume[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[304] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResignatureUnresolvedVmfsVolume_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resolutionSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostUnresolvedVmfsResignatureSpec"),
				com.vmware.vim25.HostUnresolvedVmfsResignatureSpec.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmfsAmbiguousMountFault"),
						"com.vmware.vim25.VmfsAmbiguousMount",
						new javax.xml.namespace.QName("urn:vim25",
								"VmfsAmbiguousMount"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[305] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDateTimeConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostDateTimeConfig"),
				com.vmware.vim25.HostDateTimeConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[306] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAvailableTimeZones");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDateTimeSystemTimeZone"));
		oper
				.setReturnClass(com.vmware.vim25.HostDateTimeSystemTimeZone[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[307] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryDateTime");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "dateTime"));
		oper.setReturnClass(java.util.Calendar.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[308] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDateTime");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "dateTime"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "dateTime"),
				java.util.Calendar.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[309] = oper;

	}

	private static void _initOperationDesc32() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshDateTimeSystem");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[310] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryAvailablePartition");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartition"));
		oper.setReturnClass(com.vmware.vim25.HostDiagnosticPartition[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[311] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SelectActivePartition");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "partition"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostScsiDiskPartition"),
				com.vmware.vim25.HostScsiDiskPartition.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[312] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPartitionCreateOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "storageType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "diagnosticType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartitionCreateOption"));
		oper
				.setReturnClass(com.vmware.vim25.HostDiagnosticPartitionCreateOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[313] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPartitionCreateDesc");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "diskUuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "diagnosticType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartitionCreateDescription"));
		oper
				.setReturnClass(com.vmware.vim25.HostDiagnosticPartitionCreateDescription.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[314] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateDiagnosticPartition");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDiagnosticPartitionCreateSpec"),
				com.vmware.vim25.HostDiagnosticPartitionCreateSpec.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[315] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDefaultPolicy");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "defaultPolicy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostFirewallDefaultPolicy"),
				com.vmware.vim25.HostFirewallDefaultPolicy.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[316] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableRuleset");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[317] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisableRuleset");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[318] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshFirewall");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[319] = oper;

	}

	private static void _initOperationDesc33() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetFirmwareToFactoryDefaults");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[320] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("BackupFirmwareConfiguration");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[321] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryFirmwareConfigUploadURL");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[322] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RestoreFirmwareConfiguration");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"MismatchedBundleFault"),
				"com.vmware.vim25.MismatchedBundle",
				new javax.xml.namespace.QName("urn:vim25", "MismatchedBundle"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidBundleFault"),
						"com.vmware.vim25.InvalidBundle",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidBundle"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[323] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshHealthStatusSystem");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[324] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetSystemHealthInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[325] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryModules");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"KernelModuleInfo"));
		oper.setReturnClass(com.vmware.vim25.KernelModuleInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[326] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateModuleOptionString");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "options"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[327] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryConfiguredModuleOptionString");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[328] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateUser");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "user"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostAccountSpec"),
				com.vmware.vim25.HostAccountSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[329] = oper;

	}

	private static void _initOperationDesc34() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateUser");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "user"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostAccountSpec"),
				com.vmware.vim25.HostAccountSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[330] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "group"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostAccountSpec"),
				com.vmware.vim25.HostAccountSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[331] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveUser");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "userName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[332] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "groupName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[333] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AssignUserToGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "user"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "group"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[334] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnassignUserFromGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "user"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "group"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFoundFault"),
						"com.vmware.vim25.UserNotFound",
						new javax.xml.namespace.QName("urn:vim25",
								"UserNotFound"), true));
		_operations[335] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureServiceConsoleReservation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "cfgBytes"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "long"),
				long.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[336] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureVirtualMachineReservation");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineMemoryReservationSpec"),
				com.vmware.vim25.VirtualMachineMemoryReservationSpec.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[337] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateNetworkConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostNetworkConfig"),
				com.vmware.vim25.HostNetworkConfig.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "changeMode"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostNetworkConfigResult"));
		oper.setReturnClass(com.vmware.vim25.HostNetworkConfigResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[338] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDnsConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostDnsConfig"),
				com.vmware.vim25.HostDnsConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[339] = oper;

	}

	private static void _initOperationDesc35() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateIpRouteConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostIpRouteConfig"),
				com.vmware.vim25.HostIpRouteConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[340] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateConsoleIpRouteConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostIpRouteConfig"),
				com.vmware.vim25.HostIpRouteConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[341] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateIpRouteTableConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostIpRouteTableConfig"),
				com.vmware.vim25.HostIpRouteTableConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[342] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddVirtualSwitch");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vswitchName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostVirtualSwitchSpec"),
				com.vmware.vim25.HostVirtualSwitchSpec.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[343] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveVirtualSwitch");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vswitchName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[344] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateVirtualSwitch");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vswitchName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostVirtualSwitchSpec"),
				com.vmware.vim25.HostVirtualSwitchSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[345] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddPortGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portgrp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostPortGroupSpec"),
				com.vmware.vim25.HostPortGroupSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[346] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemovePortGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pgName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[347] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdatePortGroup");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pgName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portgrp"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostPortGroupSpec"),
				com.vmware.vim25.HostPortGroupSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[348] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdatePhysicalNicLinkSpeed");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "linkSpeed"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"PhysicalNicLinkInfo"),
				com.vmware.vim25.PhysicalNicLinkInfo.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[349] = oper;

	}

	private static void _initOperationDesc36() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryNetworkHint");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"PhysicalNicHintInfo"));
		oper.setReturnClass(com.vmware.vim25.PhysicalNicHintInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[350] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portgroup"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nic"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec"),
				com.vmware.vim25.HostVirtualNicSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[351] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[352] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nic"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec"),
				com.vmware.vim25.HostVirtualNicSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[353] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddServiceConsoleVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "portgroup"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nic"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec"),
				com.vmware.vim25.HostVirtualNicSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[354] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveServiceConsoleVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[355] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateServiceConsoleVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nic"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec"),
				com.vmware.vim25.HostVirtualNicSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUseFault"),
						"com.vmware.vim25.ResourceInUse",
						new javax.xml.namespace.QName("urn:vim25",
								"ResourceInUse"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[356] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RestartServiceConsoleVirtualNic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[357] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshNetworkSystem");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[358] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "metaUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "bundleUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[359] = oper;

	}

	private static void _initOperationDesc37() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ScanHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "repository"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerLocator"),
				com.vmware.vim25.HostPatchManagerLocator.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "updateID"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PatchMetadataInvalidFault"),
				"com.vmware.vim25.PatchMetadataInvalid",
				new javax.xml.namespace.QName("urn:vim25",
						"PatchMetadataInvalid"), true));
		_operations[360] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ScanHostPatchV2_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "metaUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "bundleUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[361] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StageHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "metaUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "bundleUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vibUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[362] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("InstallHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "repository"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerLocator"),
				com.vmware.vim25.HostPatchManagerLocator.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "updateID"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "force"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NoDiskSpaceFault"),
				"com.vmware.vim25.NoDiskSpace", new javax.xml.namespace.QName(
						"urn:vim25", "NoDiskSpace"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RebootRequiredFault"),
				"com.vmware.vim25.RebootRequired",
				new javax.xml.namespace.QName("urn:vim25", "RebootRequired"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PatchBinariesNotFoundFault"),
				"com.vmware.vim25.PatchBinariesNotFound",
				new javax.xml.namespace.QName("urn:vim25",
						"PatchBinariesNotFound"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"PatchNotApplicableFault"),
						"com.vmware.vim25.PatchNotApplicable",
						new javax.xml.namespace.QName("urn:vim25",
								"PatchNotApplicable"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"PatchInstallFailedFault"),
						"com.vmware.vim25.PatchInstallFailed",
						new javax.xml.namespace.QName("urn:vim25",
								"PatchInstallFailed"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PatchMetadataInvalidFault"),
				"com.vmware.vim25.PatchMetadataInvalid",
				new javax.xml.namespace.QName("urn:vim25",
						"PatchMetadataInvalid"), true));
		_operations[363] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("InstallHostPatchV2_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "metaUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "bundleUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vibUrls"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[364] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UninstallHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "bulletinIds"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[365] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryHostPatch_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPatchManagerPatchManagerOperationSpec"),
				com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFaultFault"),
				"com.vmware.vim25.PlatformConfigFault",
				new javax.xml.namespace.QName("urn:vim25",
						"PlatformConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"RequestCanceledFault"),
				"com.vmware.vim25.RequestCanceled",
				new javax.xml.namespace.QName("urn:vim25", "RequestCanceled"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[366] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("Refresh");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[367] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdatePassthruConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostPciPassthruConfig"),
				com.vmware.vim25.HostPciPassthruConfig[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[368] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateServicePolicy");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "policy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[369] = oper;

	}

	private static void _initOperationDesc38() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StartService");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[370] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("StopService");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[371] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RestartService");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[372] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UninstallService");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "id"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[373] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshServices");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[374] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureSnmpAgent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostSnmpConfigSpec"),
				com.vmware.vim25.HostSnmpConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[375] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SendTestNotification");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[376] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveDiskPartitionInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "devicePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionInfo"));
		oper.setReturnClass(com.vmware.vim25.HostDiskPartitionInfo[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[377] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ComputeDiskPartitionInfo");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "devicePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "layout"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDiskPartitionLayout"),
				com.vmware.vim25.HostDiskPartitionLayout.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionInfo"));
		oper.setReturnClass(com.vmware.vim25.HostDiskPartitionInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[378] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ComputeDiskPartitionInfoForResize");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "partition"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostScsiDiskPartition"),
				com.vmware.vim25.HostScsiDiskPartition.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "blockRange"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDiskPartitionBlockRange"),
				com.vmware.vim25.HostDiskPartitionBlockRange.class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionInfo"));
		oper.setReturnClass(com.vmware.vim25.HostDiskPartitionInfo.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[379] = oper;

	}

	private static void _initOperationDesc39() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateDiskPartitions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "devicePath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostDiskPartitionSpec"),
				com.vmware.vim25.HostDiskPartitionSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[380] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FormatVmfs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "createSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostVmfsSpec"),
				com.vmware.vim25.HostVmfsSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostVmfsVolume"));
		oper.setReturnClass(com.vmware.vim25.HostVmfsVolume.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExistsFault"),
						"com.vmware.vim25.AlreadyExists",
						new javax.xml.namespace.QName("urn:vim25",
								"AlreadyExists"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[381] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RescanVmfs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[382] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AttachVmfsExtent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmfsPath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extent"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostScsiDiskPartition"),
				com.vmware.vim25.HostScsiDiskPartition.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[383] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExpandVmfsExtent");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmfsPath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "extent"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostScsiDiskPartition"),
				com.vmware.vim25.HostScsiDiskPartition.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[384] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpgradeVmfs");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmfsPath"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[385] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpgradeVmLayout");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[386] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryUnresolvedVmfsVolume");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsVolume"));
		oper.setReturnClass(com.vmware.vim25.HostUnresolvedVmfsVolume[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[387] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResolveMultipleUnresolvedVmfsVolumes");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "resolutionSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostUnresolvedVmfsResolutionSpec"),
				com.vmware.vim25.HostUnresolvedVmfsResolutionSpec[].class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsResolutionResult"));
		oper
				.setReturnClass(com.vmware.vim25.HostUnresolvedVmfsResolutionResult[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[388] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UnmountForceMountedVmfsVolume");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vmfsUuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[389] = oper;

	}

	private static void _initOperationDesc40() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RescanHba");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "hbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[390] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RescanAllHba");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[391] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateSoftwareInternetScsiEnabled");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "enabled"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[392] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiDiscoveryProperties");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"discoveryProperties"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaDiscoveryProperties"),
				com.vmware.vim25.HostInternetScsiHbaDiscoveryProperties.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[393] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiAuthenticationProperties");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"authenticationProperties"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaAuthenticationProperties"),
				com.vmware.vim25.HostInternetScsiHbaAuthenticationProperties.class,
				false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targetSet"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaTargetSet"),
				com.vmware.vim25.HostInternetScsiHbaTargetSet.class, false,
				false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[394] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiDigestProperties");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targetSet"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaTargetSet"),
				com.vmware.vim25.HostInternetScsiHbaTargetSet.class, false,
				false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "digestProperties"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaDigestProperties"),
				com.vmware.vim25.HostInternetScsiHbaDigestProperties.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[395] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiAdvancedOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targetSet"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaTargetSet"),
				com.vmware.vim25.HostInternetScsiHbaTargetSet.class, false,
				false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "options"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaParamValue"),
				com.vmware.vim25.HostInternetScsiHbaParamValue[].class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[396] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiIPProperties");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ipProperties"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaIPProperties"),
				com.vmware.vim25.HostInternetScsiHbaIPProperties.class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[397] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiName");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[398] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateInternetScsiAlias");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiAlias"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[399] = oper;

	}

	private static void _initOperationDesc41() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddInternetScsiSendTargets");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targets"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaSendTarget"),
				com.vmware.vim25.HostInternetScsiHbaSendTarget[].class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[400] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveInternetScsiSendTargets");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targets"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaSendTarget"),
				com.vmware.vim25.HostInternetScsiHbaSendTarget[].class, false,
				false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[401] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AddInternetScsiStaticTargets");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targets"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaStaticTarget"),
				com.vmware.vim25.HostInternetScsiHbaStaticTarget[].class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[402] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveInternetScsiStaticTargets");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "iScsiHbaDevice"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "targets"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostInternetScsiHbaStaticTarget"),
				com.vmware.vim25.HostInternetScsiHbaStaticTarget[].class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[403] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("EnableMultipathPath");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pathName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[404] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DisableMultipathPath");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pathName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[405] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SetMultipathLunPolicy");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "lunId"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "policy"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostMultipathInfoLogicalUnitPolicy"),
				com.vmware.vim25.HostMultipathInfoLogicalUnitPolicy.class,
				false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[406] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPathSelectionPolicyOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostPathSelectionPolicyOption"));
		oper
				.setReturnClass(com.vmware.vim25.HostPathSelectionPolicyOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[407] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryStorageArrayTypePolicyOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostStorageArrayTypePolicyOption"));
		oper
				.setReturnClass(com.vmware.vim25.HostStorageArrayTypePolicyOption[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[408] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateScsiLunDisplayName");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "lunUuid"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "displayName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[409] = oper;

	}

	private static void _initOperationDesc42() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RefreshStorageSystem");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[410] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateIpConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "ipConfig"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostIpConfig"),
				com.vmware.vim25.HostIpConfig.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "NotFoundFault"),
				"com.vmware.vim25.NotFound", new javax.xml.namespace.QName(
						"urn:vim25", "NotFound"), true));
		_operations[411] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SelectVnic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[412] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeselectVnic");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[413] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryNetConfig");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nicType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"VirtualNicManagerNetConfig"));
		oper.setReturnClass(com.vmware.vim25.VirtualNicManagerNetConfig.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidArgumentFault"),
				"com.vmware.vim25.InvalidArgument",
				new javax.xml.namespace.QName("urn:vim25", "InvalidArgument"),
				true));
		_operations[414] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("SelectVnicForNicType");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nicType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidArgumentFault"),
				"com.vmware.vim25.InvalidArgument",
				new javax.xml.namespace.QName("urn:vim25", "InvalidArgument"),
				true));
		_operations[415] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DeselectVnicForNicType");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "nicType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "device"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFaultFault"),
				"com.vmware.vim25.HostConfigFault",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFault"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InvalidArgumentFault"),
				"com.vmware.vim25.InvalidArgument",
				new javax.xml.namespace.QName("urn:vim25", "InvalidArgument"),
				true));
		_operations[416] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"OptionValue"));
		oper.setReturnClass(com.vmware.vim25.OptionValue[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[417] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateOptions");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "changedValue"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "OptionValue"),
				com.vmware.vim25.OptionValue[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[418] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckCompliance_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "profile"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[419] = oper;

	}

	private static void _initOperationDesc43() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryComplianceStatus");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "profile"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ComplianceResult"));
		oper.setReturnClass(com.vmware.vim25.ComplianceResult[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[420] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ClearComplianceStatus");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "profile"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[421] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryExpressionMetadata");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "expressionName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ProfileExpressionMetadata"));
		oper.setReturnClass(com.vmware.vim25.ProfileExpressionMetadata[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[422] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[423] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("AssociateProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[424] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DissociateProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[425] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckProfileCompliance_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[426] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExportProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName(
				"http://www.w3.org/2001/XMLSchema", "string"));
		oper.setReturnClass(java.lang.String.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[427] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "createSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ProfileCreateSpec"),
				com.vmware.vim25.ProfileCreateSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[428] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryPolicyMetadata");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "policyName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ProfilePolicyMetadata"));
		oper.setReturnClass(com.vmware.vim25.ProfilePolicyMetadata[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[429] = oper;

	}

	private static void _initOperationDesc44() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("FindAssociatedProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[430] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateClusterProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ClusterProfileConfigSpec"),
				com.vmware.vim25.ClusterProfileConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[431] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateReferenceHost");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[432] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("UpdateHostProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "config"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"HostProfileConfigSpec"),
				com.vmware.vim25.HostProfileConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"ProfileUpdateFailedFault"),
				"com.vmware.vim25.ProfileUpdateFailed",
				new javax.xml.namespace.QName("urn:vim25",
						"ProfileUpdateFailed"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[433] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ExecuteHostProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "deferredParam"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ProfileDeferredPolicyOptionParameter"),
				com.vmware.vim25.ProfileDeferredPolicyOptionParameter[].class,
				false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ProfileExecuteResult"));
		oper.setReturnClass(com.vmware.vim25.ProfileExecuteResult.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[434] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ApplyHostConfig_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "configSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostConfigSpec"),
				com.vmware.vim25.HostConfigSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"HostConfigFailedFault"),
				"com.vmware.vim25.HostConfigFailed",
				new javax.xml.namespace.QName("urn:vim25", "HostConfigFailed"),
				true));
		_operations[435] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("GenerateConfigTaskList");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "configSpec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "HostConfigSpec"),
				com.vmware.vim25.HostConfigSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"HostProfileManagerConfigTaskList"));
		oper
				.setReturnClass(com.vmware.vim25.HostProfileManagerConfigTaskList.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[436] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryHostProfileMetadata");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "profileName"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ProfileMetadata"));
		oper.setReturnClass(com.vmware.vim25.ProfileMetadata[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[437] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateDefaultProfile");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "profileType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ApplyProfile"));
		oper.setReturnClass(com.vmware.vim25.ApplyProfile.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[438] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[439] = oper;

	}

	private static void _initOperationDesc45() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ReconfigureScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec"),
				com.vmware.vim25.ScheduledTaskSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[440] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RunScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[441] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec"),
				com.vmware.vim25.ScheduledTaskSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[442] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveEntityScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[443] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateObjectScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec"),
				com.vmware.vim25.ScheduledTaskSpec.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateNameFault"),
						"com.vmware.vim25.DuplicateName",
						new javax.xml.namespace.QName("urn:vim25",
								"DuplicateName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[444] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RetrieveObjectScheduledTask");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[445] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("OpenInventoryViewFolder");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[446] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CloseInventoryViewFolder");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "entity"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[447] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ModifyListView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "add"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "remove"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[448] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetListView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference[].class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[449] = oper;

	}

	private static void _initOperationDesc46() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("ResetListViewFromView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "view"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[450] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("DestroyView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[451] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateInventoryView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[452] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateContainerView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "container"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "type"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "recursive"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[453] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateListView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "obj"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[454] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CreateListViewFromView");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "view"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[455] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RevertToSnapshot_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "suppressPowerOn"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				java.lang.Boolean.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFaultFault"),
						"com.vmware.vim25.VmConfigFault",
						new javax.xml.namespace.QName("urn:vim25",
								"VmConfigFault"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "FileFaultFault"),
				"com.vmware.vim25.FileFault", new javax.xml.namespace.QName(
						"urn:vim25", "FileFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFaultFault"),
				"com.vmware.vim25.InsufficientResourcesFault",
				new javax.xml.namespace.QName("urn:vim25",
						"InsufficientResourcesFault"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[456] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RemoveSnapshot_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "removeChildren"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "boolean"),
				boolean.class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"TaskInProgressFault"),
				"com.vmware.vim25.TaskInProgress",
				new javax.xml.namespace.QName("urn:vim25", "TaskInProgress"),
				true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[457] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("RenameSnapshot");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "name"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "description"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25", "InvalidNameFault"),
				"com.vmware.vim25.InvalidName", new javax.xml.namespace.QName(
						"urn:vim25", "InvalidName"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[458] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckCompatibility_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "testType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper.addFault(new org.apache.axis.description.FaultDesc(
				new javax.xml.namespace.QName("urn:vim25",
						"NoActiveHostInClusterFault"),
				"com.vmware.vim25.NoActiveHostInCluster",
				new javax.xml.namespace.QName("urn:vim25",
						"NoActiveHostInCluster"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[459] = oper;

	}

	private static void _initOperationDesc47() {
		org.apache.axis.description.OperationDesc oper;
		org.apache.axis.description.ParameterDesc param;
		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("QueryVMotionCompatibilityEx_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference[].class, false, false);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[460] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckMigrate_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "host"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "pool"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "state"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachinePowerState"),
				com.vmware.vim25.VirtualMachinePowerState.class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "testType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[461] = oper;

		oper = new org.apache.axis.description.OperationDesc();
		oper.setName("CheckRelocate_Task");
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "_this"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "vm"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"ManagedObjectReference"),
				com.vmware.vim25.ManagedObjectReference.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "spec"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName("urn:vim25",
						"VirtualMachineRelocateSpec"),
				com.vmware.vim25.VirtualMachineRelocateSpec.class, false, false);
		oper.addParameter(param);
		param = new org.apache.axis.description.ParameterDesc(
				new javax.xml.namespace.QName("urn:vim25", "testType"),
				org.apache.axis.description.ParameterDesc.IN,
				new javax.xml.namespace.QName(
						"http://www.w3.org/2001/XMLSchema", "string"),
				java.lang.String[].class, false, false);
		param.setOmittable(true);
		oper.addParameter(param);
		oper.setReturnType(new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference"));
		oper.setReturnClass(com.vmware.vim25.ManagedObjectReference.class);
		oper.setReturnQName(new javax.xml.namespace.QName("urn:vim25",
				"returnval"));
		oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
		oper.setUse(org.apache.axis.constants.Use.LITERAL);
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidStateFault"),
						"com.vmware.vim25.InvalidState",
						new javax.xml.namespace.QName("urn:vim25",
								"InvalidState"), true));
		oper
				.addFault(new org.apache.axis.description.FaultDesc(
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFaultFault"),
						"com.vmware.vim25.RuntimeFault",
						new javax.xml.namespace.QName("urn:vim25",
								"RuntimeFault"), true));
		_operations[462] = oper;

	}

	public VimBindingStub() throws org.apache.axis.AxisFault {
		this(null);
	}

	public VimBindingStub(java.net.URL endpointURL,
			javax.xml.rpc.Service service) throws org.apache.axis.AxisFault {
		this(service);
		super.cachedEndpoint = endpointURL;
	}

	public VimBindingStub(javax.xml.rpc.Service service)
			throws org.apache.axis.AxisFault {
		if (service == null) {
			super.service = new org.apache.axis.client.Service();
		} else {
			super.service = service;
		}
		((org.apache.axis.client.Service) super.service)
				.setTypeMappingVersion("1.2");
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		addBindings0();
		addBindings1();
		addBindings2();
		addBindings3();
		addBindings4();
		addBindings5();
		addBindings6();
		addBindings7();
		addBindings8();
		addBindings9();
		addBindings10();
		addBindings11();
		addBindings12();
		addBindings13();
		addBindings14();
		addBindings15();
		addBindings16();
		addBindings17();
		addBindings18();
		addBindings19();
		addBindings20();
		addBindings21();
		addBindings22();
		addBindings23();
		addBindings24();
		addBindings25();
		addBindings26();
		addBindings27();
		addBindings28();
		addBindings29();
		addBindings30();
		addBindings31();
	}

	private void addBindings0() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				">AcknowledgeAlarmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcknowledgeAlarmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AcquireCimServicesTicketResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireCimServicesTicketResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AcquireCloneTicketResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireCloneTicketResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AcquireLocalTicketResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireLocalTicketResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AcquireMksTicketResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireMksTicketResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddAuthorizationRoleResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddAuthorizationRoleResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddCustomFieldDefResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddCustomFieldDefResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddDVPortgroup_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddDVPortgroup_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddInternetScsiSendTargetsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddInternetScsiSendTargetsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddInternetScsiStaticTargetsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddInternetScsiStaticTargetsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddPortGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddPortGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddServiceConsoleVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddServiceConsoleVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddStandaloneHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddStandaloneHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AddVirtualSwitchResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddVirtualSwitchResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">AnswerVMResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AnswerVMResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ApplyHostConfig_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplyHostConfig_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ApplyRecommendationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplyRecommendationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AreAlarmActionsEnabledResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AreAlarmActionsEnabledResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AssignUserToGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AssignUserToGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AssociateProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AssociateProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AttachVmfsExtentResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AttachVmfsExtentResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AutoStartPowerOffResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartPowerOffResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">AutoStartPowerOnResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartPowerOnResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">BackupFirmwareConfigurationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BackupFirmwareConfigurationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">BrowseDiagnosticLogResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BrowseDiagnosticLogResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CancelTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CancelTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CancelWaitForUpdatesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CancelWaitForUpdatesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ChangeOwnerResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ChangeOwnerResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckCompatibility_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCompatibility_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckCompliance_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCompliance_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckCustomizationResourcesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCustomizationResourcesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckForUpdatesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckForUpdatesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckLicenseFeatureResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckLicenseFeatureResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckMigrate_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckMigrate_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckProfileCompliance_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckProfileCompliance_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CheckRelocate_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckRelocate_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ClearComplianceStatusResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClearComplianceStatusResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CloneSessionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneSessionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CloneVApp_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneVApp_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CloneVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CloseInventoryViewFolderResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloseInventoryViewFolderResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ComputeDiskPartitionInfoForResizeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeDiskPartitionInfoForResizeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ComputeDiskPartitionInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeDiskPartitionInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ConfigureDatastorePrincipalResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigureDatastorePrincipalResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ConfigureLicenseSourceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigureLicenseSourceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CopyDatastoreFile_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CopyDatastoreFile_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CopyVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CopyVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateAlarmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateAlarmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateChildVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateChildVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateClusterExResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateClusterExResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateClusterResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateClusterResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateCollectorForEventsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCollectorForEventsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateCollectorForTasksResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCollectorForTasksResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateContainerViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateContainerViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateDatacenterResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDatacenterResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateDefaultProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDefaultProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateDescriptorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDescriptorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateDiagnosticPartitionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDiagnosticPartitionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateDVS_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDVS_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateFilterResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateFilterResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateFolderResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateFolderResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateImportSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateImportSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateInventoryViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateInventoryViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateIpPoolResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateIpPoolResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateListViewFromViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateListViewFromViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateListViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateListViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateLocalDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateLocalDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateNasDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateNasDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateObjectScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateObjectScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreatePerfIntervalResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreatePerfIntervalResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateResourcePoolResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateResourcePoolResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateScreenshot_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateScreenshot_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateSecondaryVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateSecondaryVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateSnapshot_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateSnapshot_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateUserResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateUserResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateVAppResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVAppResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CreateVmfsDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVmfsDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CurrentTimeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CurrentTimeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CustomizationSpecItemToXmlResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSpecItemToXmlResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">CustomizeVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizeVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DecodeLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DecodeLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DefragmentAllDisksResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DefragmentAllDisksResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DefragmentVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DefragmentVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeleteCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeleteDatastoreFile_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteDatastoreFile_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeleteFileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteFileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeleteVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeselectVnicForNicTypeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeselectVnicForNicTypeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings1() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				">DeselectVnicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeselectVnicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">Destroy_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Destroy_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyChildrenResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyChildrenResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyCollectorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyCollectorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyIpPoolResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyIpPoolResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyNetworkResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyNetworkResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyPropertyFilterResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyPropertyFilterResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DestroyViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisableFeatureResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableFeatureResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisableHyperThreadingResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableHyperThreadingResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisableMultipathPathResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableMultipathPathResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisableRulesetResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableRulesetResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisableSecondaryVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableSecondaryVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DisconnectHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisconnectHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DissociateProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DissociateProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DoesCustomizationSpecExistResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DoesCustomizationSpecExistResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">DuplicateCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DuplicateCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EagerZeroVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EagerZeroVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableAlarmActionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableAlarmActionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableFeatureResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableFeatureResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableHyperThreadingResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableHyperThreadingResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableMultipathPathResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableMultipathPathResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableRulesetResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableRulesetResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnableSecondaryVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableSecondaryVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EnterMaintenanceMode_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnterMaintenanceMode_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">EstimateDatabaseSizeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EstimateDatabaseSizeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExecuteHostProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExecuteHostProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExitMaintenanceMode_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitMaintenanceMode_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExpandVmfsDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpandVmfsDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExpandVmfsExtentResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpandVmfsExtentResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExportProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExportVAppResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportVAppResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">ExportVmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportVmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExtendVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExtendVmfsDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendVmfsDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ExtractOvfEnvironmentResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtractOvfEnvironmentResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FetchDVPortKeysResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FetchDVPortKeysResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FetchDVPortsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FetchDVPortsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindAllByDnsNameResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByDnsNameResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindAllByIpResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByIpResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindAllByUuidResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByUuidResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindAssociatedProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAssociatedProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindByDatastorePathResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByDatastorePathResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindByDnsNameResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByDnsNameResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindByInventoryPathResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByInventoryPathResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">FindByIpResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByIpResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindByUuidResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByUuidResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">FindChildResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindChildResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FindExtensionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindExtensionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">FormatVmfsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FormatVmfsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">GenerateConfigTaskListResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenerateConfigTaskListResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">GenerateLogBundles_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenerateLogBundles_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">GetAlarmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetAlarmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">GetAlarmStateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetAlarmStateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">GetCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">GetPublicKeyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetPublicKeyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">HttpNfcLeaseAbortResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseAbortResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">HttpNfcLeaseCompleteResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseCompleteResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">HttpNfcLeaseProgressResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseProgressResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ImpersonateUserResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ImpersonateUserResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ImportVAppResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ImportVAppResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">InflateVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InflateVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">InstallHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InstallHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">InstallHostPatchV2_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InstallHostPatchV2_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">LoginBySSPIResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginBySSPIResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">LoginExtensionByCertificateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginExtensionByCertificateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">LoginExtensionBySubjectNameResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginExtensionBySubjectNameResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">LoginResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">LogoutResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LogoutResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">LogUserEventResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LogUserEventResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MakeDirectoryResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MakeDirectoryResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MakePrimaryVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MakePrimaryVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MarkAsTemplateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MarkAsTemplateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MarkAsVirtualMachineResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MarkAsVirtualMachineResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MergeDvs_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MergeDvs_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MergePermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MergePermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MigrateVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrateVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ModifyListViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ModifyListViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MountToolsInstallerResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MountToolsInstallerResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveDatastoreFile_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveDatastoreFile_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveDVPort_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveDVPort_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveHostInto_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveHostInto_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveInto_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveInto_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveIntoFolder_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveIntoFolder_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveIntoResourcePoolResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveIntoResourcePoolResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">MoveVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">OpenInventoryViewFolderResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OpenInventoryViewFolderResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">OverwriteCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OverwriteCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ParseDescriptorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ParseDescriptorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PerformDvsProductSpecOperation_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerformDvsProductSpecOperation_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">PostEventResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PostEventResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerDownHostToStandBy_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerDownHostToStandBy_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerOffVApp_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOffVApp_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerOffVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOffVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerOnMultiVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnMultiVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerOnVApp_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnVApp_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerOnVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">PowerUpHostFromStandBy_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerUpHostFromStandBy_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings2() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				">PromoteDisks_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PromoteDisks_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAssignedLicensesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAssignedLicensesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAvailableDisksForVmfsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableDisksForVmfsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAvailableDvsSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableDvsSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAvailablePartitionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailablePartitionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAvailablePerfMetricResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailablePerfMetricResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryAvailableTimeZonesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableTimeZonesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryBootDevicesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryBootDevicesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryChangedDiskAreasResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryChangedDiskAreasResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryCompatibleHostForExistingDvsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryCompatibleHostForExistingDvsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryCompatibleHostForNewDvsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryCompatibleHostForNewDvsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryComplianceStatusResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryComplianceStatusResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryConfigOptionDescriptorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigOptionDescriptorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryConfigOptionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigOptionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryConfigTargetResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigTargetResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryConfiguredModuleOptionStringResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfiguredModuleOptionStringResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryConnectionInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConnectionInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryDateTimeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDateTimeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryDescriptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDescriptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryDvsByUuidResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsByUuidResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryDvsCompatibleHostSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsCompatibleHostSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryDvsConfigTargetResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsConfigTargetResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryEventsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryEventsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryExpressionMetadataResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryExpressionMetadataResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryFirmwareConfigUploadURLResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryFirmwareConfigUploadURLResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryHostConnectionInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostConnectionInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryHostProfileMetadataResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostProfileMetadataResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryIpPoolsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryIpPoolsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryLicenseSourceAvailabilityResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryLicenseSourceAvailabilityResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryLicenseUsageResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryLicenseUsageResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryMemoryOverheadExResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryMemoryOverheadExResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryMemoryOverheadResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryMemoryOverheadResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryModulesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryModulesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryNetConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryNetConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryNetworkHintResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryNetworkHintResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPartitionCreateDescResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPartitionCreateDescResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPartitionCreateOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPartitionCreateOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPathSelectionPolicyOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPathSelectionPolicyOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPerfCompositeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCompositeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPerfCounterByLevelResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCounterByLevelResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPerfCounterResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCounterResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPerfProviderSummaryResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfProviderSummaryResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">QueryPerfResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryPolicyMetadataResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPolicyMetadataResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryStorageArrayTypePolicyOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryStorageArrayTypePolicyOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QuerySupportedFeaturesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QuerySupportedFeaturesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryTargetCapabilitiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryTargetCapabilitiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryUnownedFilesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnownedFilesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryUnresolvedVmfsVolumeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnresolvedVmfsVolumeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryUnresolvedVmfsVolumesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnresolvedVmfsVolumesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryUsedVlanIdInDvsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUsedVlanIdInDvsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVirtualDiskFragmentationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskFragmentationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVirtualDiskGeometryResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskGeometryResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVirtualDiskUuidResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskUuidResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVmfsDatastoreCreateOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreCreateOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVmfsDatastoreExpandOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreExpandOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVmfsDatastoreExtendOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreExtendOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVMotionCompatibilityEx_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVMotionCompatibilityEx_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">QueryVMotionCompatibilityResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVMotionCompatibilityResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReadNextEventsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadNextEventsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReadNextTasksResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadNextTasksResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReadPreviousEventsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadPreviousEventsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReadPreviousTasksResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadPreviousTasksResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RebootGuestResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RebootGuestResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RebootHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RebootHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RecommendHostsForVmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecommendHostsForVmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureAlarmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureAlarmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureAutostartResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureAutostartResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureCluster_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureCluster_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureComputeResource_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureComputeResource_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureDVPort_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDVPort_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureDVPortgroup_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDVPortgroup_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureDvs_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDvs_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureHostForDAS_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureHostForDAS_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureServiceConsoleReservationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureServiceConsoleReservationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureSnmpAgentResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureSnmpAgentResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigureVirtualMachineReservationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureVirtualMachineReservationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconfigVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ReconnectHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconnectHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RectifyDvsHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RectifyDvsHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshDatastoreStorageInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDatastoreStorageInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshDateTimeSystemResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDateTimeSystemResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshDVPortStateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDVPortStateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshFirewallResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshFirewallResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshHealthStatusSystemResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshHealthStatusSystemResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshNetworkSystemResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshNetworkSystemResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshRecommendationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshRecommendationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">RefreshResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshServicesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshServicesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshStorageInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshStorageInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RefreshStorageSystemResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshStorageSystemResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RegisterChildVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterChildVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RegisterExtensionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterExtensionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RegisterVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">ReloadResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReloadResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RelocateVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RelocateVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings3() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveAlarmResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAlarmResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveAllSnapshots_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAllSnapshots_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveAssignedLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAssignedLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveAuthorizationRoleResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAuthorizationRoleResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveCustomFieldDefResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveCustomFieldDefResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveEntityPermissionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveEntityPermissionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveInternetScsiSendTargetsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveInternetScsiSendTargetsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveInternetScsiStaticTargetsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveInternetScsiStaticTargetsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveLicenseLabelResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveLicenseLabelResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemovePerfIntervalResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemovePerfIntervalResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemovePortGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemovePortGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveServiceConsoleVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveServiceConsoleVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveSnapshot_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveSnapshot_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveUserResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveUserResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RemoveVirtualSwitchResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveVirtualSwitchResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">Rename_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Rename_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RenameCustomFieldDefResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameCustomFieldDefResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RenameCustomizationSpecResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameCustomizationSpecResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RenameDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RenameSnapshotResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameSnapshotResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RescanAllHbaResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanAllHbaResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">RescanHbaResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanHbaResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RescanVmfsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanVmfsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetCollectorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetCollectorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetEntityPermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetEntityPermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetFirmwareToFactoryDefaultsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetFirmwareToFactoryDefaultsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetGuestInformationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetGuestInformationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetListViewFromViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetListViewFromViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetListViewResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetListViewResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetSystemHealthInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetSystemHealthInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResetVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResignatureUnresolvedVmfsVolume_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResignatureUnresolvedVmfsVolume_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ResolveMultipleUnresolvedVmfsVolumesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RestartServiceConsoleVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestartServiceConsoleVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RestartServiceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestartServiceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RestoreFirmwareConfigurationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestoreFirmwareConfigurationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveAllPermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveAllPermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveArgumentDescriptionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveArgumentDescriptionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveDasAdvancedRuntimeInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveDasAdvancedRuntimeInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveDiskPartitionInfoResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveDiskPartitionInfoResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveEntityPermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveEntityPermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveEntityScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveEntityScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveObjectScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveObjectScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveProductComponentsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveProductComponentsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrievePropertiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrievePropertiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveRolePermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveRolePermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveServiceContentResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveServiceContentResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RetrieveUserGroupsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveUserGroupsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RevertToCurrentSnapshot_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RevertToCurrentSnapshot_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RevertToSnapshot_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RevertToSnapshot_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RewindCollectorResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RewindCollectorResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">RunScheduledTaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RunScheduledTaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ScanHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScanHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ScanHostPatchV2_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScanHostPatchV2_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SearchDatastore_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SearchDatastore_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SearchDatastoreSubFolders_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SearchDatastoreSubFolders_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SelectActivePartitionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectActivePartitionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SelectVnicForNicTypeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectVnicForNicTypeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SelectVnicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectVnicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SendTestNotificationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SendTestNotificationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SessionIsActiveResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SessionIsActiveResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetCollectorPageSizeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetCollectorPageSizeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">setCustomValueResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetCustomValueResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetDisplayTopologyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetDisplayTopologyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetEntityPermissionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetEntityPermissionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetExtensionCertificateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetExtensionCertificateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">SetFieldResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetFieldResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetLicenseEditionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetLicenseEditionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", ">SetLocaleResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetLocaleResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetMultipathLunPolicyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetMultipathLunPolicyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetPublicKeyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetPublicKeyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetScreenResolutionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetScreenResolutionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetTaskDescriptionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetTaskDescriptionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetTaskStateResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetTaskStateResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SetVirtualDiskUuidResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetVirtualDiskUuidResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ShrinkVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShrinkVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ShutdownGuestResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShutdownGuestResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ShutdownHost_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShutdownHost_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StageHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StageHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StandbyGuestResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StandbyGuestResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StartRecording_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartRecording_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StartReplaying_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartReplaying_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StartServiceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartServiceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StopRecording_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopRecording_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StopReplaying_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopReplaying_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">StopServiceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopServiceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">SuspendVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SuspendVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">TerminateFaultTolerantVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TerminateFaultTolerantVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">TerminateSessionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TerminateSessionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">TurnOffFaultToleranceForVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TurnOffFaultToleranceForVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnassignUserFromGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnassignUserFromGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UninstallHostPatch_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UninstallHostPatch_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UninstallServiceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UninstallServiceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnmountForceMountedVmfsVolumeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnmountForceMountedVmfsVolumeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnmountToolsInstallerResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnmountToolsInstallerResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings4() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnregisterAndDestroy_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterAndDestroy_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnregisterExtensionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterExtensionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">unregisterVApp_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterVApp_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UnregisterVMResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterVMResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateAssignedLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateAssignedLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateAuthorizationRoleResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateAuthorizationRoleResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateBootDeviceResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateBootDeviceResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateChildResourceConfigurationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateChildResourceConfigurationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateClusterProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateClusterProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateConsoleIpRouteConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateConsoleIpRouteConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDateTimeConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDateTimeConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDateTimeResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDateTimeResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDefaultPolicyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDefaultPolicyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDiskPartitionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDiskPartitionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDnsConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDnsConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateDvsCapabilityResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDvsCapabilityResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateExtensionResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateExtensionResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateFlagsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateFlagsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateHostProfileResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateHostProfileResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiAdvancedOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAdvancedOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiAliasResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAliasResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiAuthenticationPropertiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAuthenticationPropertiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiDigestPropertiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiDigestPropertiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiDiscoveryPropertiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiDiscoveryPropertiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiIPPropertiesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiIPPropertiesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateInternetScsiNameResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiNameResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateIpConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateIpmiResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpmiResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateIpPoolResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpPoolResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateIpRouteConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpRouteConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateIpRouteTableConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpRouteTableConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateLicenseLabelResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLicenseLabelResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateLicenseResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLicenseResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateLocalSwapDatastoreResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLocalSwapDatastoreResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateModuleOptionStringResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateModuleOptionStringResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateNetworkConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateNetworkConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateOptionsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateOptionsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdatePassthruConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePassthruConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdatePerfIntervalResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePerfIntervalResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdatePhysicalNicLinkSpeedResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePhysicalNicLinkSpeedResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdatePortGroupResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePortGroupResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateProgressResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateProgressResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateReferenceHostResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateReferenceHostResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateScsiLunDisplayNameResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateScsiLunDisplayNameResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateServiceConsoleVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServiceConsoleVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateServiceMessageResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServiceMessageResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateServicePolicyResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServicePolicyResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateSoftwareInternetScsiEnabledResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateSoftwareInternetScsiEnabledResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateSystemResourcesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateSystemResourcesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateUserResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateUserResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateVAppConfigResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVAppConfigResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateVirtualNicResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVirtualNicResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpdateVirtualSwitchResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVirtualSwitchResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpgradeTools_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeTools_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpgradeVM_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVM_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpgradeVmfsResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVmfsResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">UpgradeVmLayoutResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVmLayoutResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ValidateHostResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ValidateHostResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ValidateMigrationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ValidateMigrationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">WaitForUpdatesResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WaitForUpdatesResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">XmlToCustomizationSpecItemResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.XmlToCustomizationSpecItemResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				">ZeroFillVirtualDisk_TaskResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ZeroFillVirtualDisk_TaskResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AboutInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AboutInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AccountCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AccountCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AccountRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AccountRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AccountUpdatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AccountUpdatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AcknowledgeAlarmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcknowledgeAlarmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AcquireCimServicesTicketRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireCimServicesTicketRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AcquireCloneTicketRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireCloneTicketRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AcquireLocalTicketRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireLocalTicketRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AcquireMksTicketRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AcquireMksTicketRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Action");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Action.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ActionParameter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ActionParameter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ActionType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ActionType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddAuthorizationRoleRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddAuthorizationRoleRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddCustomFieldDefRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddCustomFieldDefRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddDVPortgroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddDVPortgroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AddHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddInternetScsiSendTargetsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddInternetScsiSendTargetsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddInternetScsiStaticTargetsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddInternetScsiStaticTargetsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddPortGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddPortGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddServiceConsoleVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddServiceConsoleVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddStandaloneHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddStandaloneHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AddVirtualSwitchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AddVirtualSwitchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AdminDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AdminDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AdminNotDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AdminNotDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AdminPasswordNotChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AdminPasswordNotChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AffinityConfigured");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AffinityConfigured.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AffinityType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AffinityType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AfterStartupTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AfterStartupTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AgentInstallFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AgentInstallFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AgentInstallFailedReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AgentInstallFailedReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmActionTriggeredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmActionTriggeredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmEmailCompletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmEmailCompletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings5() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmEmailFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmEmailFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmScriptCompleteEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmScriptCompleteEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmScriptFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmScriptFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSetting");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmSetting.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmSnmpCompletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmSnmpCompletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmSnmpFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmSnmpFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlarmState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmStatusChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmStatusChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmTriggeringAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmTriggeringAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlarmTriggeringActionTransitionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlarmTriggeringActionTransitionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AllVirtualMachinesLicensedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AllVirtualMachinesLicensedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlreadyAuthenticatedSessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlreadyAuthenticatedSessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AlreadyBeingManaged");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlreadyBeingManaged.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyConnected");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlreadyConnected.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyExists");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlreadyExists.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyUpgraded");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AlreadyUpgraded.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AndAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AndAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AnswerVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AnswerVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ApplicationQuiesceFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplicationQuiesceFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ApplyHostConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplyHostConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ApplyProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplyProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ApplyRecommendationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ApplyRecommendationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AreAlarmActionsEnabledRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AreAlarmActionsEnabledRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAlarmAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAlarmState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfAlarmTriggeringActionTransitionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAlarmTriggeringActionTransitionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnyType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAnyType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfAuthorizationPrivilege");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAuthorizationPrivilege.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfAuthorizationRole");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAuthorizationRole.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfAutoStartPowerInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfAutoStartPowerInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfByte");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfByte.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCheckResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCheckResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterActionHistory");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterActionHistory.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterAttemptedVmInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterAttemptedVmInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDasAamNodeState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDasAamNodeState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDasVmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDasVmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDasVmConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDasVmConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDpmHostConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDpmHostConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDpmHostConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDpmHostConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsFaults");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsFaults.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsFaultsFaultsByVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsFaultsFaultsByVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsMigration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsMigration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsVmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsVmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterDrsVmConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterDrsVmConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterHostRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterHostRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterNotAttemptedVmInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterNotAttemptedVmInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterRuleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterRuleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfClusterRuleSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfClusterRuleSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfComplianceFailure");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfComplianceFailure.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfComplianceLocator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfComplianceLocator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfComplianceResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfComplianceResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfCustomFieldDef");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCustomFieldDef.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfCustomFieldValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCustomFieldValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfCustomizationAdapterMapping");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCustomizationAdapterMapping.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfCustomizationIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCustomizationIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfCustomizationSpecInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfCustomizationSpecInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDatacenterMismatchArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDatacenterMismatchArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDatastoreHostMount");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDatastoreHostMount.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDiagnosticManagerBundleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDiagnosticManagerBundleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDiagnosticManagerLogDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDiagnosticManagerLogDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDiskChangeExtent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDiskChangeExtent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualPortgroupInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualPortgroupInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchHostMember");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMember.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchHostMemberConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMemberConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchHostMemberPnicSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMemberPnicSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchHostProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDistributedVirtualSwitchProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDistributedVirtualSwitchProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDVPortConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDVPortConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDVPortgroupConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDVPortgroupConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDvsHostVNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDvsHostVNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDvsOperationBulkFaultFaultOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDvsOperationBulkFaultFaultOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDvsOutOfSyncHostArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDvsOutOfSyncHostArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDvsProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDvsServiceConsoleVNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDvsServiceConsoleVNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfDynamicProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfDynamicProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfElementDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfElementDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfEnumDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEnumDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEVCMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEVCMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfEventAlarmExpressionComparison");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEventAlarmExpressionComparison.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfEventArgDesc");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEventArgDesc.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfEventDescriptionEventDetail");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfEventDescriptionEventDetail.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtendedEventPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtendedEventPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtension");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtension.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings6() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionClientInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionClientInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionEventTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionEventTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionFaultTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionFaultTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionPrivilegeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionPrivilegeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionResourceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionResourceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionServerInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionServerInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfExtensionTaskTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfExtensionTaskTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfFirewallProfileRulesetProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfFirewallProfileRulesetProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfGuestDiskInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfGuestDiskInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfGuestNicInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfGuestNicInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfGuestOsDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfGuestOsDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostAccountSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostAccountSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostBootDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostBootDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostConnectInfoNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostConnectInfoNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostCpuIdInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostCpuIdInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostCpuPackage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostCpuPackage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDatastoreBrowserSearchResults");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDatastoreBrowserSearchResults.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDatastoreConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDatastoreConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDateTimeSystemTimeZone");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDateTimeSystemTimeZone.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDhcpService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDhcpService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDhcpServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDhcpServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiagnosticPartition");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiagnosticPartition.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiagnosticPartitionCreateOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiagnosticPartitionCreateOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiskMappingPartitionOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiskMappingPartitionOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiskPartitionAttributes");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiskPartitionAttributes.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiskPartitionBlockRange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiskPartitionBlockRange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostDiskPartitionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostDiskPartitionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostFileSystemMountInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostFileSystemMountInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostFirewallConfigRuleSetConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostFirewallConfigRuleSetConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostFirewallRule");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostFirewallRule.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostFirewallRuleset");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostFirewallRuleset.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostHardwareElementInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostHardwareElementInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostHostBusAdapter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostHostBusAdapter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostInternetScsiHbaParamValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostInternetScsiHbaParamValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostInternetScsiHbaSendTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostInternetScsiHbaSendTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostInternetScsiHbaStaticTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostInternetScsiHbaStaticTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostIpConfigIpV6Address");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostIpConfigIpV6Address.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostIpRouteEntry");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostIpRouteEntry.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostIpRouteOp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostIpRouteOp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostMultipathInfoLogicalUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostMultipathInfoLogicalUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostMultipathInfoPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostMultipathInfoPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostMultipathStateInfoPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostMultipathStateInfoPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNasVolumeConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNasVolumeConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNatService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNatService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNatServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNatServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNatServicePortForwardSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNatServicePortForwardSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNumaNode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNumaNode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostNumericSensorInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostNumericSensorInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPatchManagerStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPatchManagerStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPatchManagerStatusPrerequisitePatch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPatchManagerStatusPrerequisitePatch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPathSelectionPolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPathSelectionPolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPciDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPciDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPciPassthruConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPciPassthruConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPciPassthruInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPciPassthruInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPlugStoreTopologyAdapter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPlugStoreTopologyAdapter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPlugStoreTopologyDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPlugStoreTopologyDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPlugStoreTopologyPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPlugStoreTopologyPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPlugStoreTopologyPlugin");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPlugStoreTopologyPlugin.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPlugStoreTopologyTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPlugStoreTopologyTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPortGroup");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPortGroup.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPortGroupConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPortGroupConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPortGroupPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPortGroupPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostPortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostPortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostProxySwitch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostProxySwitch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostProxySwitchConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostProxySwitchConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostScsiDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostScsiDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostScsiDiskPartition");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostScsiDiskPartition.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostScsiTopologyInterface");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostScsiTopologyInterface.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostScsiTopologyLun");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostScsiTopologyLun.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostScsiTopologyTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostScsiTopologyTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostSnmpDestination");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostSnmpDestination.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostStorageArrayTypePolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostStorageArrayTypePolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostStorageElementInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostStorageElementInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostStorageOperationalInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostStorageOperationalInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostSystemIdentificationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostSystemIdentificationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostSystemResourceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostSystemResourceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostTpmDigestInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostTpmDigestInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostUnresolvedVmfsExtent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostUnresolvedVmfsExtent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostUnresolvedVmfsResolutionResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostUnresolvedVmfsResolutionResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostUnresolvedVmfsResolutionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostUnresolvedVmfsResolutionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostUnresolvedVmfsVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostUnresolvedVmfsVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVirtualNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVirtualNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVirtualNicConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVirtualNicConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVirtualNicManagerNicTypeSelection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVirtualNicManagerNicTypeSelection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVirtualSwitch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVirtualSwitch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVirtualSwitchConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVirtualSwitchConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVmfsRescanResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVmfsRescanResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHostVMotionCompatibility");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHostVMotionCompatibility.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfHttpNfcLeaseDeviceUrl");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfHttpNfcLeaseDeviceUrl.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfImportSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfImportSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfInt");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfInt.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIpPool");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfIpPool.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfIpPoolAssociation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfIpPoolAssociation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfKernelModuleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfKernelModuleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfKeyAnyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfKeyAnyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings7() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfKeyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfKeyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLicenseAssignmentManagerLicenseAssignment");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLicenseAssignmentManagerLicenseAssignment.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLicenseAvailabilityInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLicenseAvailabilityInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLicenseFeatureInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLicenseFeatureInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLicenseManagerLicenseInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLicenseManagerLicenseInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLicenseReservationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLicenseReservationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLocalizableMessage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLocalizableMessage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfLocalizationManagerMessageCatalog");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLocalizationManagerMessageCatalog.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLong");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfLong.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfManagedObjectReference");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfManagedObjectReference.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfMethodActionArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfMethodActionArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMethodFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfMethodFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfMissingObject");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfMissingObject.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfMissingProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfMissingProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfMultipleCertificatesVerifyFaultThumbprintData");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfMultipleCertificatesVerifyFaultThumbprintData.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfNasStorageProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfNasStorageProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfNumericRange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfNumericRange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfObjectContent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfObjectContent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfObjectSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfObjectSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfObjectUpdate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfObjectUpdate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOptionDef");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOptionDef.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfOptionProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOptionProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOptionValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOptionValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfOvfDeploymentOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOvfDeploymentOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfFile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOvfFile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfFileItem");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOvfFileItem.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfOvfNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOvfNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfOvfNetworkMapping");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfOvfNetworkMapping.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfCounterInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfCounterInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfEntityMetricBase");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfEntityMetricBase.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfInterval");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfInterval.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfMetricId");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfMetricId.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfMetricSeries");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfMetricSeries.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfMetricSeriesCSV");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfMetricSeriesCSV.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfQuerySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfQuerySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPerfSampleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPerfSampleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPermission");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPermission.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicHintInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicHintInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicIpHint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicIpHint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicLinkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicLinkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicNameHint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicNameHint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPhysicalNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPhysicalNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPnicUplinkProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPnicUplinkProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProductComponentInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProductComponentInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileDeferredPolicyOptionParameter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileDeferredPolicyOptionParameter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileDescriptionSection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileDescriptionSection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileExecuteError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileExecuteError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileExpressionMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileExpressionMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileParameterMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileParameterMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfilePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfilePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfilePolicyMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfilePolicyMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfilePolicyOptionMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfilePolicyOptionMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfProfileUpdateFailedUpdateFailure");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfProfileUpdateFailedUpdateFailure.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPropertyChange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPropertyChange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPropertyFilterSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPropertyFilterSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPropertyFilterUpdate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPropertyFilterUpdate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfPropertySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfPropertySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfResourceConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfResourceConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfScheduledTaskDetail");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfScheduledTaskDetail.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfScsiLun");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfScsiLun.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfScsiLunDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfScsiLunDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfScsiLunDurableName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfScsiLunDurableName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfSelectionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfSelectionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfServiceConsolePortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfServiceConsolePortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfServiceProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfServiceProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfShort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfShort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfStaticRouteProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfStaticRouteProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfString");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfString.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTag");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfTag.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTaskInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfTaskInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfTaskInfoState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfTaskInfoState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfTypeDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfTypeDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfUserGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfUserGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfUserProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfUserSearchResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfUserSearchResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserSession");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfUserSession.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppCloneSpecNetworkMappingPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppCloneSpecNetworkMappingPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppEntityConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppEntityConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppOvfSectionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppOvfSectionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppOvfSectionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppOvfSectionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppProductInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppProductInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppPropertyInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppPropertyInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVAppPropertySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVAppPropertySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualDeviceConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualDeviceConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualDeviceOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualDeviceOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineCdromInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineCdromInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineConfigInfoDatastoreUrlPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineConfigInfoDatastoreUrlPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineConfigOptionDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineConfigOptionDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineCpuIdInfoSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineCpuIdInfoSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineDatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineDatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineDatastoreVolumeOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineDatastoreVolumeOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings8() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineDisplayTopology");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineDisplayTopology.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutDiskLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutDiskLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutExDiskLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExDiskLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutExDiskUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExDiskUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutExFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutExSnapshotLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExSnapshotLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFileLayoutSnapshotLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFileLayoutSnapshotLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineFloppyInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineFloppyInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineIdeDiskDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineIdeDiskDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineIdeDiskDevicePartitionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineIdeDiskDevicePartitionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineLegacyNetworkSwitchInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineLegacyNetworkSwitchInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineMessage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineMessage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineParallelInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineParallelInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachinePciPassthroughInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachinePciPassthroughInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineRelocateSpecDiskLocator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineRelocateSpecDiskLocator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineScsiDiskDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineScsiDiskDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineScsiPassthroughInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineScsiPassthroughInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineSerialInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineSerialInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineSnapshotTree");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineSnapshotTree.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineSoundInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineSoundInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineUsageOnDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineUsageOnDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualMachineUsbInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualMachineUsbInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualNicManagerNetConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualNicManagerNetConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualSCSISharing");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualSCSISharing.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVirtualSwitchProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVirtualSwitchProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVmEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVmEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVmfsDatastoreOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVmfsDatastoreOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVmPortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVmPortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVMwareDVSPvlanConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVMwareDVSPvlanConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVMwareDVSPvlanMapEntry");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVMwareDVSPvlanMapEntry.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayOfVnicPortArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayOfVnicPortArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ArrayUpdateOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayUpdateOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ArrayUpdateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ArrayUpdateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AssignUserToGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AssignUserToGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AssociateProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AssociateProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AttachVmfsExtentRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AttachVmfsExtentRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AuthMinimumAdminPermission");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AuthMinimumAdminPermission.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AuthorizationDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AuthorizationDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AuthorizationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AuthorizationPrivilege");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AuthorizationPrivilege.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationRole");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AuthorizationRole.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartDefaults");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartDefaults.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartPowerInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartPowerInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AutoStartPowerOffRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartPowerOffRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AutoStartPowerOnRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartPowerOnRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"AutoStartWaitHeartbeatSetting");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.AutoStartWaitHeartbeatSetting.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"BackupFirmwareConfigurationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BackupFirmwareConfigurationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"BadUsernameSessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BadUsernameSessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "BoolOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BoolOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "BoolPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BoolPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"BrowseDiagnosticLogRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.BrowseDiagnosticLogRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CanceledHostOperationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CanceledHostOperationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CancelTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CancelTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CancelWaitForUpdatesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CancelWaitForUpdatesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessFile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessFile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAccessLocalSource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessLocalSource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAccessNetwork");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessNetwork.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAccessVmComponent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessVmComponent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAccessVmConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessVmConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAccessVmDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessVmDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessVmDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAccessVmDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAddHostWithFTVmAsStandalone");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAddHostWithFTVmAsStandalone.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAddHostWithFTVmToDifferentCluster");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAddHostWithFTVmToDifferentCluster.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotAddHostWithFTVmToNonHACluster");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotAddHostWithFTVmToNonHACluster.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CannotCreateFile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotCreateFile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotDecryptPasswords");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotDecryptPasswords.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CannotDeleteFile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotDeleteFile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotDisableSnapshot");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotDisableSnapshot.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotDisconnectHostWithFaultToleranceVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotDisconnectHostWithFaultToleranceVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotModifyConfigCpuRequirements");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotModifyConfigCpuRequirements.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotMoveFaultToleranceVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotMoveFaultToleranceVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotMoveFaultToleranceVmMoveType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotMoveFaultToleranceVmMoveType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CannotMoveHostWithFaultToleranceVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CannotMoveHostWithFaultToleranceVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Capability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Capability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ChangeOwnerRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ChangeOwnerRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckCompatibilityRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCompatibilityRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckComplianceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckComplianceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckCustomizationResourcesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCustomizationResourcesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckForUpdatesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckForUpdatesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckLicenseFeatureRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckLicenseFeatureRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckMigrateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckMigrateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckProfileComplianceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckProfileComplianceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CheckRelocateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckRelocateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CheckResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CheckTestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CheckTestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ChoiceOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ChoiceOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClearComplianceStatusRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClearComplianceStatusRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CloneFromSnapshotNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneFromSnapshotNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CloneSessionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneSessionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CloneVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CloneVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloneVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CloseInventoryViewFolderRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CloseInventoryViewFolderRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterActionHistory");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterActionHistory.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterAffinityRuleSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterAffinityRuleSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings9() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterAntiAffinityRuleSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterAntiAffinityRuleSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterAttemptedVmInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterAttemptedVmInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterComplianceCheckedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterComplianceCheckedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterComputeResourceSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterComputeResourceSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterConfigInfoEx");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterConfigInfoEx.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterConfigSpecEx");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterConfigSpecEx.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAamHostInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAamHostInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAamNodeState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAamNodeState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAamNodeStateDasState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAamNodeStateDasState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAdmissionControlInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAdmissionControlInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAdmissionControlPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAdmissionControlPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasAdvancedRuntimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasAdvancedRuntimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasConfigInfoServiceState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasConfigInfoServiceState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasFailoverLevelAdvancedRuntimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasHostInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasHostInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasHostRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasHostRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasVmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasVmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasVmConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasVmConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasVmSettings");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasVmSettings.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasVmSettingsIsolationResponse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasVmSettingsIsolationResponse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDasVmSettingsRestartPriority");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDasVmSettingsRestartPriority.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDestroyedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDestroyedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDpmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDpmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDpmHostConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDpmHostConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDpmHostConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDpmHostConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsFaults");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsFaults.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsFaultsFaultsByVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsFaultsFaultsByVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsMigration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsMigration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsVmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsVmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterDrsVmConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterDrsVmConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverHostAdmissionControlInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverHostAdmissionControlInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverHostAdmissionControlInfoHostStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverHostAdmissionControlInfoHostStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverHostAdmissionControlPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverHostAdmissionControlPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverLevelAdmissionControlInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverLevelAdmissionControlInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverLevelAdmissionControlPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverLevelAdmissionControlPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverResourcesAdmissionControlInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverResourcesAdmissionControlInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterFailoverResourcesAdmissionControlPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterFailoverResourcesAdmissionControlPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterHostPowerAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterHostPowerAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterHostRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterHostRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterInitialPlacementAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterInitialPlacementAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterMigrationAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterMigrationAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterNotAttemptedVmInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterNotAttemptedVmInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterOvercommittedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterOvercommittedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterPowerOnVmResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterPowerOnVmResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileCompleteConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileCompleteConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileConfigServiceCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileConfigServiceCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterProfileServiceType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterProfileServiceType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterRecommendation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterRecommendation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterRuleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterRuleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ClusterRuleSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterRuleSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterStatusChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterStatusChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ClusterVmToolsMonitoringSettings");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ClusterVmToolsMonitoringSettings.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceFailure");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComplianceFailure.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceLocator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComplianceLocator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComplianceProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComplianceResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComplianceResultStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComplianceResultStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CompositePolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CompositePolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeDiskPartitionInfoForResizeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeDiskPartitionInfoForResizeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeDiskPartitionInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeDiskPartitionInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeResourceConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeResourceConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeResourceConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeResourceConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeResourceEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeResourceEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ComputeResourceSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ComputeResourceSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConcurrentAccess.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ConfigSpecOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigSpecOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ConfigTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ConfigureDatastorePrincipalRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigureDatastorePrincipalRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ConfigureLicenseSourceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConfigureLicenseSourceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ConnectedIso");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ConnectedIso.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CopyDatastoreFileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CopyDatastoreFileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CopyVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CopyVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CpuCompatibilityUnknown");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CpuCompatibilityUnknown.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CpuHotPlugNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CpuHotPlugNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CpuIncompatible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CpuIncompatible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CpuIncompatible1ECX");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CpuIncompatible1ECX.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CpuIncompatible81EDX");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CpuIncompatible81EDX.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateAlarmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateAlarmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateChildVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateChildVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateClusterExRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateClusterExRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateClusterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateClusterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateCollectorForEventsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCollectorForEventsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateCollectorForTasksRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCollectorForTasksRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateContainerViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateContainerViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateDatacenterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDatacenterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateDefaultProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDefaultProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings10() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateDescriptorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDescriptorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateDiagnosticPartitionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDiagnosticPartitionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateDVSRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateDVSRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateFilterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateFilterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateFolderRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateFolderRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateImportSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateImportSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateInventoryViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateInventoryViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateIpPoolRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateIpPoolRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateListViewFromViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateListViewFromViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateListViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateListViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateLocalDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateLocalDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateNasDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateNasDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateObjectScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateObjectScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreatePerfIntervalRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreatePerfIntervalRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateResourcePoolRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateResourcePoolRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateScreenshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateScreenshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateSecondaryVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateSecondaryVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateSnapshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateSnapshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CreateTaskAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateTaskAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateUserRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateUserRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateVmfsDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVmfsDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CreateVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CreateVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CurrentTimeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CurrentTimeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDef");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldDef.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldDefAddedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldDefAddedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldDefEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldDefEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldDefRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldDefRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldDefRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldDefRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldStringValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldStringValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomFieldValueChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomFieldValueChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationAdapterMapping");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationAdapterMapping.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationAutoIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationAutoIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationCustomIpGenerator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationCustomIpGenerator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationCustomIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationCustomIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationCustomName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationCustomName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationDhcpIpGenerator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationDhcpIpGenerator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationDhcpIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationDhcpIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationFixedIp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationFixedIp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationFixedIpV6");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationFixedIpV6.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationFixedName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationFixedName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationGlobalIPSettings");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationGlobalIPSettings.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationGuiRunOnce");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationGuiRunOnce.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationGuiUnattended");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationGuiUnattended.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIdentification");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIdentification.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIdentitySettings");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIdentitySettings.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIpGenerator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIpGenerator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIPSettings");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIPSettings.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIPSettingsIpV6AddressSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIPSettingsIpV6AddressSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationLicenseDataMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationLicenseDataMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationLicenseFilePrintData");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationLicenseFilePrintData.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationLinuxIdentityFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationLinuxIdentityFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationLinuxOptions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationLinuxOptions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationLinuxPrep");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationLinuxPrep.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationNetBIOSMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationNetBIOSMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationNetworkSetupFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationNetworkSetupFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationOptions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationOptions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationPassword");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationPassword.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationPending");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationPending.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationPrefixName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationPrefixName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSpecInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecItem");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSpecItem.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecItemToXmlRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSpecItemToXmlRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationStartedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationStartedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationStatelessIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationStatelessIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSucceeded");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSucceeded.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSysprep");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSysprep.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSysprepFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSysprepFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSysprepRebootOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSysprepRebootOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSysprepText");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationSysprepText.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationUnknownFailure");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationUnknownFailure.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationUnknownIpGenerator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationUnknownIpGenerator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationUnknownIpV6Generator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationUnknownIpV6Generator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationUnknownName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationUnknownName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationUserData");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationUserData.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationVirtualMachineName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationVirtualMachineName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizationWinOptions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizationWinOptions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"CustomizeVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.CustomizeVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DailyTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DailyTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasAdmissionControlDisabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasAdmissionControlDisabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasAdmissionControlEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasAdmissionControlEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DasAgentFoundEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasAgentFoundEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasAgentUnavailableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasAgentUnavailableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasClusterIsolatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasClusterIsolatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DasConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasConfigFaultDasConfigFaultReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasConfigFaultDasConfigFaultReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DasDisabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasDisabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings11() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "DasEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DasHostFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasHostFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DasHostIsolatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasHostIsolatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DasVmPriority");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DasVmPriority.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatabaseError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatabaseError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatabaseSizeEstimate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatabaseSizeEstimate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatabaseSizeParam");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatabaseSizeParam.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatacenterCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatacenterEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterMismatch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterMismatch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatacenterMismatchArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterMismatchArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatacenterRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatacenterRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreAccessible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreAccessible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreCapacityIncreasedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreCapacityIncreasedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreDestroyedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreDestroyedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreDiscoveredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreDiscoveredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreDuplicatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreDuplicatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreFileCopiedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreFileCopiedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreFileDeletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreFileDeletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreFileEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreFileEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreFileMovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreFileMovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreHostMount");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreHostMount.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreNotWritableOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreNotWritableOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastorePrincipalConfigured");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastorePrincipalConfigured.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreRemovedOnHostEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreRemovedOnHostEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DatastoreRenamedOnHostEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreRenamedOnHostEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DatastoreSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DateTimeProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DateTimeProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DayOfWeek");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DayOfWeek.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DecodeLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DecodeLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DefragmentAllDisksRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DefragmentAllDisksRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DefragmentVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DefragmentVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeleteCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeleteDatastoreFileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteDatastoreFileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeleteFileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteFileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeleteVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeleteVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Description");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Description.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeselectVnicForNicTypeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeselectVnicForNicTypeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeselectVnicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeselectVnicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestinationSwitchFull");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestinationSwitchFull.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyChildrenRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyChildrenRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyCollectorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyCollectorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyIpPoolRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyIpPoolRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyNetworkRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyNetworkRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyPropertyFilterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyPropertyFilterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DestroyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DestroyViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DestroyViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceBackedVirtualDiskSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceBackedVirtualDiskSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceBackingNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceBackingNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceControllerNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceControllerNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceHotPlugNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceHotPlugNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DeviceNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DeviceNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceNotSupportedReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceNotSupportedReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceUnsupportedForVmPlatform");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceUnsupportedForVmPlatform.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DeviceUnsupportedForVmVersion");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DeviceUnsupportedForVmVersion.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerBundleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticManagerBundleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogCreator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticManagerLogCreator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticManagerLogDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticManagerLogFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticManagerLogHeader");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticManagerLogHeader.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticPartitionStorageType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticPartitionStorageType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiagnosticPartitionType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiagnosticPartitionType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableAdminNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableAdminNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableFeatureRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableFeatureRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableHyperThreadingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableHyperThreadingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableMultipathPathRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableMultipathPathRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableRulesetRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableRulesetRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisableSecondaryVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisableSecondaryVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisallowedDiskModeChange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisallowedDiskModeChange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisallowedMigrationDeviceAttached");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisallowedMigrationDeviceAttached.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisallowedOperationOnFailoverHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisallowedOperationOnFailoverHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DisconnectHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DisconnectHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DiskChangeExtent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiskChangeExtent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DiskChangeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiskChangeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DiskMoveTypeNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiskMoveTypeNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DiskNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DiskNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DissociateProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DissociateProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualPortgroupInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualPortgroupInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualPortgroupMetaTagName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualPortgroupMetaTagName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualPortgroupPortgroupType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualPortgroupPortgroupType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMember");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMember.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberBacking");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberBacking.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberHostComponentState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberHostComponentState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberPnicBacking");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberPnicBacking.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostMemberPnicSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostMemberPnicSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchHostProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchHostProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings12() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchKeyedOpaqueBlob");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchKeyedOpaqueBlob.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchPortConnectee");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchPortConnectee.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchPortConnecteeConnecteeType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchPortConnecteeConnecteeType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchPortConnection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchPortConnection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchPortCriteria");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchPortCriteria.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchPortStatistics");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchPortStatistics.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DistributedVirtualSwitchProductSpecOperationType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DistributedVirtualSwitchProductSpecOperationType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DoesCustomizationSpecExistRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DoesCustomizationSpecExistRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DpmBehavior");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DpmBehavior.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DrsBehavior");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsBehavior.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DrsDisabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsDisabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DrsDisabledOnVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsDisabledOnVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DrsEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsEnteredStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsEnteredStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsEnteringStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsEnteringStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsExitedStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsExitedStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsExitingStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsExitingStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsExitStandbyModeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsExitStandbyModeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsInvocationFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsInvocationFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsRecommendationReasonCode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsRecommendationReasonCode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsRecoveredFromFailureEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsRecoveredFromFailureEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsResourceConfigureFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsResourceConfigureFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsResourceConfigureSyncedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsResourceConfigureSyncedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DrsVmMigratedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsVmMigratedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsVmotionIncompatibleFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsVmotionIncompatibleFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DrsVmPoweredOnEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DrsVmPoweredOnEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DuplicateCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DuplicateCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DuplicateIpDetectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DuplicateIpDetectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DuplicateName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DuplicateName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupDestroyedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupDestroyedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVPortgroupRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortgroupRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortSetting");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortSetting.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVPortStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVPortStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSContactInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSContactInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsDestroyedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsDestroyedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSFailureCriteria");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSFailureCriteria.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsHostBackInSyncEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsHostBackInSyncEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostJoinedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsHostJoinedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostLeftEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsHostLeftEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostVNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsHostVNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsHostWentOutOfSyncEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsHostWentOutOfSyncEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVSManagerDvsConfigTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSManagerDvsConfigTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsMergedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsMergedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVSNameArrayUplinkPortPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSNameArrayUplinkPortPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsNotAuthorized");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsNotAuthorized.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsOperationBulkFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsOperationBulkFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsOperationBulkFaultFaultOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsOperationBulkFaultFaultOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsOutOfSyncHostArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsOutOfSyncHostArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortBlockedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortBlockedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortConnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortConnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortDeletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortDeletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortDisconnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortDisconnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortJoinPortgroupEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortJoinPortgroupEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortLeavePortgroupEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortLeavePortgroupEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortLinkDownEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortLinkDownEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortLinkUpEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortLinkUpEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsPortUnblockedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsPortUnblockedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsScopeViolated");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsScopeViolated.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSSecurityPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSSecurityPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsServiceConsoleVNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsServiceConsoleVNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DVSSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVSTrafficShapingPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSTrafficShapingPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsUpgradeAvailableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsUpgradeAvailableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpgradedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsUpgradedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsUpgradeInProgressEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsUpgradeInProgressEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DvsUpgradeRejectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsUpgradeRejectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVSUplinkPortPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSUplinkPortPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"DVSVendorSpecificConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DVSVendorSpecificConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DvsVNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DvsVNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DynamicArray");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DynamicArray.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DynamicData");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DynamicData.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "DynamicProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.DynamicProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EagerZeroVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EagerZeroVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EightHostLimitViolated");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EightHostLimitViolated.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ElementDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ElementDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableAlarmActionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableAlarmActionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings13() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableFeatureRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableFeatureRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableHyperThreadingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableHyperThreadingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableMultipathPathRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableMultipathPathRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableRulesetRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableRulesetRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnableSecondaryVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnableSecondaryVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnteredMaintenanceModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnteredMaintenanceModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnteredStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnteredStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnteringMaintenanceModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnteringMaintenanceModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnteringStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnteringStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EnterMaintenanceModeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnterMaintenanceModeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EntityEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EntityEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EnumDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EnumDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ErrorUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ErrorUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EstimateDatabaseSizeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EstimateDatabaseSizeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EvaluationLicenseSource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EvaluationLicenseSource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedCPUFeaturesForMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedCPUFeaturesForMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedCPUModel");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedCPUModel.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedCPUModelForMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedCPUModelForMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedCPUVendor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedCPUVendor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedCPUVendorUnknown");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedCPUVendorUnknown.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedHostDisconnected");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedHostDisconnected.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedHostSoftware");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedHostSoftware.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedHostSoftwareForMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedHostSoftwareForMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EVCAdmissionFailedVmActive");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCAdmissionFailedVmActive.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EVCMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EVCMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Event");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Event.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventAlarmExpressionComparison");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventAlarmExpressionComparison.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventAlarmExpressionComparisonOperator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventAlarmExpressionComparisonOperator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventArgDesc");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventArgDesc.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventCategory");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventCategory.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventDescriptionEventDetail");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventDescriptionEventDetail.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventEventSeverity");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventEventSeverity.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventEx");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventEx.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventFilterSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventFilterSpecByEntity");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventFilterSpecByEntity.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventFilterSpecByTime");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventFilterSpecByTime.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventFilterSpecByUsername");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventFilterSpecByUsername.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"EventFilterSpecRecursionOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.EventFilterSpecRecursionOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExecuteHostProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExecuteHostProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExitedStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitedStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExitingStandbyModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitingStandbyModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExitMaintenanceModeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitMaintenanceModeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExitMaintenanceModeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitMaintenanceModeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExitStandbyModeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExitStandbyModeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExpandVmfsDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpandVmfsDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExpandVmfsExtentRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpandVmfsExtentRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExpiredAddonLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpiredAddonLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExpiredEditionLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpiredEditionLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExpiredFeatureLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExpiredFeatureLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExportProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExportVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExportVmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExportVmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtendedDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendedDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtendedElementDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendedElementDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedEventPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendedEventPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendedFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtendVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtendVmfsDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtendVmfsDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Extension");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Extension.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionClientInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionClientInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionEventTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionEventTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionFaultTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionFaultTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionHealthInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionHealthInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionPrivilegeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionPrivilegeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionResourceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionResourceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionServerInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionServerInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtensionTaskTypeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtensionTaskTypeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ExtractOvfEnvironmentRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ExtractOvfEnvironmentRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FailoverLevelRestored");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FailoverLevelRestored.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceAntiAffinityViolated");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceAntiAffinityViolated.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceCpuIncompatible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceCpuIncompatible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceNotLicensed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceNotLicensed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceNotSameBuild");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceNotSameBuild.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultTolerancePrimaryConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultTolerancePrimaryConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultTolerancePrimaryPowerOnNotAttempted");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultTolerancePrimaryPowerOnNotAttempted.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceSecondaryConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceSecondaryConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FaultToleranceSecondaryOpResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FaultToleranceSecondaryOpResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FetchDVPortKeysRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FetchDVPortKeysRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FetchDVPortsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FetchDVPortsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FibreChannelPortType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FibreChannelPortType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileAlreadyExists");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileAlreadyExists.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FileBackedPortNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileBackedPortNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FileBackedVirtualDiskSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileBackedVirtualDiskSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileLocked");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileLocked.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileNotWritable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileNotWritable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileQueryFlags");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileQueryFlags.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FilesystemQuiesceFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FilesystemQuiesceFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FileTooLarge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FileTooLarge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindAllByDnsNameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByDnsNameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindAllByIpRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByIpRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings14() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindAllByUuidRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAllByUuidRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindAssociatedProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindAssociatedProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindByDatastorePathRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByDatastorePathRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindByDnsNameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByDnsNameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindByInventoryPathRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByInventoryPathRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindByIpRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByIpRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindByUuidRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindByUuidRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindChildRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindChildRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FindExtensionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FindExtensionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FirewallProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FirewallProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FirewallProfileRulesetProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FirewallProfileRulesetProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FloatOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FloatOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FloppyImageFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FloppyImageFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FloppyImageFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FloppyImageFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FolderEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FolderEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FolderFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FolderFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FolderFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FolderFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FormatVmfsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FormatVmfsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "FtIssuesOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FtIssuesOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FtIssuesOnHostHostSelectionType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FtIssuesOnHostHostSelectionType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"FullStorageVMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.FullStorageVMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GeneralEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GeneralHostErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralHostErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GeneralHostInfoEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralHostInfoEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GeneralHostWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralHostWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GeneralUserEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralUserEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GeneralVmErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralVmErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GeneralVmInfoEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralVmInfoEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GeneralVmWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GeneralVmWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GenerateConfigTaskListRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenerateConfigTaskListRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GenerateLogBundlesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenerateLogBundlesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GenericDrsFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenericDrsFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GenericVmConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GenericVmConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GetAlarmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetAlarmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GetAlarmStateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetAlarmStateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GetCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GetPublicKeyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GetPublicKeyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GhostDvsProxySwitchDetectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GhostDvsProxySwitchDetectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GhostDvsProxySwitchRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GhostDvsProxySwitchRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"GlobalMessageChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GlobalMessageChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GroupAlarmAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GroupAlarmAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GuestDiskInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GuestDiskInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GuestInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GuestInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GuestNicInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GuestNicInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GuestOsDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GuestOsDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "GuestScreenInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.GuestScreenInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HAErrorsAtDest");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HAErrorsAtDest.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HealthStatusChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HealthStatusChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HealthSystemRuntime");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HealthSystemRuntime.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostAccountSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAccountSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostAddedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAddedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostAddFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAddFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostAdminDisableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAdminDisableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostAdminEnableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAdminEnableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostApplyProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostApplyProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostAutoStartManagerConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostAutoStartManagerConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostBIOSInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostBIOSInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostBlockAdapterTargetTransport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostBlockAdapterTargetTransport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostBlockHba");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostBlockHba.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostBootDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostBootDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostBootDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostBootDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedAccountFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedAccountFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedAlreadyManagedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedAlreadyManagedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedBadCcagentEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedBadCcagentEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedBadUsernameEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedBadUsernameEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedBadVersionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedBadVersionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedCcagentUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedCcagentUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedNetworkErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedNetworkErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedNoAccessEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedNoAccessEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedNoConnectionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedNoConnectionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedNoLicenseEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedNoLicenseEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedNotFoundEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedNotFoundEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCnxFailedTimeoutEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCnxFailedTimeoutEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCommunication");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCommunication.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostComplianceCheckedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostComplianceCheckedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCompliantEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCompliantEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostConfigAppliedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigAppliedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigChange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigChange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostConfigChangeMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigChangeMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostConfigChangeOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigChangeOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigManager");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigManager.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConfigSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostConnectInfoNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectInfoNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostConnectionLostEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectionLostEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostConnectSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuIdInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuIdInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuPackage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuPackage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCpuPackageVendor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuPackageVendor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCpuPowerManagementInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuPowerManagementInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostCpuPowerManagementInfoPolicyType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostCpuPowerManagementInfoPolicyType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

	}

	private void addBindings15() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDasDisabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasDisabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDasDisablingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasDisablingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDasEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDasEnablingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasEnablingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDasErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDasErrorEventHostDasErrorReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasErrorEventHostDasErrorReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDasEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDasOkEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDasOkEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreBrowserSearchResults");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreBrowserSearchResults.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreBrowserSearchSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreBrowserSearchSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreExistsConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreExistsConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreNameConflictConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreNameConflictConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDatastoreSystemCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDatastoreSystemCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDateTimeConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDateTimeConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDateTimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDateTimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDateTimeSystemTimeZone");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDateTimeSystemTimeZone.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDhcpService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDhcpService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDhcpServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDhcpServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDhcpServiceSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDhcpServiceSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartition");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiagnosticPartition.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartitionCreateDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiagnosticPartitionCreateDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartitionCreateOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiagnosticPartitionCreateOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiagnosticPartitionCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiagnosticPartitionCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDigestInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDigestInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDigestInfoDigestMethodType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDigestInfoDigestMethodType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDisconnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDisconnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDisconnectedEventReasonCode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDisconnectedEventReasonCode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskDimensions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskDimensions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskDimensionsChs");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskDimensionsChs.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskDimensionsLba");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskDimensionsLba.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskMappingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskMappingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskMappingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskMappingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskMappingPartitionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskMappingPartitionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskMappingPartitionOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskMappingPartitionOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionAttributes");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionAttributes.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionBlockRange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionBlockRange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionInfoType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionInfoType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostDiskPartitionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDiskPartitionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDnsConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDnsConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostDnsConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostDnsConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostEnableAdminFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostEnableAdminFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostExtraNetworksEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostExtraNetworksEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFibreChannelHba");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFibreChannelHba.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFibreChannelTargetTransport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFibreChannelTargetTransport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostFileAccess");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFileAccess.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFileSystemMountInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFileSystemMountInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFileSystemVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFileSystemVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFileSystemVolumeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFileSystemVolumeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFirewallConfigRuleSetConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallConfigRuleSetConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFirewallDefaultPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallDefaultPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRule");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallRule.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFirewallRuleDirection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallRuleDirection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFirewallRuleProtocol");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallRuleProtocol.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostFirewallRuleset");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFirewallRuleset.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostFlagInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostFlagInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostForceMountedInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostForceMountedInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostGetShortNameFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostGetShortNameFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostHardwareElementInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHardwareElementInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostHardwareElementStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHardwareElementStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHardwareInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostHardwareStatusInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHardwareStatusInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostHardwareSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHardwareSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostHostBusAdapter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHostBusAdapter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostHyperThreadScheduleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostHyperThreadScheduleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIncompatibleForFaultTolerance");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIncompatibleForFaultTolerance.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIncompatibleForFaultToleranceReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIncompatibleForFaultToleranceReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIncompatibleForRecordReplay");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIncompatibleForRecordReplay.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIncompatibleForRecordReplayReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIncompatibleForRecordReplayReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHba");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHba.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaAuthenticationCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaAuthenticationCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaAuthenticationProperties");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaAuthenticationProperties.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaChapAuthenticationType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaChapAuthenticationType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaDigestCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaDigestCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaDigestProperties");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaDigestProperties.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaDigestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaDigestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaDiscoveryCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaDiscoveryCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaDiscoveryProperties");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaDiscoveryProperties.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaIPCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaIPCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaIPProperties");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaIPProperties.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaParamValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaParamValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaSendTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaSendTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaStaticTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaStaticTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiHbaTargetSet");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiHbaTargetSet.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInternetScsiTargetTransport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInternetScsiTargetTransport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostInventoryFull");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInventoryFull.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInventoryFullEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInventoryFullEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostInventoryUnreadableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostInventoryUnreadableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpConfigIpV6Address");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpConfigIpV6Address.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpConfigIpV6AddressConfigType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpConfigIpV6AddressConfigType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpConfigIpV6AddressConfiguration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpConfigIpV6AddressConfiguration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings16() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpConfigIpV6AddressStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpConfigIpV6AddressStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpInconsistentEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpInconsistentEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpmiInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpmiInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpRouteConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteEntry");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteEntry.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteOp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteOp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpRouteTableConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteTableConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpRouteTableInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpRouteTableInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIpToShortNameFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIpToShortNameFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostIsolationIpPingFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostIsolationIpPingFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostLicenseConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLicenseConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostLicenseExpiredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLicenseExpiredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostLicenseSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLicenseSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostListSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostListSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostListSummaryQuickStats");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostListSummaryQuickStats.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostLocalFileSystemVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLocalFileSystemVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostLocalFileSystemVolumeSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLocalFileSystemVolumeSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostLowLevelProvisioningManagerReloadTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostLowLevelProvisioningManagerReloadTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostMemoryProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMemoryProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostMemorySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMemorySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMissingNetworksEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMissingNetworksEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMonitoringStateChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMonitoringStateChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostMountInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMountInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostMountMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMountMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathInfoFixedLogicalUnitPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfoFixedLogicalUnitPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathInfoLogicalUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfoLogicalUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathInfoLogicalUnitPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfoLogicalUnitPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathInfoLogicalUnitStorageArrayTypePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfoLogicalUnitStorageArrayTypePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathInfoPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathInfoPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathStateInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathStateInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostMultipathStateInfoPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostMultipathStateInfoPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNasVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNasVolumeConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNasVolumeConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNasVolumeSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNatService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNatService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNatServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNatServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNatServiceNameServiceSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNatServiceNameServiceSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNatServicePortForwardSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNatServicePortForwardSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNatServiceSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNatServiceSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNetCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNetOffloadCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetOffloadCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNetworkConfigResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkConfigResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNetworkSecurityPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkSecurityPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNetworkTrafficShapingPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNetworkTrafficShapingPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNewNetworkConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNewNetworkConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNicFailureCriteria");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNicFailureCriteria.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNicOrderPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNicOrderPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNicTeamingPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNicTeamingPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNoAvailableNetworksEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNoAvailableNetworksEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNoHAEnabledPortGroupsEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNoHAEnabledPortGroupsEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNonCompliantEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNonCompliantEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNoRedundantManagementNetworkEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNoRedundantManagementNetworkEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNotConnected");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNotConnected.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNotInClusterEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNotInClusterEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNotReachable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNotReachable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNtpConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNtpConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNumaInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNumaInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostNumaNode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNumaNode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNumericSensorHealthState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNumericSensorHealthState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNumericSensorInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNumericSensorInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostNumericSensorType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostNumericSensorType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostOvercommittedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostOvercommittedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostParallelScsiHba");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostParallelScsiHba.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostParallelScsiTargetTransport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostParallelScsiTargetTransport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerInstallState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerInstallState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerIntegrityStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerIntegrityStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerLocator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerLocator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerPatchManagerOperationSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPatchManagerStatusPrerequisitePatch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPatchManagerStatusPrerequisitePatch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPathSelectionPolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPathSelectionPolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostPciDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPciDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPciPassthruConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPciPassthruConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPciPassthruInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPciPassthruInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopology");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopology.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopologyAdapter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopologyAdapter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopologyDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopologyDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopologyPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopologyPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopologyPlugin");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopologyPlugin.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPlugStoreTopologyTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPlugStoreTopologyTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroup");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPortGroup.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPortGroupConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPortGroupConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPortGroupPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPortGroupSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPosixAccountSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPosixAccountSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPowerOperationType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPowerOperationType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostPowerOpFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPowerOpFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostPrimaryAgentNotShortNameEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostPrimaryAgentNotShortNameEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileAppliedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileAppliedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileCompleteConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileCompleteConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings17() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileHostBasedConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileHostBasedConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProfileManagerConfigTaskList");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProfileManagerConfigTaskList.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostProxySwitch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProxySwitch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProxySwitchConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProxySwitchConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostProxySwitchSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostProxySwitchSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostReconnectionFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostReconnectionFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostReplayUnsupportedReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostReplayUnsupportedReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostResignatureRescanResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostResignatureRescanResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostRuntimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostRuntimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostScsiDiskPartition");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiDiskPartition.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiTopology");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiTopology.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostScsiTopologyInterface");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiTopologyInterface.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostScsiTopologyLun");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiTopologyLun.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostScsiTopologyTarget");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostScsiTopologyTarget.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostSecuritySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSecuritySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostService");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostService.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostServiceConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostServiceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostServicePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostServicePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceTicket");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostServiceTicket.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostShortNameInconsistentEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostShortNameInconsistentEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostShortNameToIpFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostShortNameToIpFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostShutdownEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostShutdownEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSnmpAgentCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSnmpAgentCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostSnmpConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSnmpConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSnmpDestination");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSnmpDestination.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSnmpSystemAgentLimits");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSnmpSystemAgentLimits.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSslThumbprintInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSslThumbprintInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostStatusChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostStatusChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostStorageArrayTypePolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostStorageArrayTypePolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostStorageDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostStorageDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostStorageElementInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostStorageElementInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostStorageOperationalInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostStorageOperationalInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSyncFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSyncFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemConnectionState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemConnectionState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemHealthInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemHealthInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemIdentificationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemIdentificationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemIdentificationInfoIdentifier");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemIdentificationInfoIdentifier.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemPowerState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemPowerState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostSystemResourceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostSystemResourceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostTargetTransport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostTargetTransport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmDigestInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostTpmDigestInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsExtent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsExtent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsExtentUnresolvedReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsExtentUnresolvedReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsResignatureSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsResignatureSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsResolutionResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsResolutionResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsResolutionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsResolutionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsResolutionSpecVmfsUuidResolution");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsResolutionSpecVmfsUuidResolution.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUnresolvedVmfsVolumeResolveStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUnresolvedVmfsVolumeResolveStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUpgradeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUpgradeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostUserWorldSwapNotEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostUserWorldSwapNotEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualNicConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualNicConnection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicConnection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualNicManagerInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicManagerInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualNicManagerNicType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicManagerNicType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualNicManagerNicTypeSelection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicManagerNicTypeSelection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualNicSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchAutoBridge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchAutoBridge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchBeaconConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchBeaconConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchBondBridge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchBondBridge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchBridge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchBridge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchSimpleBridge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchSimpleBridge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVirtualSwitchSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVirtualSwitchSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVmfsRescanResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVmfsRescanResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVmfsSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVmfsSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVmfsVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVmfsVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVMotionCompatibility");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVMotionCompatibility.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVMotionConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVMotionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVMotionNetConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVMotionNetConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostVnicConnectedToCustomizedDVPortEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostVnicConnectedToCustomizedDVPortEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostWwnChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostWwnChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HostWwnConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HostWwnConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HotSnapshotMoveNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HotSnapshotMoveNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HourlyTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HourlyTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseAbortRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseAbortRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseCompleteRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseCompleteRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseDeviceUrl");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseDeviceUrl.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseProgressRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseProgressRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.HttpNfcLeaseState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IDEDiskNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IDEDiskNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ImpersonateUserRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ImpersonateUserRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ImportSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ImportSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ImportVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ImportVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InaccessibleDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InaccessibleDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IncompatibleDefaultDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncompatibleDefaultDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IncompatibleHostForFtSecondary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncompatibleHostForFtSecondary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IncompatibleSetting");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncompatibleSetting.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IncorrectFileType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncorrectFileType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IncorrectHostInformation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncorrectHostInformation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IncorrectHostInformationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IncorrectHostInformationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IndependentDiskVMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IndependentDiskVMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings18() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"InflateVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InflateVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InfoUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InfoUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InheritablePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InheritablePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InstallHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InstallHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InstallHostPatchV2RequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InstallHostPatchV2RequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientCpuResourcesFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientCpuResourcesFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientFailoverResourcesEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientFailoverResourcesEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientFailoverResourcesFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientFailoverResourcesFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientHostCapacityFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientHostCapacityFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientHostCpuCapacityFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientHostCpuCapacityFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientHostMemoryCapacityFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientHostMemoryCapacityFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientMemoryResourcesFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientMemoryResourcesFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientPerCpuCapacity");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientPerCpuCapacity.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientResourcesFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientResourcesFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientStandbyCpuResource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientStandbyCpuResource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientStandbyMemoryResource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientStandbyMemoryResource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InsufficientStandbyResource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InsufficientStandbyResource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InternetScsiSnsDiscoveryMethod");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InternetScsiSnsDiscoveryMethod.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IntOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IntOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IntPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IntPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InUseFeatureManipulationDisallowed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InUseFeatureManipulationDisallowed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidAffinitySettingFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidAffinitySettingFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidBmcRole");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidBmcRole.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidBundle");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidBundle.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidClientCertificate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidClientCertificate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidCollectorVersion");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidCollectorVersion.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidDatastorePath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDatastorePath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidDeviceBacking");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDeviceBacking.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidDeviceOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDeviceOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDeviceSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDeviceSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDiskFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDiskFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidDrsBehaviorForFtVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidDrsBehaviorForFtVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidEditionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidEditionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidEditionLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidEditionLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidFolder");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidFolder.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidHostState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidHostState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidIndexArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidIndexArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidIpmiLoginInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidIpmiLoginInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidIpmiMacAddress");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidIpmiMacAddress.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLocale");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidLocale.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLogin");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidLogin.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidNasCredentials");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidNasCredentials.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidNetworkInType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidNetworkInType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidNetworkResource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidNetworkResource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidOperationOnSecondaryVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidOperationOnSecondaryVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPowerState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidPowerState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPrivilege");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidPrivilege.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidPropertyType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidPropertyType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidPropertyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidPropertyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidRequest");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidRequest.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidResourcePoolStructureFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidResourcePoolStructureFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InvalidSnapshotFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidSnapshotFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "InvalidVmConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InvalidVmConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InventoryDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InventoryDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"InventoryHasStandardAloneHosts");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.InventoryHasStandardAloneHosts.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IpAddressProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpAddressProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IpHostnameGeneratorError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpHostnameGeneratorError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IpPool");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpPool.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IpPoolAssociation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpPoolAssociation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"IpPoolIpPoolConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpPoolIpPoolConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IpRouteProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IpRouteProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IsoImageFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IsoImageFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "IsoImageFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.IsoImageFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "KernelModuleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.KernelModuleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"KernelModuleSectionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.KernelModuleSectionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "KeyAnyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.KeyAnyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "KeyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.KeyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LegacyNetworkInterfaceInUse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LegacyNetworkInterfaceInUse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseAssignmentFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseAssignmentFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseAssignmentFailedReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseAssignmentFailedReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseAssignmentManagerLicenseAssignment");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseAvailabilityInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseAvailabilityInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseDiagnostics");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseDiagnostics.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseDowngradeDisallowed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseDowngradeDisallowed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseEntityNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseEntityNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseExpired");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseExpired.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseExpiredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseExpiredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseFeatureInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseFeatureInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseFeatureInfoSourceRestriction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseFeatureInfoSourceRestriction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseFeatureInfoState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseFeatureInfoState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseFeatureInfoUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseFeatureInfoUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseKeyEntityMismatch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseKeyEntityMismatch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerEvaluationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseManagerEvaluationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseManagerLicenseInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerLicenseKey");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseManagerLicenseKey.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseManagerState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseManagerState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseNonComplianceEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseNonComplianceEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseReservationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseReservationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseReservationInfoState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseReservationInfoState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

	}

	private void addBindings19() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseRestricted");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseRestricted.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseRestrictedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseRestrictedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseServerAvailableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseServerAvailableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseServerSource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseServerSource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseServerUnavailable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseServerUnavailable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseServerUnavailableEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseServerUnavailableEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseSource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseSource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LicenseSourceUnavailable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseSourceUnavailable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LicenseUsageInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LicenseUsageInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LimitExceeded");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LimitExceeded.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LinkDiscoveryProtocolConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LinkDiscoveryProtocolConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LinkDiscoveryProtocolConfigOperationType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LinkDiscoveryProtocolConfigOperationType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LinkDiscoveryProtocolConfigProtocolType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LinkDiscoveryProtocolConfigProtocolType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LinkProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LinkProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LinuxVolumeNotClean");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LinuxVolumeNotClean.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LocalDatastoreCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalDatastoreCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LocalDatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalDatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LocalizableMessage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalizableMessage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LocalizationManagerMessageCatalog");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalizationManagerMessageCatalog.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LocalizedMethodFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalizedMethodFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LocalLicenseSource");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LocalLicenseSource.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LockerMisconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LockerMisconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LockerReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LockerReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LogBundlingFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LogBundlingFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LoginBySSPIRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginBySSPIRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LoginExtensionByCertificateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginExtensionByCertificateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LoginExtensionBySubjectNameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginExtensionBySubjectNameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LoginRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LoginRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LogoutRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LogoutRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"LogUserEventRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LogUserEventRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LongOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LongOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "LongPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.LongPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MaintenanceModeFileMove");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MaintenanceModeFileMove.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MakeDirectoryRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MakeDirectoryRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MakePrimaryVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MakePrimaryVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ManagedEntityEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ManagedEntityEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ManagedEntityStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ManagedEntityStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ManagedObjectNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ManagedObjectReference");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ManagedObjectReference.class;
		cachedSerClasses.add(cls);
		cachedSerFactories
				.add(org.apache.axis.encoding.ser.BaseSerializerFactory
						.createFactory(
								org.apache.axis.encoding.ser.SimpleSerializerFactory.class,
								cls, qName));
		cachedDeserFactories
				.add(org.apache.axis.encoding.ser.BaseDeserializerFactory
						.createFactory(
								org.apache.axis.encoding.ser.SimpleDeserializerFactory.class,
								cls, qName));

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MarkAsTemplateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MarkAsTemplateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MarkAsVirtualMachineRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MarkAsVirtualMachineRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MemoryHotPlugNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MemoryHotPlugNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MemorySizeNotRecommended");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MemorySizeNotRecommended.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MemorySizeNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MemorySizeNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MemorySnapshotOnIndependentDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MemorySnapshotOnIndependentDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MergeDvsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MergeDvsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MergePermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MergePermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MethodAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MethodActionArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodActionArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MethodDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MethodDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MethodFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MethodNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MethodNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MetricAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MetricAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MetricAlarmOperator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MetricAlarmOperator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrateVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrateVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MigrationDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MigrationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MigrationFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationFeatureNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationFeatureNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationHostErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationHostErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationHostWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationHostWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MigrationNotReady");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationNotReady.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationResourceErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationResourceErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationResourceWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationResourceWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MigrationWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MigrationWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MismatchedBundle");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MismatchedBundle.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MismatchedNetworkPolicies");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MismatchedNetworkPolicies.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MismatchedVMotionNetworkNames");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MismatchedVMotionNetworkNames.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MissingBmcSupport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingBmcSupport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MissingController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MissingLinuxCustResources");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingLinuxCustResources.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MissingNetworkIpConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingNetworkIpConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MissingObject");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingObject.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MissingPowerOffConfiguration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingPowerOffConfiguration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MissingPowerOnConfiguration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingPowerOnConfiguration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MissingProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MissingWindowsCustResources");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MissingWindowsCustResources.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ModeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ModeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ModifyListViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ModifyListViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MonthlyByDayTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MonthlyByDayTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MonthlyByWeekdayTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MonthlyByWeekdayTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MonthlyTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MonthlyTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MountError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MountError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MountToolsInstallerRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MountToolsInstallerRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveDatastoreFileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveDatastoreFileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveDVPortRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveDVPortRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveHostIntoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveHostIntoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveIntoFolderRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveIntoFolderRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveIntoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveIntoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveIntoResourcePoolRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveIntoResourcePoolRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MoveVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MoveVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "MultipathState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MultipathState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MultipleCertificatesVerifyFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MultipleCertificatesVerifyFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MultipleCertificatesVerifyFaultThumbprintData");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MultipleCertificatesVerifyFaultThumbprintData.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"MultipleSnapshotsNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.MultipleSnapshotsNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NasConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NasConnectionLimitReached");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasConnectionLimitReached.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NASDatastoreCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NASDatastoreCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings20() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "NasDatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasDatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NasSessionCredentialConflict");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasSessionCredentialConflict.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NasStorageProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasStorageProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NasVolumeNotMounted");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NasVolumeNotMounted.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NetworkCopyFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkCopyFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NetworkEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NetworkInaccessible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkInaccessible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NetworkPolicyProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkPolicyProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NetworkProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NetworkProfileDnsConfigProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkProfileDnsConfigProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NetworksMayNotBeTheSame");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworksMayNotBeTheSame.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NetworkSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NetworkSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NicSettingMismatch");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NicSettingMismatch.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoAccessUserEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoAccessUserEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoActiveHostInCluster");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoActiveHostInCluster.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoAvailableIp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoAvailableIp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoClientCertificate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoClientCertificate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoCompatibleHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoDatastoresConfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoDatastoresConfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoDiskFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoDiskFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoDiskSpace");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoDiskSpace.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoDisksToCustomize");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoDisksToCustomize.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoGateway");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoGateway.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoGuestHeartbeat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoGuestHeartbeat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoHostSuitableForFtSecondary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoHostSuitableForFtSecondary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoLicenseEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoLicenseEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoLicenseServerConfigured");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoLicenseServerConfigured.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoMaintenanceModeDrsRecommendationForVM");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoMaintenanceModeDrsRecommendationForVM.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NonHomeRDMVMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NonHomeRDMVMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NonPersistentDisksNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NonPersistentDisksNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoPeerHostFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoPeerHostFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoPermission");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoPermission.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoPermissionOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoPermissionOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoPermissionOnNasVolume");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoPermissionOnNasVolume.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoSubjectName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoSubjectName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotAuthenticated");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotAuthenticated.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughCpus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotEnoughCpus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughLicenses");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotEnoughLicenses.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NotEnoughLogicalCpus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotEnoughLogicalCpus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NotEnoughResourcesToStartVmEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotEnoughResourcesToStartVmEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotImplemented");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotImplemented.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotSupportedHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NotSupportedHostInCluster");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotSupportedHostInCluster.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NotUserConfigurableProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NotUserConfigurableProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NoVcManagedIpConfigured");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoVcManagedIpConfigured.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoVirtualNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoVirtualNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NoVmInVApp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NoVmInVApp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NumericRange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NumericRange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "NumPortsProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NumPortsProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NumVirtualCpusIncompatible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NumVirtualCpusIncompatible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NumVirtualCpusIncompatibleReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NumVirtualCpusIncompatibleReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"NumVirtualCpusNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.NumVirtualCpusNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ObjectContent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ObjectContent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ObjectSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ObjectSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ObjectUpdate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ObjectUpdate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ObjectUpdateKind");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ObjectUpdateKind.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OnceTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OnceTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OpenInventoryViewFolderRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OpenInventoryViewFolderRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OptionDef");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OptionDef.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OptionProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OptionProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OptionType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OptionType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OptionValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OptionValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OrAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OrAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OutOfBounds");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OutOfBounds.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OutOfSyncDvsHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OutOfSyncDvsHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OverwriteCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OverwriteCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfAttribute");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfAttribute.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfConnectedDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfConnectedDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfConnectedDeviceFloppy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfConnectedDeviceFloppy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfConnectedDeviceIso");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfConnectedDeviceIso.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateDescriptorParams");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfCreateDescriptorParams.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateDescriptorResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfCreateDescriptorResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateImportSpecParams");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfCreateImportSpecParams.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfCreateImportSpecResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfCreateImportSpecResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfDeploymentOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfDeploymentOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfDiskMappingNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfDiskMappingNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfDuplicatedElementBoundary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfDuplicatedElementBoundary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfDuplicateElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfDuplicateElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfElementInvalidValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfElementInvalidValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfExport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfExport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfFile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfFile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfFileItem");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfFileItem.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfHardwareCheck");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfHardwareCheck.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfHardwareExport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfHardwareExport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfHostValueNotParsed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfHostValueNotParsed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfImport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfImport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidPackage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidPackage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfInvalidValueConfiguration");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidValueConfiguration.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfInvalidValueEmpty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidValueEmpty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfInvalidValueFormatMalformed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidValueFormatMalformed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfInvalidValueReference");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidValueReference.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidVmName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfInvalidVmName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfManagerCommonParams");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfManagerCommonParams.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfMappedOsId");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfMappedOsId.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings21() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfMissingAttribute");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfMissingAttribute.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfMissingElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfMissingElementNormalBoundary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfMissingElementNormalBoundary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingHardware");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfMissingHardware.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfNetworkMapping");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfNetworkMapping.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfNoHostNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfNoHostNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfNoSupportedHardwareFamily");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfNoSupportedHardwareFamily.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfParseDescriptorParams");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfParseDescriptorParams.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfParseDescriptorResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfParseDescriptorResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfProperty");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfProperty.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyExport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyExport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyNetwork");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyNetwork.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfPropertyQualifier");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyQualifier.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfPropertyQualifierDuplicate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyQualifierDuplicate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfPropertyQualifierIgnored");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyQualifierIgnored.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfPropertyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfSystemFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfSystemFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfToXmlUnsupportedElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfToXmlUnsupportedElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnableToExportDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnableToExportDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnexpectedElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnexpectedElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnknownDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnknownDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnknownDeviceBacking");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnknownDeviceBacking.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnknownEntity");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnknownEntity.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedAttribute");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedAttribute.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedAttributeValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedAttributeValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedDeviceExport");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedDeviceExport.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedElementValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedElementValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedPackage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedPackage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedSection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedSection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfUnsupportedSubType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedSubType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfUnsupportedType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfValidateHostParams");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfValidateHostParams.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"OvfValidateHostResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfValidateHostResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfWrongElement");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfWrongElement.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfWrongNamespace");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfWrongNamespace.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "OvfXmlFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.OvfXmlFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ParaVirtualSCSIController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ParaVirtualSCSIController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ParaVirtualSCSIControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ParaVirtualSCSIControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ParseDescriptorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ParseDescriptorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PasswordField");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PasswordField.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchAlreadyInstalled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchAlreadyInstalled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchBinariesNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchBinariesNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PatchInstallFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchInstallFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchIntegrityError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchIntegrityError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchMetadataCorrupted");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchMetadataCorrupted.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchMetadataInvalid");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchMetadataInvalid.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchMetadataNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchMetadataNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PatchMissingDependencies");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchMissingDependencies.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PatchNotApplicable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchNotApplicable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PatchSuperseded");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PatchSuperseded.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfCompositeMetric");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfCompositeMetric.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfCounterInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfCounterInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfEntityMetric");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfEntityMetric.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfEntityMetricBase");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfEntityMetricBase.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfEntityMetricCSV");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfEntityMetricCSV.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfFormat");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfFormat.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfInterval");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfInterval.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricId");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfMetricId.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfMetricIntSeries");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfMetricIntSeries.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricSeries");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfMetricSeries.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfMetricSeriesCSV");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfMetricSeriesCSV.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerformanceDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerformanceDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerformanceManagerUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerformanceManagerUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerformanceStatisticsDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerformanceStatisticsDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerformDvsProductSpecOperationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerformDvsProductSpecOperationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PerfProviderSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfProviderSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfQuerySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfQuerySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfSampleInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfSampleInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfStatsType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfStatsType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PerfSummaryType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PerfSummaryType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Permission");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Permission.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PermissionAddedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PermissionAddedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PermissionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PermissionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PermissionRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PermissionRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PermissionUpdatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PermissionUpdatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PhysCompatRDMNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysCompatRDMNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNic");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNic.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PhysicalNicCdpDeviceCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicCdpDeviceCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicCdpInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicCdpInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicHint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicHint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PhysicalNicHintInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicHintInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicIpHint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicIpHint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PhysicalNicLinkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicLinkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PhysicalNicNameHint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicNameHint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PhysicalNicSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PlatformConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PlatformConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PnicUplinkProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PnicUplinkProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PolicyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PolicyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PortGroupConnecteeType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PortGroupConnecteeType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PosixUserSearchResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PosixUserSearchResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PostEventRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PostEventRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerDownHostToStandByRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerDownHostToStandByRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings22() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOffVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOffVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOffVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOffVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOnFtSecondaryFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnFtSecondaryFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOnFtSecondaryTimedout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnFtSecondaryTimedout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOnMultiVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnMultiVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOnVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerOnVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerOnVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PowerUpHostFromStandByRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PowerUpHostFromStandByRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PrivilegePolicyDef");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PrivilegePolicyDef.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProductComponentInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProductComponentInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileAssociatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileAssociatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileCompositeExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileCompositeExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileCompositePolicyOptionMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileCompositePolicyOptionMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileDeferredPolicyOptionParameter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileDeferredPolicyOptionParameter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileDescriptionSection");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileDescriptionSection.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileDissociatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileDissociatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileExecuteError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileExecuteError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileExecuteResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileExecuteResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileExecuteResultStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileExecuteResultStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileExpressionMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileExpressionMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfileMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileNumericComparator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileNumericComparator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileParameterMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileParameterMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ProfilePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfilePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfilePolicyMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfilePolicyMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfilePolicyOptionMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfilePolicyOptionMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfilePropertyPath");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfilePropertyPath.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileReferenceHostChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileReferenceHostChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileSerializedCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileSerializedCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileSimpleExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileSimpleExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileUpdateFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileUpdateFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ProfileUpdateFailedUpdateFailure");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ProfileUpdateFailedUpdateFailure.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PromoteDisksRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PromoteDisksRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PropertyChange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PropertyChange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PropertyChangeOp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PropertyChangeOp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PropertyFilterSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"PropertyFilterUpdate");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PropertyFilterUpdate.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "PropertySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.PropertySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAssignedLicensesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAssignedLicensesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableDisksForVmfsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableDisksForVmfsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableDvsSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableDvsSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailablePartitionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailablePartitionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailablePerfMetricRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailablePerfMetricRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableTimeZonesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryAvailableTimeZonesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryBootDevicesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryBootDevicesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryChangedDiskAreasRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryChangedDiskAreasRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryCompatibleHostForExistingDvsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryCompatibleHostForExistingDvsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryCompatibleHostForNewDvsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryCompatibleHostForNewDvsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryComplianceStatusRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryComplianceStatusRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigOptionDescriptorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigOptionDescriptorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigOptionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigOptionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigTargetRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfigTargetRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryConfiguredModuleOptionStringRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConfiguredModuleOptionStringRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryConnectionInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryConnectionInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryDateTimeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDateTimeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryDescriptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDescriptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsByUuidRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsByUuidRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsCompatibleHostSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsCompatibleHostSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsConfigTargetRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryDvsConfigTargetRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryEventsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryEventsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryExpressionMetadataRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryExpressionMetadataRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryFirmwareConfigUploadURLRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryFirmwareConfigUploadURLRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryHostConnectionInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostConnectionInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryHostProfileMetadataRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryHostProfileMetadataRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryIpPoolsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryIpPoolsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryLicenseSourceAvailabilityRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryLicenseSourceAvailabilityRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryLicenseUsageRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryLicenseUsageRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryMemoryOverheadExRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryMemoryOverheadExRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryMemoryOverheadRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryMemoryOverheadRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryModulesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryModulesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryNetConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryNetConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryNetworkHintRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryNetworkHintRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPartitionCreateDescRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPartitionCreateDescRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPartitionCreateOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPartitionCreateOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPathSelectionPolicyOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPathSelectionPolicyOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfCompositeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCompositeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfCounterByLevelRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCounterByLevelRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfCounterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfCounterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfProviderSummaryRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfProviderSummaryRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPerfRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryPolicyMetadataRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryPolicyMetadataRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryStorageArrayTypePolicyOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryStorageArrayTypePolicyOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QuerySupportedFeaturesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QuerySupportedFeaturesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryTargetCapabilitiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryTargetCapabilitiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryUnownedFilesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnownedFilesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryUnresolvedVmfsVolumeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnresolvedVmfsVolumeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryUnresolvedVmfsVolumesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUnresolvedVmfsVolumesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryUsedVlanIdInDvsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryUsedVlanIdInDvsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskFragmentationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskFragmentationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings23() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskGeometryRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskGeometryRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskUuidRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVirtualDiskUuidRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreCreateOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreCreateOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreExpandOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreExpandOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreExtendOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVmfsDatastoreExtendOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVMotionCompatibilityExRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVMotionCompatibilityExRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"QueryVMotionCompatibilityRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.QueryVMotionCompatibilityRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RawDiskNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RawDiskNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RDMConversionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RDMConversionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RDMNotPreserved");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RDMNotPreserved.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RDMNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RDMNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RDMNotSupportedOnDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RDMNotSupportedOnDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RDMPointsToInaccessibleDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RDMPointsToInaccessibleDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReadNextEventsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadNextEventsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReadNextTasksRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadNextTasksRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReadOnlyDisksWithLegacyDestination");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadOnlyDisksWithLegacyDestination.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReadPreviousEventsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadPreviousEventsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReadPreviousTasksRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReadPreviousTasksRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RebootGuestRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RebootGuestRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RebootHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RebootHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RebootRequired");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RebootRequired.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RecommendationReasonCode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecommendationReasonCode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RecommendationType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecommendationType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RecommendHostsForVmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecommendHostsForVmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureAlarmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureAlarmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureAutostartRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureAutostartRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureClusterRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureClusterRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureComputeResourceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureComputeResourceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDVPortgroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDVPortgroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDVPortRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDVPortRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDvsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureDvsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureHostForDASRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureHostForDASRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureServiceConsoleReservationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureServiceConsoleReservationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureSnmpAgentRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureSnmpAgentRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureVirtualMachineReservationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigureVirtualMachineReservationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconfigVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconfigVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ReconnectHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReconnectHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RecordReplayDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecordReplayDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RectifyDvsHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RectifyDvsHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RecurrentTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RecurrentTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshDatastoreStorageInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDatastoreStorageInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshDateTimeSystemRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDateTimeSystemRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshDVPortStateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshDVPortStateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshFirewallRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshFirewallRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshHealthStatusSystemRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshHealthStatusSystemRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshNetworkSystemRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshNetworkSystemRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshRecommendationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshRecommendationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RefreshRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshServicesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshServicesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshStorageInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshStorageInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RefreshStorageSystemRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RefreshStorageSystemRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RegisterChildVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterChildVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RegisterExtensionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterExtensionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RegisterVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RegisterVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ReloadRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ReloadRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RelocateVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RelocateVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoteDeviceNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoteDeviceNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveAlarmRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAlarmRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveAllSnapshotsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAllSnapshotsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveAssignedLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAssignedLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveAuthorizationRoleRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveAuthorizationRoleRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveCustomFieldDefRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveCustomFieldDefRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveEntityPermissionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveEntityPermissionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RemoveFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveInternetScsiSendTargetsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveInternetScsiSendTargetsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveInternetScsiStaticTargetsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveInternetScsiStaticTargetsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveLicenseLabelRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveLicenseLabelRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemovePerfIntervalRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemovePerfIntervalRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemovePortGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemovePortGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveServiceConsoleVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveServiceConsoleVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveSnapshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveSnapshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveUserRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveUserRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RemoveVirtualSwitchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RemoveVirtualSwitchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RenameCustomFieldDefRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameCustomFieldDefRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RenameCustomizationSpecRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameCustomizationSpecRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RenameDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RenameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RenameSnapshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RenameSnapshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RequestCanceled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RequestCanceled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RescanAllHbaRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanAllHbaRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RescanHbaRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanHbaRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RescanVmfsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RescanVmfsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetCollectorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetCollectorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetEntityPermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetEntityPermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetFirmwareToFactoryDefaultsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetFirmwareToFactoryDefaultsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetGuestInformationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetGuestInformationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetListViewFromViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetListViewFromViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetListViewRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetListViewRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResetSystemHealthInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetSystemHealthInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ResetVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResetVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResignatureUnresolvedVmfsVolumeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResignatureUnresolvedVmfsVolumeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResolveMultipleUnresolvedVmfsVolumesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourceAllocationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourceAllocationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings24() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourceConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ResourceInUse");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourceInUse.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourceNotAvailable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourceNotAvailable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolDestroyedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolDestroyedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolMovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolMovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolQuickStats");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolQuickStats.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolResourceUsage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolResourceUsage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolRuntimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolRuntimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourcePoolSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourcePoolSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ResourceViolatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ResourceViolatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RestartServiceConsoleVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestartServiceConsoleVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RestartServiceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestartServiceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RestoreFirmwareConfigurationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestoreFirmwareConfigurationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RestrictedVersion");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RestrictedVersion.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveAllPermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveAllPermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveArgumentDescriptionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveArgumentDescriptionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveDasAdvancedRuntimeInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveDasAdvancedRuntimeInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveDiskPartitionInfoRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveDiskPartitionInfoRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveEntityPermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveEntityPermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveEntityScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveEntityScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveObjectScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveObjectScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveProductComponentsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveProductComponentsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrievePropertiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrievePropertiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveRolePermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveRolePermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveServiceContentRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveServiceContentRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RetrieveUserGroupsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RetrieveUserGroupsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RevertToCurrentSnapshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RevertToCurrentSnapshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RevertToSnapshotRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RevertToSnapshotRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RewindCollectorRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RewindCollectorRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RoleAddedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RoleAddedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RoleEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RoleEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RoleEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RoleEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RoleRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RoleRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RoleUpdatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RoleUpdatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RuleViolation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RuleViolation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"RunScheduledTaskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RunScheduledTaskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RunScriptAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RunScriptAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "RuntimeFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.RuntimeFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScanHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScanHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScanHostPatchV2RequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScanHostPatchV2RequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskCompletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskCompletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskDetail");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskDetail.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskEmailCompletedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskEmailCompletedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskEmailFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskEmailFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScheduledTaskStartedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScheduledTaskStartedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLun");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLun.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScsiLunCapabilities");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunCapabilities.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ScsiLunDescriptorQuality");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunDescriptorQuality.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunDurableName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunDurableName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ScsiLunType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SearchDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SearchDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SearchDatastoreSubFoldersRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SearchDatastoreSubFoldersRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SecondaryVmAlreadyDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecondaryVmAlreadyDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SecondaryVmAlreadyEnabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecondaryVmAlreadyEnabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SecondaryVmAlreadyRegistered");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecondaryVmAlreadyRegistered.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SecondaryVmNotRegistered");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecondaryVmNotRegistered.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SecurityError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecurityError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SecurityProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SecurityProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SelectActivePartitionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectActivePartitionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SelectionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SelectVnicForNicTypeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectVnicForNicTypeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SelectVnicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SelectVnicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SendEmailAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SendEmailAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SendSNMPAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SendSNMPAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SendTestNotificationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SendTestNotificationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ServerLicenseExpiredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServerLicenseExpiredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ServerStartedSessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServerStartedSessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ServiceConsolePortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServiceConsolePortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ServiceConsoleReservationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServiceConsoleReservationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ServiceContent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServiceContent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ServiceProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ServiceProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SessionIsActiveRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SessionIsActiveRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SessionManagerLocalTicket");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SessionManagerLocalTicket.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SessionTerminatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SessionTerminatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetCollectorPageSizeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetCollectorPageSizeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"setCustomValueRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetCustomValueRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetDisplayTopologyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetDisplayTopologyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetEntityPermissionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetEntityPermissionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetExtensionCertificateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetExtensionCertificateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetFieldRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetFieldRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetLicenseEditionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetLicenseEditionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetLocaleRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetLocaleRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetMultipathLunPolicyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetMultipathLunPolicyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetPublicKeyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetPublicKeyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings25() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetScreenResolutionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetScreenResolutionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetTaskDescriptionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetTaskDescriptionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetTaskStateRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetTaskStateRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SetVirtualDiskUuidRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SetVirtualDiskUuidRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SharedBusControllerNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SharedBusControllerNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SharesInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SharesInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SharesLevel");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SharesLevel.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ShrinkVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShrinkVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ShutdownGuestRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShutdownGuestRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ShutdownHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ShutdownHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SlpDiscoveryMethod");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SlpDiscoveryMethod.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotCloneNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotCloneNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotCopyNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotCopyNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotIncompatibleDeviceInVm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotIncompatibleDeviceInVm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotLocked");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotLocked.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotMoveFromNonHomeNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotMoveFromNonHomeNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotMoveNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotMoveNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotMoveToNonHomeNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotMoveToNonHomeNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotNoChange");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotNoChange.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SnapshotRevertIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SnapshotRevertIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SSLDisabledFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SSLDisabledFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SSLVerifyFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SSLVerifyFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SSPIChallenge");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SSPIChallenge.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StageHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StageHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StandbyGuestRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StandbyGuestRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StartRecordingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartRecordingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StartReplayingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartReplayingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StartServiceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StartServiceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StateAlarmExpression");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StateAlarmExpression.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "StateAlarmOperator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StateAlarmOperator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "StaticRouteProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StaticRouteProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StopRecordingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopRecordingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StopReplayingRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopReplayingRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StopServiceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StopServiceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "StorageProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StorageProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"StorageVMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StorageVMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "StringOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StringOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "StringPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.StringPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SuspendedRelocateNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SuspendedRelocateNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SuspendVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SuspendVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SwapDatastoreNotWritableOnHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SwapDatastoreNotWritableOnHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SwapDatastoreUnset");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SwapDatastoreUnset.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SwapPlacementOverrideNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SwapPlacementOverrideNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"SwitchNotInUpgradeMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SwitchNotInUpgradeMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "SystemError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.SystemError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Tag");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Tag.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TaskFilterSpecByEntity");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpecByEntity.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TaskFilterSpecByTime");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpecByTime.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TaskFilterSpecByUsername");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpecByUsername.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TaskFilterSpecRecursionOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpecRecursionOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TaskFilterSpecTimeOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskFilterSpecTimeOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskInfoState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskInfoState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskInProgress");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskInProgress.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonAlarm");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskReasonAlarm.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonSchedule");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskReasonSchedule.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonSystem");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskReasonSystem.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonUser");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskReasonUser.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TaskTimeoutEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TaskTimeoutEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateBeingUpgradedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateBeingUpgradedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateConfigFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateConfigFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateConfigFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateConfigFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateUpgradedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateUpgradedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TemplateUpgradeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TemplateUpgradeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TerminateFaultTolerantVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TerminateFaultTolerantVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TerminateSessionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TerminateSessionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "Timedout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.Timedout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TimedOutHostOperationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TimedOutHostOperationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsAlreadyUpgraded");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsAlreadyUpgraded.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsAutoUpgradeNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsAutoUpgradeNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ToolsConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsImageNotAvailable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsImageNotAvailable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsImageSignatureCheckFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsImageSignatureCheckFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsInstallationInProgress");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsInstallationInProgress.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsUnavailable.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ToolsUpgradeCancelled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ToolsUpgradeCancelled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TooManyConsecutiveOverrides");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TooManyConsecutiveOverrides.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TooManyDevices");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TooManyDevices.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TooManyDisksOnLegacyHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TooManyDisksOnLegacyHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TooManyHosts");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TooManyHosts.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TooManySnapshotLevels");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TooManySnapshotLevels.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TraversalSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TraversalSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"TurnOffFaultToleranceForVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TurnOffFaultToleranceForVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "TypeDescription");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.TypeDescription.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnassignUserFromGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnassignUserFromGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UncommittedUndoableDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UncommittedUndoableDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnconfiguredPropertyValue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnconfiguredPropertyValue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UncustomizableGuest");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UncustomizableGuest.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnexpectedCustomizationFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnexpectedCustomizationFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UnexpectedFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnexpectedFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UninstallHostPatchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UninstallHostPatchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UninstallServiceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UninstallServiceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings26() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnlicensedVirtualMachinesEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnlicensedVirtualMachinesEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnlicensedVirtualMachinesFoundEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnlicensedVirtualMachinesFoundEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnmountForceMountedVmfsVolumeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnmountForceMountedVmfsVolumeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnmountToolsInstallerRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnmountToolsInstallerRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UnrecognizedHost");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnrecognizedHost.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnregisterAndDestroyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterAndDestroyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnregisterExtensionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterExtensionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"unregisterVAppRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterVAppRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnregisterVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnregisterVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnsharedSwapVMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnsharedSwapVMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnsupportedDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnsupportedDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UnsupportedGuest");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnsupportedGuest.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnsupportedVimApiVersion");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnsupportedVimApiVersion.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnsupportedVmxLocation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnsupportedVmxLocation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UnusedVirtualDiskBlocksNotScrubbed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UnusedVirtualDiskBlocksNotScrubbed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateAssignedLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateAssignedLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateAuthorizationRoleRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateAuthorizationRoleRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateBootDeviceRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateBootDeviceRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateChildResourceConfigurationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateChildResourceConfigurationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateClusterProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateClusterProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateConsoleIpRouteConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateConsoleIpRouteConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdatedAgentBeingRestartedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatedAgentBeingRestartedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDateTimeConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDateTimeConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDateTimeRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDateTimeRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDefaultPolicyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDefaultPolicyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDiskPartitionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDiskPartitionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDnsConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDnsConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateDvsCapabilityRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateDvsCapabilityRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateExtensionRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateExtensionRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateFlagsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateFlagsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateHostProfileRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateHostProfileRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAdvancedOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAdvancedOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAliasRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAliasRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAuthenticationPropertiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiAuthenticationPropertiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiDigestPropertiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiDigestPropertiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiDiscoveryPropertiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiDiscoveryPropertiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiIPPropertiesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiIPPropertiesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiNameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateInternetScsiNameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpmiRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpmiRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpPoolRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpPoolRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpRouteConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpRouteConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpRouteTableConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateIpRouteTableConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateLicenseLabelRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLicenseLabelRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateLicenseRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLicenseRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateLocalSwapDatastoreRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateLocalSwapDatastoreRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateModuleOptionStringRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateModuleOptionStringRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateNetworkConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateNetworkConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateOptionsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateOptionsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdatePassthruConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePassthruConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdatePerfIntervalRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePerfIntervalRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdatePhysicalNicLinkSpeedRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePhysicalNicLinkSpeedRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdatePortGroupRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdatePortGroupRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateProgressRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateProgressRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateReferenceHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateReferenceHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateScsiLunDisplayNameRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateScsiLunDisplayNameRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateServiceConsoleVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServiceConsoleVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateServiceMessageRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServiceMessageRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateServicePolicyRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateServicePolicyRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UpdateSet");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateSet.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateSoftwareInternetScsiEnabledRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateSoftwareInternetScsiEnabledRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateSystemResourcesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateSystemResourcesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateUserRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateUserRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateVAppConfigRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVAppConfigRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateVirtualNicRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVirtualNicRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpdateVirtualSwitchRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpdateVirtualSwitchRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UpgradePolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradePolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpgradeToolsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeToolsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVmfsRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVmfsRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVmLayoutRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVmLayoutRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVMRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UpgradeVMRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserAssignedToGroup");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserAssignedToGroup.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserInputRequiredParameterMetadata");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserInputRequiredParameterMetadata.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserLoginSessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserLoginSessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserLogoutSessionEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserLogoutSessionEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserNotFound");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserNotFound.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserPasswordChanged");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserPasswordChanged.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserSearchResult");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserSearchResult.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserSession");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserSession.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"UserUnassignedFromGroup");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserUnassignedFromGroup.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "UserUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.UserUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ValidateHostRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ValidateHostRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ValidateMigrationRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ValidateMigrationRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ValidateMigrationTestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ValidateMigrationTestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppAutoStartAction");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppAutoStartAction.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppCloneSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppCloneSpecNetworkMappingPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppCloneSpecNetworkMappingPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppEntityConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppEntityConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppIPAssignmentInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppIPAssignmentInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppIPAssignmentInfoAllocationSchemes");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppIPAssignmentInfoAllocationSchemes.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppIPAssignmentInfoIpAllocationPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppIPAssignmentInfoIpAllocationPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VAppIPAssignmentInfoProtocols");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppIPAssignmentInfoProtocols.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppNotRunning");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppNotRunning.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings27() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "VAppOvfSectionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppOvfSectionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppOvfSectionSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppOvfSectionSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppProductInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppProductInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppProductSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppProductSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertyFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppPropertyFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertyInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppPropertyInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertySpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppPropertySpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VAppTaskInProgress");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VAppTaskInProgress.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VcAgentUninstalledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VcAgentUninstalledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VcAgentUninstallFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VcAgentUninstallFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VcAgentUpgradedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VcAgentUpgradedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VcAgentUpgradeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VcAgentUpgradeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VimAccountPasswordChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VimAccountPasswordChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VimFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VimFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualAppImportSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualAppImportSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAppSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualAppSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualAppVAppState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualAppVAppState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualBusLogicController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualBusLogicController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualBusLogicControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualBusLogicControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdrom");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdrom.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromAtapiBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromAtapiBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromAtapiBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromAtapiBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromIsoBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromIsoBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromIsoBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromIsoBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromPassthroughBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromPassthroughBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromPassthroughBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromPassthroughBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromRemoteAtapiBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromRemoteAtapiBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromRemoteAtapiBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromRemoteAtapiBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromRemotePassthroughBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromRemotePassthroughBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualCdromRemotePassthroughBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualCdromRemotePassthroughBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConfigSpecFileOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConfigSpecFileOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConfigSpecOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConfigSpecOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConnectInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConnectInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConnectInfoStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConnectInfoStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceConnectOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceConnectOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceFileBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceFileBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceFileBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceFileBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceFileExtension");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceFileExtension.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDevicePipeBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDevicePipeBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDevicePipeBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDevicePipeBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceRemoteDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceRemoteDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDeviceRemoteDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDeviceRemoteDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDisk");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDisk.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskAdapterType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskAdapterType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskBlocksNotFullyProvisioned");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskBlocksNotFullyProvisioned.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskCompatibilityMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskCompatibilityMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskFlatVer1BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskFlatVer1BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskFlatVer1BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskFlatVer1BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskFlatVer2BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskFlatVer2BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskFlatVer2BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskFlatVer2BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskMode");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskMode.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskPartitionedRawDiskVer2BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskPartitionedRawDiskVer2BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskPartitionedRawDiskVer2BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskPartitionedRawDiskVer2BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskRawDiskMappingVer1BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskRawDiskMappingVer1BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskRawDiskMappingVer1BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskRawDiskMappingVer1BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskRawDiskVer2BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskRawDiskVer2BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskRawDiskVer2BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskRawDiskVer2BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskSparseVer1BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskSparseVer1BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskSparseVer1BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskSparseVer1BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskSparseVer2BackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskSparseVer2BackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualDiskSparseVer2BackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskSparseVer2BackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualDiskType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualE1000.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualE1000Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEnsoniq1371");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEnsoniq1371.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEnsoniq1371Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEnsoniq1371Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCard");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCard.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardDistributedVirtualPortBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardDistributedVirtualPortBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardDVPortBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardDVPortBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardLegacyNetworkBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardLegacyNetworkBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardLegacyNetworkBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardLegacyNetworkBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardLegacyNetworkDeviceName");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardLegacyNetworkDeviceName.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardMacType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardMacType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardNetworkBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardNetworkBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardNetworkBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardNetworkBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualEthernetCardOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualEthernetCardOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyImageBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyImageBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyImageBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyImageBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyRemoteDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyRemoteDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualFloppyRemoteDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualFloppyRemoteDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHardware");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualHardware.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualHardwareCompatibilityIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualHardwareCompatibilityIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualHardwareOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualHardwareOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings28() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualHardwareVersionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualHardwareVersionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualIDEController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualIDEController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualIDEControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualIDEControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualKeyboard");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualKeyboard.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualKeyboardOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualKeyboardOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualLsiLogicController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualLsiLogicController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualLsiLogicControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualLsiLogicControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualLsiLogicSASController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualLsiLogicSASController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualLsiLogicSASControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualLsiLogicSASControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineAffinityInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineAffinityInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineBootOptions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineBootOptions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineCapability");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineCapability.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineCdromInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineCdromInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineCloneSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineCloneSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigInfoDatastoreUrlPair");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigInfoDatastoreUrlPair.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigInfoNpivWwnType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigInfoNpivWwnType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigInfoSwapPlacementType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigInfoSwapPlacementType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigOptionDescriptor");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigOptionDescriptor.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigSpecNpivWwnOp");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigSpecNpivWwnOp.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConfigSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConfigSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConnectionState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConnectionState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineConsolePreferences");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineConsolePreferences.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineCpuIdInfoSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineCpuIdInfoSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineDatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineDatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineDatastoreVolumeOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineDatastoreVolumeOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineDefaultPowerOpInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineDefaultPowerOpInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineDiskDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineDiskDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineDisplayTopology");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineDisplayTopology.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFaultToleranceState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFaultToleranceState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutDiskLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutDiskLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutEx");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutEx.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutExDiskLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutExDiskLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutExDiskUnit");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutExDiskUnit.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutExFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutExFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutExFileType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutExFileType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutExSnapshotLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutExSnapshotLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFileLayoutSnapshotLayout");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFileLayoutSnapshotLayout.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFlagInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFlagInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFlagInfoMonitorType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFlagInfoMonitorType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFlagInfoVirtualExecUsage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFlagInfoVirtualExecUsage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFlagInfoVirtualMmuUsage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFlagInfoVirtualMmuUsage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineFloppyInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineFloppyInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineGuestOsFamily");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineGuestOsFamily.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineGuestOsIdentifier");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineGuestOsIdentifier.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineGuestState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineGuestState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineGuestSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineGuestSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineHtSharing");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineHtSharing.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineIdeDiskDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineIdeDiskDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineIdeDiskDevicePartitionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineIdeDiskDevicePartitionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineImportSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineImportSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineLegacyNetworkSwitchInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineLegacyNetworkSwitchInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMemoryAllocationPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMemoryAllocationPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMemoryReservationInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMemoryReservationInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMemoryReservationSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMemoryReservationSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMessage");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMessage.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMksTicket");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMksTicket.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineMovePriority");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineMovePriority.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineNeedSecondaryReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineNeedSecondaryReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineNetworkInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineNetworkInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineNetworkShaperInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineNetworkShaperInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineParallelInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineParallelInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachinePciPassthroughInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachinePciPassthroughInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachinePowerOffBehavior");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachinePowerOffBehavior.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachinePowerOpType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachinePowerOpType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachinePowerState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachinePowerState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineQuestionInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineQuestionInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineQuickStats");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineQuickStats.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRecordReplayState");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRecordReplayState.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRelocateDiskMoveOptions");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRelocateDiskMoveOptions.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRelocateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRelocateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRelocateSpecDiskLocator");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRelocateSpecDiskLocator.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRelocateTransformation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRelocateTransformation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineRuntimeInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineRuntimeInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineScsiDiskDeviceInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineScsiDiskDeviceInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineScsiPassthroughInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineScsiPassthroughInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineScsiPassthroughType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineScsiPassthroughType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineSerialInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineSerialInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineSnapshotInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineSnapshotInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineSnapshotTree");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineSnapshotTree.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineSoundInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineSoundInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineStandbyActionType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineStandbyActionType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineStorageInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineStorageInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineStorageSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineStorageSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineSummary");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineSummary.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineTargetInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineTargetInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineTargetInfoConfigurationTag");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineTargetInfoConfigurationTag.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineToolsRunningStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineToolsRunningStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineToolsStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineToolsStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineToolsVersionStatus");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineToolsVersionStatus.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineUsageOnDatastore");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineUsageOnDatastore.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineUsbInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineUsbInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineUsbInfoFamily");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineUsbInfoFamily.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineUsbInfoSpeed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineUsbInfoSpeed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineVideoCard");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineVideoCard.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineVMCIDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineVMCIDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings29() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineVMCIDeviceOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineVMCIDeviceOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualMachineVMIROM");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualMachineVMIROM.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualNicManagerNetConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualNicManagerNetConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPortDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPortDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPortDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPortDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPortFileBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPortFileBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPortFileBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPortFileBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualParallelPortOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualParallelPortOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIPassthrough");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIPassthrough.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIPassthroughDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIPassthroughDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIPassthroughDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIPassthroughDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCIPassthroughOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCIPassthroughOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCNet32");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCNet32.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPCNet32Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPCNet32Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPointingDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPointingDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPointingDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPointingDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPointingDeviceDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPointingDeviceDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPointingDeviceHostChoice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPointingDeviceHostChoice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPointingDeviceOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPointingDeviceOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPS2Controller");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPS2Controller.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualPS2ControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualPS2ControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIPassthrough");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIPassthrough.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIPassthroughDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIPassthroughDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIPassthroughDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIPassthroughDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSCSIPassthroughOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSIPassthroughOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSISharing");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSCSISharing.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortEndPoint");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortEndPoint.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortFileBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortFileBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortFileBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortFileBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortPipeBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortPipeBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSerialPortPipeBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSerialPortPipeBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSIOController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSIOController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSIOControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSIOControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSoundBlaster16");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundBlaster16.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSoundBlaster16Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundBlaster16Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundCard");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundCard.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSoundCardDeviceBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundCardDeviceBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSoundCardDeviceBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundCardDeviceBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSoundCardOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSoundCardOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSwitchProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSwitchProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualSwitchSelectionProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualSwitchSelectionProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSB");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSB.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualUSBController");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSBController.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualUSBControllerOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSBControllerOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSBOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualUSBUSBBackingInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSBUSBBackingInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualUSBUSBBackingOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualUSBUSBBackingOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualVideoCardOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVideoCardOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualVMIROMOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVMIROMOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnet.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet2");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnet2.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualVmxnet2Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnet2Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet3");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnet3.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualVmxnet3Option");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnet3Option.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VirtualVmxnetOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VirtualVmxnetOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VlanProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VlanProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmAcquiredMksTicketEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmAcquiredMksTicketEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmAlreadyExistsInDatacenter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmAlreadyExistsInDatacenter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmAutoRenameEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmAutoRenameEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingClonedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingClonedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmBeingCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmBeingDeployedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingDeployedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmBeingHotMigratedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingHotMigratedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmBeingMigratedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingMigratedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmBeingRelocatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmBeingRelocatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmClonedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmClonedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmCloneEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmCloneEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmCloneFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmCloneFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmConfigFileQueryFilter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigFileQueryFilter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmConfigFileQueryFlags");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigFileQueryFlags.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmConfigIncompatibleForFaultTolerance");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigIncompatibleForFaultTolerance.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmConfigIncompatibleForRecordReplay");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigIncompatibleForRecordReplay.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmConfigMissingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigMissingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmConnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmConnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDasBeingResetEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDasBeingResetEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDasBeingResetWithScreenshotEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDasBeingResetWithScreenshotEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDasResetFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDasResetFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDasUpdateErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDasUpdateErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmDasUpdateOkEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDasUpdateOkEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDateRolledBackEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDateRolledBackEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmDeployedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDeployedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDeployFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDeployFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDisconnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDisconnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmDiscoveredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiscoveredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiskFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings30() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiskFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiskFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDiskFileQueryFilter");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiskFileQueryFilter.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmDiskFileQueryFlags");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmDiskFileQueryFlags.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmEmigratingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmEmigratingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmEndRecordingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmEndRecordingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmEndReplayingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmEndReplayingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmEventArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmEventArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedMigrateEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedMigrateEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedRelayoutEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedRelayoutEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedRelayoutOnVmfs2DatastoreEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedRelayoutOnVmfs2DatastoreEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedStartingSecondaryEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedStartingSecondaryEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedStartingSecondaryEventFailureReason");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedStartingSecondaryEventFailureReason.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToPowerOffEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToPowerOffEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToPowerOnEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToPowerOnEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToRebootGuestEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToRebootGuestEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToResetEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToResetEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToShutdownGuestEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToShutdownGuestEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToStandbyGuestEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToStandbyGuestEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedToSuspendEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedToSuspendEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFailedUpdatingSecondaryConfig");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailedUpdatingSecondaryConfig.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmFailoverFailed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFailoverFailed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceConfigIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceConfigIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceConfigIssueReasonForIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceConfigIssueReasonForIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceInvalidFileBacking");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceInvalidFileBacking.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceInvalidFileBackingDeviceType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceInvalidFileBackingDeviceType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceOpIssuesList");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceOpIssuesList.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceStateChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceStateChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceTurnedOffEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceTurnedOffEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmFaultToleranceVmTerminatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmFaultToleranceVmTerminatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmfsAlreadyMounted");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsAlreadyMounted.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmfsAmbiguousMount");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsAmbiguousMount.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreAllExtentOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreAllExtentOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreBaseOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreBaseOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMFSDatastoreCreatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMFSDatastoreCreatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreCreateSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreCreateSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMFSDatastoreExpandedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMFSDatastoreExpandedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreExpandSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreExpandSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMFSDatastoreExtendedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMFSDatastoreExtendedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreExtendSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreExtendSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreMultipleExtentOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreMultipleExtentOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmfsDatastoreSingleExtentOption");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreSingleExtentOption.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsDatastoreSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmfsMountFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmfsMountFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmGuestRebootEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmGuestRebootEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmGuestShutdownEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmGuestShutdownEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmGuestStandbyEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmGuestStandbyEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmHealthMonitoringStateChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmHealthMonitoringStateChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VMINotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMINotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmInstanceUuidAssignedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmInstanceUuidAssignedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmInstanceUuidChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmInstanceUuidChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmInstanceUuidConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmInstanceUuidConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmLimitLicense");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmLimitLicense.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmLogFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmLogFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmLogFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmLogFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmMacAssignedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMacAssignedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmMacChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMacChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmMacConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMacConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmMaxFTRestartCountReached");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMaxFTRestartCountReached.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmMaxRestartCountReached");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMaxRestartCountReached.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmMessageErrorEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMessageErrorEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmMessageEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMessageEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmMessageWarningEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMessageWarningEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmMigratedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmMigratedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmNoCompatibleHostForSecondaryEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmNoCompatibleHostForSecondaryEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmNoNetworkAccessEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmNoNetworkAccessEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmNvramFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmNvramFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmNvramFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmNvramFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VMOnConflictDVPort");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMOnConflictDVPort.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMOnVirtualIntranet");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMOnVirtualIntranet.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmOrphanedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmOrphanedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionCompatibilityType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionCompatibilityType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionInterfaceIssue");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionInterfaceIssue.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmotionInterfaceNotEnabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmotionInterfaceNotEnabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionLicenseExpiredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionLicenseExpiredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionLinkCapacityLow");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionLinkCapacityLow.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VMotionLinkDown");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionLinkDown.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionNotConfigured");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionNotConfigured.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VMotionNotLicensed");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionNotLicensed.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMotionProtocolIncompatible");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMotionProtocolIncompatible.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmPortGroupProfile");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPortGroupProfile.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmPoweredOffEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPoweredOffEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmPoweredOnEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPoweredOnEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmPoweringOnWithCustomizedDVPortEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPoweringOnWithCustomizedDVPortEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmPowerOffOnIsolationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPowerOffOnIsolationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmPowerOnDisabled");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPowerOnDisabled.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmPrimaryFailoverEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmPrimaryFailoverEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmReconfiguredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmReconfiguredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmRegisteredEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRegisteredEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRelayoutSuccessfulEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRelayoutSuccessfulEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRelayoutUpToDateEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRelayoutUpToDateEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmRelocatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRelocatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRelocateFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRelocateFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRelocateSpecEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRelocateSpecEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRemoteConsoleConnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRemoteConsoleConnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	private void addBindings31() {
		java.lang.Class cls;
		javax.xml.namespace.QName qName;
		javax.xml.namespace.QName qName2;
		java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
		java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
		java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
		java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
		java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
		java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
		java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
		java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
		java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
		java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRemoteConsoleDisconnectedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRemoteConsoleDisconnectedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmRemovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRemovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmRenamedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRenamedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmResettingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmResettingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmResourcePoolMovedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmResourcePoolMovedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmResourceReallocatedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmResourceReallocatedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmRestartedOnAlternateHostEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmRestartedOnAlternateHostEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmResumingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmResumingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSecondaryAddedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSecondaryAddedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSecondaryDisabledBySystemEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSecondaryDisabledBySystemEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSecondaryDisabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSecondaryDisabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSecondaryEnabledEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSecondaryEnabledEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSecondaryStartedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSecondaryStartedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmShutdownOnIsolationEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmShutdownOnIsolationEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmShutdownOnIsolationEventOperation");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmShutdownOnIsolationEventOperation.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmSnapshotFileInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSnapshotFileInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmSnapshotFileQuery");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSnapshotFileQuery.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmStartingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStartingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmStartingSecondaryEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStartingSecondaryEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmStartRecordingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStartRecordingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmStartReplayingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStartReplayingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmStaticMacConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStaticMacConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmStoppingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmStoppingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmSuspendedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSuspendedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmSuspendingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmSuspendingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmTimedoutStartingSecondaryEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmTimedoutStartingSecondaryEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmToolsUpgradeFault");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmToolsUpgradeFault.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmUnsupportedStartingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUnsupportedStartingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmUpgradeCompleteEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUpgradeCompleteEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmUpgradeFailedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUpgradeFailedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmUpgradingEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUpgradingEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmUuidAssignedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUuidAssignedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmUuidChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUuidChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmUuidConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmUuidConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmValidateMaxDevice");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmValidateMaxDevice.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareDistributedVirtualSwitchPvlanPortType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareDistributedVirtualSwitchPvlanPortType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareDistributedVirtualSwitchPvlanSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareDistributedVirtualSwitchPvlanSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareDistributedVirtualSwitchTrunkVlanSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareDistributedVirtualSwitchTrunkVlanSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareDistributedVirtualSwitchVlanIdSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareDistributedVirtualSwitchVlanIdSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareDistributedVirtualSwitchVlanSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareDistributedVirtualSwitchVlanSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSConfigInfo");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSConfigInfo.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSPortgroupPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSPortgroupPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSPortSetting");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSPortSetting.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSPvlanConfigSpec");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSPvlanConfigSpec.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareDVSPvlanMapEntry");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareDVSPvlanMapEntry.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VMwareUplinkPortOrderPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VMwareUplinkPortOrderPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"VmwareUplinkPortTeamingPolicy");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmwareUplinkPortTeamingPolicy.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnAssignedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmWwnAssignedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnChangedEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmWwnChangedEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnConflict");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmWwnConflict.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnConflictEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VmWwnConflictEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VnicPortArgument");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VnicPortArgument.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "VolumeEditorError");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.VolumeEditorError.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WaitForUpdatesRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WaitForUpdatesRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WakeOnLanNotSupported");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WakeOnLanNotSupported.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WakeOnLanNotSupportedByVmotionNIC");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WakeOnLanNotSupportedByVmotionNIC.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WarningUpgradeEvent");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WarningUpgradeEvent.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WeeklyTaskScheduler");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WeeklyTaskScheduler.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25", "WeekOfMonth");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WeekOfMonth.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(enumsf);
		cachedDeserFactories.add(enumdf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"WillModifyConfigCpuRequirements");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.WillModifyConfigCpuRequirements.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"XmlToCustomizationSpecItemRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.XmlToCustomizationSpecItemRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

		qName = new javax.xml.namespace.QName("urn:vim25",
				"ZeroFillVirtualDiskRequestType");
		cachedSerQNames.add(qName);
		cls = com.vmware.vim25.ZeroFillVirtualDiskRequestType.class;
		cachedSerClasses.add(cls);
		cachedSerFactories.add(beansf);
		cachedDeserFactories.add(beandf);

	}

	protected org.apache.axis.client.Call createCall()
			throws java.rmi.RemoteException {
		try {
			org.apache.axis.client.Call _call = super._createCall();
			if (super.maintainSessionSet) {
				_call.setMaintainSession(super.maintainSession);
			}
			if (super.cachedUsername != null) {
				_call.setUsername(super.cachedUsername);
			}
			if (super.cachedPassword != null) {
				_call.setPassword(super.cachedPassword);
			}
			if (super.cachedEndpoint != null) {
				_call.setTargetEndpointAddress(super.cachedEndpoint);
			}
			if (super.cachedTimeout != null) {
				_call.setTimeout(super.cachedTimeout);
			}
			if (super.cachedPortName != null) {
				_call.setPortName(super.cachedPortName);
			}
			java.util.Enumeration keys = super.cachedProperties.keys();
			while (keys.hasMoreElements()) {
				java.lang.String key = (java.lang.String) keys.nextElement();
				_call.setProperty(key, super.cachedProperties.get(key));
			}
			// All the type mapping information is registered
			// when the first call is made.
			// The type mapping information is actually registered in
			// the TypeMappingRegistry of the service, which
			// is the reason why registration is only needed for the first call.
			synchronized (this) {
				if (firstCall()) {
					// must set encoding style before registering serializers
					_call.setEncodingStyle(null);
					for (int i = 0; i < cachedSerFactories.size(); ++i) {
						java.lang.Class cls = (java.lang.Class) cachedSerClasses
								.get(i);
						javax.xml.namespace.QName qName = (javax.xml.namespace.QName) cachedSerQNames
								.get(i);
						java.lang.Object x = cachedSerFactories.get(i);
						if (x instanceof Class) {
							java.lang.Class sf = (java.lang.Class) cachedSerFactories
									.get(i);
							java.lang.Class df = (java.lang.Class) cachedDeserFactories
									.get(i);
							_call
									.registerTypeMapping(cls, qName, sf, df,
											false);
						} else if (x instanceof javax.xml.rpc.encoding.SerializerFactory) {
							org.apache.axis.encoding.SerializerFactory sf = (org.apache.axis.encoding.SerializerFactory) cachedSerFactories
									.get(i);
							org.apache.axis.encoding.DeserializerFactory df = (org.apache.axis.encoding.DeserializerFactory) cachedDeserFactories
									.get(i);
							_call
									.registerTypeMapping(cls, qName, sf, df,
											false);
						}
					}
				}
			}
			return _call;
		} catch (java.lang.Throwable _t) {
			throw new org.apache.axis.AxisFault(
					"Failure trying to get the Call object", _t);
		}
	}

	public void destroyPropertyFilter(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[0]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyPropertyFilter"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createFilter(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PropertyFilterSpec spec, boolean partialUpdates)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidProperty,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[1]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateFilter"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, new java.lang.Boolean(partialUpdates) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidProperty) {
					throw (com.vmware.vim25.InvalidProperty) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ObjectContent[] retrieveProperties(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PropertyFilterSpec[] specSet)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidProperty,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[2]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveProperties"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, specSet });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ObjectContent[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ObjectContent[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.ObjectContent[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidProperty) {
					throw (com.vmware.vim25.InvalidProperty) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UpdateSet checkForUpdates(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String version) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidCollectorVersion,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[3]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckForUpdates"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, version });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UpdateSet) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UpdateSet) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UpdateSet.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidCollectorVersion) {
					throw (com.vmware.vim25.InvalidCollectorVersion) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UpdateSet waitForUpdates(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String version) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidCollectorVersion,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[4]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"WaitForUpdates"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, version });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UpdateSet) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UpdateSet) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UpdateSet.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidCollectorVersion) {
					throw (com.vmware.vim25.InvalidCollectorVersion) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void cancelWaitForUpdates(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[5]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CancelWaitForUpdates"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public int addAuthorizationRole(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String[] privIds)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[6]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddAuthorizationRole"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, privIds });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Integer) _resp).intValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Integer) org.apache.axis.utils.JavaUtils
							.convert(_resp, int.class)).intValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeAuthorizationRole(
			com.vmware.vim25.ManagedObjectReference _this, int roleId,
			boolean failIfUsed) throws java.rmi.RemoteException,
			com.vmware.vim25.RemoveFailed, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[7]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveAuthorizationRole"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(roleId),
					new java.lang.Boolean(failIfUsed) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RemoveFailed) {
					throw (com.vmware.vim25.RemoveFailed) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateAuthorizationRole(
			com.vmware.vim25.ManagedObjectReference _this, int roleId,
			java.lang.String newName, java.lang.String[] privIds)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[8]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateAuthorizationRole"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(roleId), newName, privIds });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void mergePermissions(com.vmware.vim25.ManagedObjectReference _this,
			int srcRoleId, int dstRoleId) throws java.rmi.RemoteException,
			com.vmware.vim25.AuthMinimumAdminPermission,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[9]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MergePermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(srcRoleId),
					new java.lang.Integer(dstRoleId) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AuthMinimumAdminPermission) {
					throw (com.vmware.vim25.AuthMinimumAdminPermission) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Permission[] retrieveRolePermissions(
			com.vmware.vim25.ManagedObjectReference _this, int roleId)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[10]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveRolePermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(roleId) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Permission[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Permission[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Permission[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Permission[] retrieveEntityPermissions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity, boolean inherited)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[11]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveEntityPermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, new java.lang.Boolean(inherited) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Permission[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Permission[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Permission[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Permission[] retrieveAllPermissions(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[12]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveAllPermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Permission[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Permission[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Permission[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setEntityPermissions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			com.vmware.vim25.Permission[] permission)
			throws java.rmi.RemoteException,
			com.vmware.vim25.AuthMinimumAdminPermission,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound,
			com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[13]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetEntityPermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, permission });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AuthMinimumAdminPermission) {
					throw (com.vmware.vim25.AuthMinimumAdminPermission) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetEntityPermissions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			com.vmware.vim25.Permission[] permission)
			throws java.rmi.RemoteException,
			com.vmware.vim25.AuthMinimumAdminPermission,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound,
			com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[14]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetEntityPermissions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, permission });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AuthMinimumAdminPermission) {
					throw (com.vmware.vim25.AuthMinimumAdminPermission) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeEntityPermission(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			java.lang.String user, boolean isGroup)
			throws java.rmi.RemoteException,
			com.vmware.vim25.AuthMinimumAdminPermission,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[15]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveEntityPermission"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, user, new java.lang.Boolean(isGroup) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AuthMinimumAdminPermission) {
					throw (com.vmware.vim25.AuthMinimumAdminPermission) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureCluster_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ClusterConfigSpec spec, boolean modify)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[16]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureCluster_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, new java.lang.Boolean(modify) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void applyRecommendation(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String key)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[17]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ApplyRecommendation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, key });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ClusterHostRecommendation[] recommendHostsForVm(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.ManagedObjectReference pool)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[18]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RecommendHostsForVm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, pool });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ClusterHostRecommendation[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ClusterHostRecommendation[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ClusterHostRecommendation[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference addHost_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostConnectSpec spec, boolean asConnected,
			com.vmware.vim25.ManagedObjectReference resourcePool,
			java.lang.String license) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidLogin, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.HostConnectFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[19]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, new java.lang.Boolean(asConnected),
					resourcePool, license });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConnectFault) {
					throw (com.vmware.vim25.HostConnectFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveInto_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] host)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InvalidState, com.vmware.vim25.TooManyHosts,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[20]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveInto_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TooManyHosts) {
					throw (com.vmware.vim25.TooManyHosts) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveHostInto_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.ManagedObjectReference resourcePool)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.TooManyHosts, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[21]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveHostInto_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, resourcePool });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TooManyHosts) {
					throw (com.vmware.vim25.TooManyHosts) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshRecommendation(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[22]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshRecommendation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ClusterDasAdvancedRuntimeInfo retrieveDasAdvancedRuntimeInfo(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[23]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveDasAdvancedRuntimeInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ClusterDasAdvancedRuntimeInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ClusterDasAdvancedRuntimeInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ClusterDasAdvancedRuntimeInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureComputeResource_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ComputeResourceConfigSpec spec, boolean modify)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[24]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureComputeResource_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, new java.lang.Boolean(modify) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.CustomFieldDef addCustomFieldDef(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String moType,
			com.vmware.vim25.PrivilegePolicyDef fieldDefPolicy,
			com.vmware.vim25.PrivilegePolicyDef fieldPolicy)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InvalidPrivilege, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[25]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddCustomFieldDef"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, moType, fieldDefPolicy, fieldPolicy });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.CustomFieldDef) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.CustomFieldDef) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.CustomFieldDef.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPrivilege) {
					throw (com.vmware.vim25.InvalidPrivilege) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeCustomFieldDef(
			com.vmware.vim25.ManagedObjectReference _this, int key)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[26]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveCustomFieldDef"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(key) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void renameCustomFieldDef(
			com.vmware.vim25.ManagedObjectReference _this, int key,
			java.lang.String name) throws java.rmi.RemoteException,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[27]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RenameCustomFieldDef"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(key), name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setField(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity, int key,
			java.lang.String value) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[28]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetField"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, new java.lang.Integer(key), value });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean doesCustomizationSpecExist(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[29]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DoesCustomizationSpecExist"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.CustomizationSpecItem getCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[30]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GetCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.CustomizationSpecItem) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.CustomizationSpecItem) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.CustomizationSpecItem.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void createCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.CustomizationSpecItem item)
			throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[31]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, item });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void overwriteCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.CustomizationSpecItem item)
			throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[32]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"OverwriteCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, item });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void deleteCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[33]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeleteCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void duplicateCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String newName)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[34]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DuplicateCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, newName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void renameCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String newName)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[35]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RenameCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, newName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String customizationSpecItemToXml(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.CustomizationSpecItem item)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[36]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CustomizationSpecItemToXml"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, item });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.CustomizationSpecItem xmlToCustomizationSpecItem(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String specItemXml) throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[37]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"XmlToCustomizationSpecItem"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, specItemXml });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.CustomizationSpecItem) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.CustomizationSpecItem) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.CustomizationSpecItem.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void checkCustomizationResources(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String guestOs) throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[38]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckCustomizationResources"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, guestOs });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostConnectInfo queryConnectionInfo(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String hostname, int port, java.lang.String username,
			java.lang.String password, java.lang.String sslThumbprint)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.HostConnectFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[39]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryConnectionInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, hostname, new java.lang.Integer(port), username,
					password, sslThumbprint });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostConnectInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostConnectInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostConnectInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConnectFault) {
					throw (com.vmware.vim25.HostConnectFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerOnMultiVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] vm)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[40]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerOnMultiVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshDatastore(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[41]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshDatastoreStorageInfo(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[42]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshDatastoreStorageInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void renameDatastore(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String newName) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[43]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RenameDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, newName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyDatastore(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[44]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DiagnosticManagerLogDescriptor[] queryDescriptions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[45]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryDescriptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DiagnosticManagerLogDescriptor[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DiagnosticManagerLogDescriptor[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DiagnosticManagerLogDescriptor[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DiagnosticManagerLogHeader browseDiagnosticLog(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host, java.lang.String key,
			java.lang.Integer start, java.lang.Integer lines)
			throws java.rmi.RemoteException, com.vmware.vim25.CannotAccessFile,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[46]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"BrowseDiagnosticLog"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, key, start, lines });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DiagnosticManagerLogHeader) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DiagnosticManagerLogHeader) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DiagnosticManagerLogHeader.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CannotAccessFile) {
					throw (com.vmware.vim25.CannotAccessFile) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference generateLogBundles_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			boolean includeDefault,
			com.vmware.vim25.ManagedObjectReference[] host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.LogBundlingFailed {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[47]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GenerateLogBundles_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(includeDefault), host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LogBundlingFailed) {
					throw (com.vmware.vim25.LogBundlingFailed) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String[] fetchDVPortKeys(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DistributedVirtualSwitchPortCriteria criteria)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[48]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FetchDVPortKeys"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, criteria });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DistributedVirtualPort[] fetchDVPorts(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DistributedVirtualSwitchPortCriteria criteria)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[49]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FetchDVPorts"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, criteria });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DistributedVirtualPort[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DistributedVirtualPort[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DistributedVirtualPort[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public int[] queryUsedVlanIdInDvs(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[50]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryUsedVlanIdInDvs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (int[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (int[]) org.apache.axis.utils.JavaUtils.convert(
							_resp, int[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureDvs_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVSConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DvsNotAuthorized, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.DvsFault, com.vmware.vim25.ResourceNotAvailable,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound,
			com.vmware.vim25.LimitExceeded {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[51]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDvs_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsNotAuthorized) {
					throw (com.vmware.vim25.DvsNotAuthorized) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceNotAvailable) {
					throw (com.vmware.vim25.ResourceNotAvailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LimitExceeded) {
					throw (com.vmware.vim25.LimitExceeded) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference performDvsProductSpecOperation_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String operation,
			com.vmware.vim25.DistributedVirtualSwitchProductSpec productSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.DvsFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[52]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PerformDvsProductSpecOperation_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, operation, productSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference mergeDvs_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference dvs)
			throws java.rmi.RemoteException, com.vmware.vim25.DvsFault,
			com.vmware.vim25.InvalidHostState, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[53]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MergeDvs_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dvs });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidHostState) {
					throw (com.vmware.vim25.InvalidHostState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference addDVPortgroup_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVPortgroupConfigSpec[] spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.DvsFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[54]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddDVPortgroup_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveDVPort_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] portKey, java.lang.String destinationPortgroupKey)
			throws java.rmi.RemoteException, com.vmware.vim25.DvsFault,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[55]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveDVPort_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, portKey, destinationPortgroupKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDvsCapability(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVSCapability capability)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[56]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDvsCapability"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, capability });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureDVPort_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVPortConfigSpec[] port)
			throws java.rmi.RemoteException, com.vmware.vim25.DvsFault,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[57]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDVPort_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, port });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshDVPortState(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] portKeys) throws java.rmi.RemoteException,
			com.vmware.vim25.DvsFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[58]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshDVPortState"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, portKeys });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference rectifyDvsHost_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] hosts)
			throws java.rmi.RemoteException, com.vmware.vim25.DvsFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[59]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RectifyDvsHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, hosts });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VirtualMachineConfigOptionDescriptor[] queryConfigOptionDescriptor(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[60]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigOptionDescriptor"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VirtualMachineConfigOptionDescriptor[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VirtualMachineConfigOptionDescriptor[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VirtualMachineConfigOptionDescriptor[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VirtualMachineConfigOption queryConfigOption(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String key, com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[61]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigOption"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, key, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VirtualMachineConfigOption) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VirtualMachineConfigOption) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VirtualMachineConfigOption.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ConfigTarget queryConfigTarget(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[62]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryConfigTarget"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ConfigTarget) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ConfigTarget) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.ConfigTarget.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostCapability queryTargetCapabilities(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[63]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryTargetCapabilities"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostCapability) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostCapability) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostCapability.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setCustomValue(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String key, java.lang.String value)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[64]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"setCustomValue"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, key, value });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void unregisterExtension(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[65]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnregisterExtension"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Extension findExtension(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[66]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindExtension"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Extension) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Extension) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Extension.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void registerExtension(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.Extension extension)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[67]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RegisterExtension"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extension });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateExtension(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.Extension extension)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[68]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateExtension"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extension });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String getPublicKey(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[69]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GetPublicKey"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setPublicKey(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey, java.lang.String publicKey)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[70]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetPublicKey"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey, publicKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setExtensionCertificate(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey, java.lang.String certificatePem)
			throws java.rmi.RemoteException,
			com.vmware.vim25.NoClientCertificate,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[71]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetExtensionCertificate"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey, certificatePem });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoClientCertificate) {
					throw (com.vmware.vim25.NoClientCertificate) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveDatastoreFile_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String sourceName,
			com.vmware.vim25.ManagedObjectReference sourceDatacenter,
			java.lang.String destinationName,
			com.vmware.vim25.ManagedObjectReference destinationDatacenter,
			java.lang.Boolean force) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[72]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveDatastoreFile_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sourceName, sourceDatacenter, destinationName,
					destinationDatacenter, force });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference copyDatastoreFile_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String sourceName,
			com.vmware.vim25.ManagedObjectReference sourceDatacenter,
			java.lang.String destinationName,
			com.vmware.vim25.ManagedObjectReference destinationDatacenter,
			java.lang.Boolean force) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[73]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CopyDatastoreFile_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sourceName, sourceDatacenter, destinationName,
					destinationDatacenter, force });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference deleteDatastoreFile_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[74]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeleteDatastoreFile_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void makeDirectory(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.Boolean createParentDirectories)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[75]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MakeDirectory"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, createParentDirectories });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void changeOwner(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String owner) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[76]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ChangeOwner"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, owner });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createFolder(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[77]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateFolder"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveIntoFolder_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] list)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.InvalidFolder {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[78]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveIntoFolder_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, list });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidFolder) {
					throw (com.vmware.vim25.InvalidFolder) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineConfigSpec config,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.FileFault, com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[79]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config, pool, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference registerVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String path, java.lang.String name, boolean asTemplate,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.FileFault, com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[80]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RegisterVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, path, name, new java.lang.Boolean(asTemplate), pool,
					host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createCluster(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, com.vmware.vim25.ClusterConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[81]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateCluster"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createClusterEx(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, com.vmware.vim25.ClusterConfigSpecEx spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[82]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateClusterEx"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference addStandaloneHost_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostConnectSpec spec,
			com.vmware.vim25.ComputeResourceConfigSpec compResSpec,
			boolean addConnected, java.lang.String license)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.HostConnectFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[83]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddStandaloneHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, compResSpec,
					new java.lang.Boolean(addConnected), license });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConnectFault) {
					throw (com.vmware.vim25.HostConnectFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createDatacenter(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[84]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateDatacenter"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference unregisterAndDestroy_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[85]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnregisterAndDestroy_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createDVS_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVSCreateSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DvsNotAuthorized, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.DvsFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[86]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateDVS_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsNotAuthorized) {
					throw (com.vmware.vim25.DvsNotAuthorized) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setCollectorPageSize(
			com.vmware.vim25.ManagedObjectReference _this, int maxCount)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[87]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetCollectorPageSize"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(maxCount) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void rewindCollector(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[88]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RewindCollector"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetCollector(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[89]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetCollector"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyCollector(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[90]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyCollector"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostConnectInfo queryHostConnectionInfo(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[91]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryHostConnectionInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostConnectInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostConnectInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostConnectInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateSystemResources(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostSystemResourceInfo resourceInfo)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[92]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateSystemResources"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, resourceInfo });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconnectHost_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostConnectSpec cnxSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.InvalidLogin, com.vmware.vim25.InvalidState,
			com.vmware.vim25.HostConnectFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[93]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconnectHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, cnxSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConnectFault) {
					throw (com.vmware.vim25.HostConnectFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference disconnectHost_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[94]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisconnectHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference enterMaintenanceMode_Task(
			com.vmware.vim25.ManagedObjectReference _this, int timeout,
			java.lang.Boolean evacuatePoweredOffVms)
			throws java.rmi.RemoteException, com.vmware.vim25.Timedout,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[95]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnterMaintenanceMode_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(timeout),
					evacuatePoweredOffVms });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference exitMaintenanceMode_Task(
			com.vmware.vim25.ManagedObjectReference _this, int timeout)
			throws java.rmi.RemoteException, com.vmware.vim25.Timedout,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[96]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExitMaintenanceMode_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(timeout) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference rebootHost_Task(
			com.vmware.vim25.ManagedObjectReference _this, boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[97]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RebootHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(force) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference shutdownHost_Task(
			com.vmware.vim25.ManagedObjectReference _this, boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[98]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ShutdownHost_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(force) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerDownHostToStandBy_Task(
			com.vmware.vim25.ManagedObjectReference _this, int timeoutSec,
			java.lang.Boolean evacuatePoweredOffVms)
			throws java.rmi.RemoteException, com.vmware.vim25.RequestCanceled,
			com.vmware.vim25.HostPowerOpFailed, com.vmware.vim25.NotSupported,
			com.vmware.vim25.Timedout, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[99]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerDownHostToStandBy_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(timeoutSec),
					evacuatePoweredOffVms });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostPowerOpFailed) {
					throw (com.vmware.vim25.HostPowerOpFailed) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotSupported) {
					throw (com.vmware.vim25.NotSupported) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerUpHostFromStandBy_Task(
			com.vmware.vim25.ManagedObjectReference _this, int timeoutSec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.HostPowerOpFailed, com.vmware.vim25.NotSupported,
			com.vmware.vim25.Timedout, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[100]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerUpHostFromStandBy_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(timeoutSec) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostPowerOpFailed) {
					throw (com.vmware.vim25.HostPowerOpFailed) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotSupported) {
					throw (com.vmware.vim25.NotSupported) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public long queryMemoryOverhead(
			com.vmware.vim25.ManagedObjectReference _this, long memorySize,
			java.lang.Integer videoRamSize, int numVcpus)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[101]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryMemoryOverhead"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Long(memorySize), videoRamSize,
					new java.lang.Integer(numVcpus) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Long) _resp).longValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Long) org.apache.axis.utils.JavaUtils
							.convert(_resp, long.class)).longValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public long queryMemoryOverheadEx(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineConfigInfo vmConfigInfo)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[102]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryMemoryOverheadEx"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vmConfigInfo });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Long) _resp).longValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Long) org.apache.axis.utils.JavaUtils
							.convert(_resp, long.class)).longValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureHostForDAS_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.DasConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[103]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureHostForDAS_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DasConfigFault) {
					throw (com.vmware.vim25.DasConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateFlags(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostFlagInfo flagInfo)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[104]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateFlags"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, flagInfo });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostServiceTicket acquireCimServicesTicket(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[105]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AcquireCimServicesTicket"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostServiceTicket) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostServiceTicket) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostServiceTicket.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateIpmi(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostIpmiInfo ipmiInfo)
			throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidIpmiMacAddress,
			com.vmware.vim25.InvalidIpmiLoginInfo,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[106]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpmi"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, ipmiInfo });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidIpmiMacAddress) {
					throw (com.vmware.vim25.InvalidIpmiMacAddress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidIpmiLoginInfo) {
					throw (com.vmware.vim25.InvalidIpmiLoginInfo) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void httpNfcLeaseComplete(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.Timedout,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[107]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseComplete"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void httpNfcLeaseAbort(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.LocalizedMethodFault fault)
			throws java.rmi.RemoteException, com.vmware.vim25.Timedout,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[108]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseAbort"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, fault });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void httpNfcLeaseProgress(
			com.vmware.vim25.ManagedObjectReference _this, int percent)
			throws java.rmi.RemoteException, com.vmware.vim25.Timedout,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[109]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"HttpNfcLeaseProgress"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(percent) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.IpPool[] queryIpPools(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference dc)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[110]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryIpPools"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dc });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.IpPool[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.IpPool[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.IpPool[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public int createIpPool(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference dc,
			com.vmware.vim25.IpPool pool) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[111]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateIpPool"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dc, pool });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Integer) _resp).intValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Integer) org.apache.axis.utils.JavaUtils
							.convert(_resp, int.class)).intValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateIpPool(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference dc,
			com.vmware.vim25.IpPool pool) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[112]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpPool"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dc, pool });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyIpPool(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference dc, int id, boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[113]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyIpPool"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dc, new java.lang.Integer(id),
					new java.lang.Boolean(force) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseManagerLicenseInfo updateAssignedLicense(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String entity, java.lang.String licenseKey,
			java.lang.String entityDisplayName)
			throws java.rmi.RemoteException,
			com.vmware.vim25.LicenseEntityNotFound,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[114]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateAssignedLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, licenseKey, entityDisplayName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseManagerLicenseInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseEntityNotFound) {
					throw (com.vmware.vim25.LicenseEntityNotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeAssignedLicense(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String entityId) throws java.rmi.RemoteException,
			com.vmware.vim25.LicenseEntityNotFound,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[115]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveAssignedLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entityId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseEntityNotFound) {
					throw (com.vmware.vim25.LicenseEntityNotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment[] queryAssignedLicenses(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String entityId) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[116]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAssignedLicenses"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entityId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseFeatureInfo[] querySupportedFeatures(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[117]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QuerySupportedFeatures"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseFeatureInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseFeatureInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.LicenseFeatureInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseAvailabilityInfo[] queryLicenseSourceAvailability(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[118]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryLicenseSourceAvailability"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseAvailabilityInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseAvailabilityInfo[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseAvailabilityInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseUsageInfo queryLicenseUsage(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[119]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryLicenseUsage"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseUsageInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseUsageInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.LicenseUsageInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setLicenseEdition(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.String featureKey) throws java.rmi.RemoteException,
			com.vmware.vim25.LicenseServerUnavailable,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[120]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetLicenseEdition"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, featureKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseServerUnavailable) {
					throw (com.vmware.vim25.LicenseServerUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean checkLicenseFeature(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.String featureKey) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[121]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckLicenseFeature"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, featureKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean enableFeature(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.String featureKey) throws java.rmi.RemoteException,
			com.vmware.vim25.LicenseServerUnavailable,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[122]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableFeature"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, featureKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseServerUnavailable) {
					throw (com.vmware.vim25.LicenseServerUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean disableFeature(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.String featureKey) throws java.rmi.RemoteException,
			com.vmware.vim25.LicenseServerUnavailable,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[123]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisableFeature"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, featureKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseServerUnavailable) {
					throw (com.vmware.vim25.LicenseServerUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void configureLicenseSource(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.LicenseSource licenseSource)
			throws java.rmi.RemoteException,
			com.vmware.vim25.CannotAccessLocalSource,
			com.vmware.vim25.LicenseServerUnavailable,
			com.vmware.vim25.InvalidLicense, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[124]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ConfigureLicenseSource"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, licenseSource });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CannotAccessLocalSource) {
					throw (com.vmware.vim25.CannotAccessLocalSource) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.LicenseServerUnavailable) {
					throw (com.vmware.vim25.LicenseServerUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLicense) {
					throw (com.vmware.vim25.InvalidLicense) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseManagerLicenseInfo updateLicense(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey, com.vmware.vim25.KeyValue[] labels)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[125]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey, labels });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseManagerLicenseInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseManagerLicenseInfo addLicense(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey, com.vmware.vim25.KeyValue[] labels)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[126]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey, labels });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseManagerLicenseInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeLicense(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[127]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.LicenseManagerLicenseInfo decodeLicense(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[128]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DecodeLicense"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.LicenseManagerLicenseInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.LicenseManagerLicenseInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateLicenseLabel(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey, java.lang.String labelKey,
			java.lang.String labelValue) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[129]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateLicenseLabel"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey, labelKey, labelValue });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeLicenseLabel(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String licenseKey, java.lang.String labelKey)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[130]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveLicenseLabel"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, licenseKey, labelKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reload(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[131]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Reload"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference rename_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String newName) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[132]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Rename_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, newName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference destroy_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.VimFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[133]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Destroy_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VimFault) {
					throw (com.vmware.vim25.VimFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyNetwork(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[134]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyNetwork"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.OvfValidateHostResult validateHost(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String ovfDescriptor,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.OvfValidateHostParams vhp)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[135]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ValidateHost"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, ovfDescriptor, host, vhp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.OvfValidateHostResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.OvfValidateHostResult) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.OvfValidateHostResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.OvfParseDescriptorResult parseDescriptor(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String ovfDescriptor,
			com.vmware.vim25.OvfParseDescriptorParams pdp)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[136]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ParseDescriptor"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, ovfDescriptor, pdp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.OvfParseDescriptorResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.OvfParseDescriptorResult) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.OvfParseDescriptorResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.OvfCreateImportSpecResult createImportSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String ovfDescriptor,
			com.vmware.vim25.ManagedObjectReference resourcePool,
			com.vmware.vim25.ManagedObjectReference datastore,
			com.vmware.vim25.OvfCreateImportSpecParams cisp)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[137]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateImportSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, ovfDescriptor, resourcePool, datastore, cisp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.OvfCreateImportSpecResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.OvfCreateImportSpecResult) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.OvfCreateImportSpecResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.OvfCreateDescriptorResult createDescriptor(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference obj,
			com.vmware.vim25.OvfCreateDescriptorParams cdp)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[138]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateDescriptor"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj, cdp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.OvfCreateDescriptorResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.OvfCreateDescriptorResult) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.OvfCreateDescriptorResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfProviderSummary queryPerfProviderSummary(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[139]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfProviderSummary"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfProviderSummary) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfProviderSummary) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.PerfProviderSummary.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfMetricId[] queryAvailablePerfMetric(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			java.util.Calendar beginTime, java.util.Calendar endTime,
			java.lang.Integer intervalId) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[140]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailablePerfMetric"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, beginTime, endTime, intervalId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfMetricId[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfMetricId[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.PerfMetricId[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfCounterInfo[] queryPerfCounter(
			com.vmware.vim25.ManagedObjectReference _this, int[] counterId)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[141]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfCounter"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, counterId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfCounterInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfCounterInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.PerfCounterInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfCounterInfo[] queryPerfCounterByLevel(
			com.vmware.vim25.ManagedObjectReference _this, int level)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[142]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfCounterByLevel"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(level) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfCounterInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfCounterInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.PerfCounterInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfEntityMetricBase[] queryPerf(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PerfQuerySpec[] querySpec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[143]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPerf"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, querySpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfEntityMetricBase[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfEntityMetricBase[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.PerfEntityMetricBase[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PerfCompositeMetric queryPerfComposite(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PerfQuerySpec querySpec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[144]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPerfComposite"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, querySpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PerfCompositeMetric) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PerfCompositeMetric) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.PerfCompositeMetric.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void createPerfInterval(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PerfInterval intervalId)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[145]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreatePerfInterval"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, intervalId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removePerfInterval(
			com.vmware.vim25.ManagedObjectReference _this, int samplePeriod)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[146]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemovePerfInterval"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(samplePeriod) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updatePerfInterval(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.PerfInterval interval)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[147]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdatePerfInterval"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, interval });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DatabaseSizeEstimate estimateDatabaseSize(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DatabaseSizeParam dbSizeParam)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[148]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EstimateDatabaseSize"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dbSizeParam });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DatabaseSizeEstimate) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DatabaseSizeEstimate) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.DatabaseSizeEstimate.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateConfig(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, com.vmware.vim25.ResourceConfigSpec config)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[149]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void moveIntoResourcePool(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] list)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[150]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveIntoResourcePool"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, list });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateChildResourceConfiguration(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ResourceConfigSpec[] spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[151]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateChildResourceConfiguration"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createResourcePool(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, com.vmware.vim25.ResourceConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[152]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateResourcePool"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyChildren(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[153]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyChildren"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createVApp(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, com.vmware.vim25.ResourceConfigSpec resSpec,
			com.vmware.vim25.VAppConfigSpec configSpec,
			com.vmware.vim25.ManagedObjectReference vmFolder)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[154]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateVApp"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, resSpec, configSpec, vmFolder });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createChildVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineConfigSpec config,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.FileFault,
			com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[155]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateChildVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference registerChildVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String path, java.lang.String name,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.InvalidName, com.vmware.vim25.FileFault,
			com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[156]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RegisterChildVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, path, name, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference importVApp(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ImportSpec spec,
			com.vmware.vim25.ManagedObjectReference folder,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.FileFault, com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[157]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ImportVApp"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, folder, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findByUuid(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String uuid, boolean vmSearch,
			java.lang.Boolean instanceUuid) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[158]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindByUuid"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datacenter, uuid, new java.lang.Boolean(vmSearch),
					instanceUuid });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findByDatastorePath(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String path) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[159]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindByDatastorePath"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datacenter, path });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findByDnsName(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String dnsName, boolean vmSearch)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[160]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindByDnsName"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this, datacenter,
							dnsName, new java.lang.Boolean(vmSearch) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findByIp(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String ip, boolean vmSearch)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[161]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindByIp"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datacenter, ip, new java.lang.Boolean(vmSearch) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findByInventoryPath(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String inventoryPath) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[162]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindByInventoryPath"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, inventoryPath });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference findChild(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			java.lang.String name) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[163]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindChild"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] findAllByUuid(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String uuid, boolean vmSearch,
			java.lang.Boolean instanceUuid) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[164]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindAllByUuid"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datacenter, uuid, new java.lang.Boolean(vmSearch),
					instanceUuid });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] findAllByDnsName(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String dnsName, boolean vmSearch)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[165]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindAllByDnsName"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this, datacenter,
							dnsName, new java.lang.Boolean(vmSearch) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] findAllByIp(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String ip, boolean vmSearch)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[166]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindAllByIp"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datacenter, ip, new java.lang.Boolean(vmSearch) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.util.Calendar currentTime(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[167]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CurrentTime"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.util.Calendar) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.util.Calendar) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.util.Calendar.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ServiceContent retrieveServiceContent(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[168]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveServiceContent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ServiceContent) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ServiceContent) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.ServiceContent.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Event[] validateMigration(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] vm,
			com.vmware.vim25.VirtualMachinePowerState state,
			java.lang.String[] testType,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[169]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ValidateMigration"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, state, testType, pool, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Event[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Event[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Event[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostVMotionCompatibility[] queryVMotionCompatibility(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.ManagedObjectReference[] host,
			java.lang.String[] compatibility) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[170]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVMotionCompatibility"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, host, compatibility });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostVMotionCompatibility[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostVMotionCompatibility[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostVMotionCompatibility[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ProductComponentInfo[] retrieveProductComponents(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[171]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveProductComponents"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ProductComponentInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ProductComponentInfo[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ProductComponentInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateServiceMessage(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String message) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[172]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateServiceMessage"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, message });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession login(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String userName, java.lang.String password,
			java.lang.String locale) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidLogin, com.vmware.vim25.InvalidLocale,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[173]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Login"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, userName, password, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession loginBySSPI(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String base64Token, java.lang.String locale)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.InvalidLocale, com.vmware.vim25.SSPIChallenge,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[174]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"LoginBySSPI"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, base64Token, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SSPIChallenge) {
					throw (com.vmware.vim25.SSPIChallenge) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void logout(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[175]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Logout"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.SessionManagerLocalTicket acquireLocalTicket(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String userName) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidLogin, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[176]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AcquireLocalTicket"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, userName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.SessionManagerLocalTicket) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.SessionManagerLocalTicket) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.SessionManagerLocalTicket.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void terminateSession(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] sessionId) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[177]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"TerminateSession"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sessionId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setLocale(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String locale) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidLocale, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[178]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetLocale"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession loginExtensionBySubjectName(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey, java.lang.String locale)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.NoSubjectName,
			com.vmware.vim25.NoClientCertificate,
			com.vmware.vim25.InvalidLocale, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[179]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"LoginExtensionBySubjectName"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoSubjectName) {
					throw (com.vmware.vim25.NoSubjectName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoClientCertificate) {
					throw (com.vmware.vim25.NoClientCertificate) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession loginExtensionByCertificate(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String extensionKey, java.lang.String locale)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.NoClientCertificate,
			com.vmware.vim25.InvalidLocale, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[180]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"LoginExtensionByCertificate"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, extensionKey, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoClientCertificate) {
					throw (com.vmware.vim25.NoClientCertificate) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession impersonateUser(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String userName, java.lang.String locale)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidLogin,
			com.vmware.vim25.InvalidLocale, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[181]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ImpersonateUser"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, userName, locale });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLocale) {
					throw (com.vmware.vim25.InvalidLocale) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean sessionIsActive(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String sessionID, java.lang.String userName)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[182]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SessionIsActive"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sessionID, userName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String acquireCloneTicket(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[183]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AcquireCloneTicket"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSession cloneSession(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String cloneTicket) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidLogin, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[184]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CloneSession"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, cloneTicket });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSession) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSession) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.UserSession.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidLogin) {
					throw (com.vmware.vim25.InvalidLogin) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void cancelTask(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[185]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CancelTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateProgress(com.vmware.vim25.ManagedObjectReference _this,
			int percentDone) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidState, com.vmware.vim25.OutOfBounds,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[186]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateProgress"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(percentDone) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.OutOfBounds) {
					throw (com.vmware.vim25.OutOfBounds) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setTaskState(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.TaskInfoState state, java.lang.Object result,
			com.vmware.vim25.LocalizedMethodFault fault)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[187]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetTaskState"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, state, result, fault });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setTaskDescription(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.LocalizableMessage description)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[188]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetTaskDescription"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, description });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.TaskInfo[] readNextTasks(
			com.vmware.vim25.ManagedObjectReference _this, int maxCount)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[189]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReadNextTasks"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(maxCount) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.TaskInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.TaskInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.TaskInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.TaskInfo[] readPreviousTasks(
			com.vmware.vim25.ManagedObjectReference _this, int maxCount)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[190]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReadPreviousTasks"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(maxCount) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.TaskInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.TaskInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.TaskInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createCollectorForTasks(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.TaskFilterSpec filter)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[191]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateCollectorForTasks"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, filter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.TaskInfo createTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference obj,
			java.lang.String taskTypeId, java.lang.String initiatedBy,
			boolean cancelable, java.lang.String parentTaskKey)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[192]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj, taskTypeId, initiatedBy,
					new java.lang.Boolean(cancelable), parentTaskKey });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.TaskInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.TaskInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.TaskInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.UserSearchResult[] retrieveUserGroups(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String domain, java.lang.String searchStr,
			java.lang.String belongsToGroup, java.lang.String belongsToUser,
			boolean exactMatch, boolean findUsers, boolean findGroups)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[193]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveUserGroups"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, domain, searchStr, belongsToGroup, belongsToUser,
					new java.lang.Boolean(exactMatch),
					new java.lang.Boolean(findUsers),
					new java.lang.Boolean(findGroups) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.UserSearchResult[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.UserSearchResult[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.UserSearchResult[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateVAppConfig(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VAppConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[194]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateVAppConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference cloneVApp_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference target,
			com.vmware.vim25.VAppCloneSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.MigrationFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[195]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CloneVApp_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, target, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.MigrationFault) {
					throw (com.vmware.vim25.MigrationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference exportVApp(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InvalidPowerState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[196]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExportVApp"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerOnVApp_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.VAppConfigFault,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[197]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerOnVApp_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VAppConfigFault) {
					throw (com.vmware.vim25.VAppConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerOffVApp_Task(
			com.vmware.vim25.ManagedObjectReference _this, boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.VAppConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[198]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerOffVApp_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(force) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VAppConfigFault) {
					throw (com.vmware.vim25.VAppConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference unregisterVApp_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[199]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"unregisterVApp_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			com.vmware.vim25.VirtualDiskSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[200]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference deleteVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[201]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeleteVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference moveVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String sourceName,
			com.vmware.vim25.ManagedObjectReference sourceDatacenter,
			java.lang.String destName,
			com.vmware.vim25.ManagedObjectReference destDatacenter,
			java.lang.Boolean force) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[202]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MoveVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sourceName, sourceDatacenter, destName,
					destDatacenter, force });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference copyVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String sourceName,
			com.vmware.vim25.ManagedObjectReference sourceDatacenter,
			java.lang.String destName,
			com.vmware.vim25.ManagedObjectReference destDatacenter,
			com.vmware.vim25.VirtualDiskSpec destSpec, java.lang.Boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[203]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CopyVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, sourceName, sourceDatacenter, destName,
					destDatacenter, destSpec, force });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference extendVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			long newCapacityKb, java.lang.Boolean eagerZero)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[204]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExtendVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, new java.lang.Long(newCapacityKb),
					eagerZero });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public int queryVirtualDiskFragmentation(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[205]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskFragmentation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Integer) _resp).intValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Integer) org.apache.axis.utils.JavaUtils
							.convert(_resp, int.class)).intValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference defragmentVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[206]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DefragmentVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference shrinkVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.Boolean copy) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[207]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ShrinkVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, copy });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference inflateVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[208]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"InflateVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference eagerZeroVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[209]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EagerZeroVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference zeroFillVirtualDisk_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[210]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ZeroFillVirtualDisk_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setVirtualDiskUuid(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter,
			java.lang.String uuid) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[211]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetVirtualDiskUuid"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter, uuid });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String queryVirtualDiskUuid(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[212]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskUuid"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiskDimensionsChs queryVirtualDiskGeometry(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name,
			com.vmware.vim25.ManagedObjectReference datacenter)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[213]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVirtualDiskGeometry"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, datacenter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiskDimensionsChs) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiskDimensionsChs) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiskDimensionsChs.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshStorageInfo(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[214]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshStorageInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createSnapshot_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String description,
			boolean memory, boolean quiesce) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidName, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.SnapshotFault, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[215]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateSnapshot_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, description, new java.lang.Boolean(memory),
					new java.lang.Boolean(quiesce) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference revertToCurrentSnapshot_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.Boolean suppressPowerOn) throws java.rmi.RemoteException,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.SnapshotFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[216]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RevertToCurrentSnapshot_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, suppressPowerOn });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference removeAllSnapshots_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.SnapshotFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[217]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveAllSnapshots_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[218]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference upgradeVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String version) throws java.rmi.RemoteException,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.AlreadyUpgraded, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NoDiskFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[219]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, version });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyUpgraded) {
					throw (com.vmware.vim25.AlreadyUpgraded) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoDiskFound) {
					throw (com.vmware.vim25.NoDiskFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String extractOvfEnvironment(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[220]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExtractOvfEnvironment"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerOnVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[221]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerOnVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference powerOffVM_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[222]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PowerOffVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference suspendVM_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[223]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SuspendVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference resetVM_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[224]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void shutdownGuest(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ToolsUnavailable,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[225]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ShutdownGuest"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void rebootGuest(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ToolsUnavailable,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[226]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RebootGuest"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void standbyGuest(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ToolsUnavailable,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[227]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StandbyGuest"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void answerVM(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String questionId, java.lang.String answerChoice)
			throws java.rmi.RemoteException, com.vmware.vim25.ConcurrentAccess,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[228]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AnswerVM"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, questionId, answerChoice });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference customizeVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.CustomizationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[229]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CustomizeVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void checkCustomizationSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.CustomizationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.CustomizationFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[230]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckCustomizationSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference migrateVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.VirtualMachineMovePriority priority,
			com.vmware.vim25.VirtualMachinePowerState state)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.Timedout, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.MigrationFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[231]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MigrateVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pool, host, priority, state });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.MigrationFault) {
					throw (com.vmware.vim25.MigrationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference relocateVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineRelocateSpec spec,
			com.vmware.vim25.VirtualMachineMovePriority priority)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.Timedout, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.MigrationFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[232]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RelocateVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec, priority });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.Timedout) {
					throw (com.vmware.vim25.Timedout) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.MigrationFault) {
					throw (com.vmware.vim25.MigrationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference cloneVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference folder,
			java.lang.String name, com.vmware.vim25.VirtualMachineCloneSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.CustomizationFault, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.MigrationFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[233]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CloneVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, folder, name, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.CustomizationFault) {
					throw (com.vmware.vim25.CustomizationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.MigrationFault) {
					throw (com.vmware.vim25.MigrationFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference exportVm(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InvalidPowerState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[234]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExportVm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void markAsTemplate(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[235]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MarkAsTemplate"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void markAsVirtualMachine(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[236]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MarkAsVirtualMachine"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pool, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void unregisterVM(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidPowerState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[237]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnregisterVM"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetGuestInformation(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[238]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetGuestInformation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void mountToolsInstaller(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[239]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MountToolsInstaller"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void unmountToolsInstaller(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[240]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnmountToolsInstaller"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference upgradeTools_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String installerOptions) throws java.rmi.RemoteException,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.VmToolsUpgradeFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.ToolsUnavailable,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[241]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpgradeTools_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, installerOptions });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmToolsUpgradeFault) {
					throw (com.vmware.vim25.VmToolsUpgradeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VirtualMachineMksTicket acquireMksTicket(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[242]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AcquireMksTicket"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VirtualMachineMksTicket) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VirtualMachineMksTicket) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VirtualMachineMksTicket.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setScreenResolution(
			com.vmware.vim25.ManagedObjectReference _this, int width, int height)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.ToolsUnavailable, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[243]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetScreenResolution"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(width),
					new java.lang.Integer(height) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void defragmentAllDisks(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InvalidPowerState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[244]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DefragmentAllDisks"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createSecondaryVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[245]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateSecondaryVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference turnOffFaultToleranceForVM_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[246]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"TurnOffFaultToleranceForVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference makePrimaryVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[247]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"MakePrimaryVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference terminateFaultTolerantVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[248]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"TerminateFaultTolerantVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference disableSecondaryVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[249]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisableSecondaryVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference enableSecondaryVM_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.VmFaultToleranceIssue,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[250]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableSecondaryVM_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmFaultToleranceIssue) {
					throw (com.vmware.vim25.VmFaultToleranceIssue) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setDisplayTopology(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineDisplayTopology[] displays)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.ToolsUnavailable, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[251]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetDisplayTopology"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, displays });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ToolsUnavailable) {
					throw (com.vmware.vim25.ToolsUnavailable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference startRecording_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String description)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.SnapshotFault,
			com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.HostIncompatibleForRecordReplay,
			com.vmware.vim25.RecordReplayDisabled, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.InvalidPowerState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[252]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StartRecording_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, description });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostIncompatibleForRecordReplay) {
					throw (com.vmware.vim25.HostIncompatibleForRecordReplay) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RecordReplayDisabled) {
					throw (com.vmware.vim25.RecordReplayDisabled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference stopRecording_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.SnapshotFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.InvalidPowerState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[253]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StopRecording_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference startReplaying_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference replaySnapshot)
			throws java.rmi.RemoteException, com.vmware.vim25.VmConfigFault,
			com.vmware.vim25.SnapshotFault, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.HostIncompatibleForRecordReplay,
			com.vmware.vim25.RecordReplayDisabled, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.InvalidPowerState,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[254]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StartReplaying_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, replaySnapshot });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostIncompatibleForRecordReplay) {
					throw (com.vmware.vim25.HostIncompatibleForRecordReplay) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RecordReplayDisabled) {
					throw (com.vmware.vim25.RecordReplayDisabled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference stopReplaying_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.SnapshotFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.InvalidPowerState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[255]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StopReplaying_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.SnapshotFault) {
					throw (com.vmware.vim25.SnapshotFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference promoteDisks_Task(
			com.vmware.vim25.ManagedObjectReference _this, boolean unlink,
			com.vmware.vim25.VirtualDisk[] disks)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.InvalidPowerState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[256]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PromoteDisks_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(unlink), disks });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidPowerState) {
					throw (com.vmware.vim25.InvalidPowerState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createScreenshot_Task(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[257]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateScreenshot_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DiskChangeInfo queryChangedDiskAreas(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference snapshot, int deviceKey,
			long startOffset, java.lang.String changeId)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[258]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryChangedDiskAreas"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, snapshot, new java.lang.Integer(deviceKey),
					new java.lang.Long(startOffset), changeId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DiskChangeInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DiskChangeInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.DiskChangeInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String[] queryUnownedFiles(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[259]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryUnownedFiles"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeAlarm(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[260]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveAlarm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureAlarm(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.AlarmSpec spec) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[261]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureAlarm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createAlarm(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			com.vmware.vim25.AlarmSpec spec) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[262]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateAlarm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] getAlarm(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[263]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GetAlarm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public boolean areAlarmActionsEnabled(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[264]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AreAlarmActionsEnabled"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return ((java.lang.Boolean) _resp).booleanValue();
				} catch (java.lang.Exception _exception) {
					return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils
							.convert(_resp, boolean.class)).booleanValue();
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void enableAlarmActions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity, boolean enabled)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[265]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableAlarmActions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, new java.lang.Boolean(enabled) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.AlarmState[] getAlarmState(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[266]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GetAlarmState"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.AlarmState[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.AlarmState[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.AlarmState[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void acknowledgeAlarm(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference alarm,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[267]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AcknowledgeAlarm"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, alarm, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference reconfigureDVPortgroup_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DVPortgroupConfigSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.DvsFault,
			com.vmware.vim25.ConcurrentAccess, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[268]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureDVPortgroup_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DvsFault) {
					throw (com.vmware.vim25.DvsFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ConcurrentAccess) {
					throw (com.vmware.vim25.ConcurrentAccess) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DistributedVirtualSwitchProductSpec[] queryAvailableDvsSpec(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[269]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableDvsSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DistributedVirtualSwitchProductSpec[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DistributedVirtualSwitchProductSpec[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DistributedVirtualSwitchProductSpec[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] queryCompatibleHostForNewDvs(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference container,
			boolean recursive,
			com.vmware.vim25.DistributedVirtualSwitchProductSpec switchProductSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[270]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryCompatibleHostForNewDvs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, container, new java.lang.Boolean(recursive),
					switchProductSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] queryCompatibleHostForExistingDvs(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference container,
			boolean recursive, com.vmware.vim25.ManagedObjectReference dvs)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[271]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryCompatibleHostForExistingDvs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, container, new java.lang.Boolean(recursive), dvs });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DistributedVirtualSwitchHostProductSpec[] queryDvsCompatibleHostSpec(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.DistributedVirtualSwitchProductSpec switchProductSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[272]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsCompatibleHostSpec"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, switchProductSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DistributedVirtualSwitchHostProductSpec[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DistributedVirtualSwitchHostProductSpec[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DistributedVirtualSwitchHostProductSpec[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference queryDvsByUuid(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String uuid)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[273]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsByUuid"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, uuid });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.DVSManagerDvsConfigTarget queryDvsConfigTarget(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.ManagedObjectReference dvs)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[274]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryDvsConfigTarget"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, dvs });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.DVSManagerDvsConfigTarget) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.DVSManagerDvsConfigTarget) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.DVSManagerDvsConfigTarget.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Event[] readNextEvents(
			com.vmware.vim25.ManagedObjectReference _this, int maxCount)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[275]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReadNextEvents"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(maxCount) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Event[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Event[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Event[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Event[] readPreviousEvents(
			com.vmware.vim25.ManagedObjectReference _this, int maxCount)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[276]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReadPreviousEvents"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Integer(maxCount) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Event[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Event[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Event[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.EventArgDesc[] retrieveArgumentDescription(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String eventTypeId) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[277]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveArgumentDescription"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, eventTypeId });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.EventArgDesc[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.EventArgDesc[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.EventArgDesc[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createCollectorForEvents(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.EventFilterSpec filter)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[278]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateCollectorForEvents"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, filter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void logUserEvent(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity, java.lang.String msg)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[279]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"LogUserEvent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, msg });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.Event[] queryEvents(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.EventFilterSpec filter)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[280]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryEvents"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, filter });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.Event[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.Event[]) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.Event[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void postEvent(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.Event eventToPost,
			com.vmware.vim25.TaskInfo taskInfo)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.InvalidEvent {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[281]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"PostEvent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, eventToPost, taskInfo });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidEvent) {
					throw (com.vmware.vim25.InvalidEvent) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureAutostart(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostAutoStartManagerConfig spec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[282]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureAutostart"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void autoStartPowerOn(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[283]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AutoStartPowerOn"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void autoStartPowerOff(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[284]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AutoStartPowerOff"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostBootDeviceInfo queryBootDevices(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[285]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryBootDevices"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostBootDeviceInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostBootDeviceInfo) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostBootDeviceInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateBootDevice(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String key) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[286]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateBootDevice"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, key });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void enableHyperThreading(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[287]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableHyperThreading"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void disableHyperThreading(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[288]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisableHyperThreading"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference searchDatastore_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String datastorePath,
			com.vmware.vim25.HostDatastoreBrowserSearchSpec searchSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[289]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SearchDatastore_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastorePath, searchSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference searchDatastoreSubFolders_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String datastorePath,
			com.vmware.vim25.HostDatastoreBrowserSearchSpec searchSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.FileFault,
			com.vmware.vim25.InvalidDatastore, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[290]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SearchDatastoreSubFolders_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastorePath, searchSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void deleteFile(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String datastorePath) throws java.rmi.RemoteException,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidDatastore,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[291]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeleteFile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastorePath });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidDatastore) {
					throw (com.vmware.vim25.InvalidDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateLocalSwapDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore)
			throws java.rmi.RemoteException,
			com.vmware.vim25.InaccessibleDatastore,
			com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.DatastoreNotWritableOnHost {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[292]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateLocalSwapDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InaccessibleDatastore) {
					throw (com.vmware.vim25.InaccessibleDatastore) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DatastoreNotWritableOnHost) {
					throw (com.vmware.vim25.DatastoreNotWritableOnHost) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostScsiDisk[] queryAvailableDisksForVmfs(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[293]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableDisksForVmfs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostScsiDisk[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostScsiDisk[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostScsiDisk[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VmfsDatastoreOption[] queryVmfsDatastoreCreateOptions(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String devicePath) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[294]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreCreateOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, devicePath });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VmfsDatastoreOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VmfsDatastoreOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VmfsDatastoreOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createVmfsDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VmfsDatastoreCreateSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[295]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateVmfsDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VmfsDatastoreOption[] queryVmfsDatastoreExtendOptions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore,
			java.lang.String devicePath,
			java.lang.Boolean suppressExpandCandidates)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[296]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreExtendOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore, devicePath, suppressExpandCandidates });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VmfsDatastoreOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VmfsDatastoreOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VmfsDatastoreOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VmfsDatastoreOption[] queryVmfsDatastoreExpandOptions(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[297]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVmfsDatastoreExpandOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VmfsDatastoreOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VmfsDatastoreOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VmfsDatastoreOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference extendVmfsDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore,
			com.vmware.vim25.VmfsDatastoreExtendSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[298]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExtendVmfsDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference expandVmfsDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore,
			com.vmware.vim25.VmfsDatastoreExpandSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[299]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExpandVmfsDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createNasDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostNasVolumeSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[300]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateNasDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createLocalDatastore(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String path)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.FileNotFound, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[301]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateLocalDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, path });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileNotFound) {
					throw (com.vmware.vim25.FileNotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeDatastore(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference datastore)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.ResourceInUse, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[302]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveDatastore"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, datastore });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void configureDatastorePrincipal(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String userName, java.lang.String password)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[303]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ConfigureDatastorePrincipal"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, userName, password });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostUnresolvedVmfsVolume[] queryUnresolvedVmfsVolumes(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[304]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryUnresolvedVmfsVolumes"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostUnresolvedVmfsVolume[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostUnresolvedVmfsVolume[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostUnresolvedVmfsVolume[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference resignatureUnresolvedVmfsVolume_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostUnresolvedVmfsResignatureSpec resolutionSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.VmfsAmbiguousMount, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[305]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResignatureUnresolvedVmfsVolume_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, resolutionSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmfsAmbiguousMount) {
					throw (com.vmware.vim25.VmfsAmbiguousMount) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDateTimeConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostDateTimeConfig config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[306]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDateTimeConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDateTimeSystemTimeZone[] queryAvailableTimeZones(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[307]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailableTimeZones"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDateTimeSystemTimeZone[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDateTimeSystemTimeZone[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDateTimeSystemTimeZone[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.util.Calendar queryDateTime(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[308]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryDateTime"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.util.Calendar) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.util.Calendar) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.util.Calendar.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDateTime(com.vmware.vim25.ManagedObjectReference _this,
			java.util.Calendar dateTime) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[309]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDateTime"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, dateTime });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshDateTimeSystem(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[310]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshDateTimeSystem"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiagnosticPartition[] queryAvailablePartition(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[311]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryAvailablePartition"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiagnosticPartition[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiagnosticPartition[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiagnosticPartition[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void selectActivePartition(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostScsiDiskPartition partition)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[312]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SelectActivePartition"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, partition });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiagnosticPartitionCreateOption[] queryPartitionCreateOptions(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String storageType, java.lang.String diagnosticType)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[313]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPartitionCreateOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, storageType, diagnosticType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiagnosticPartitionCreateOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiagnosticPartitionCreateOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiagnosticPartitionCreateOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiagnosticPartitionCreateDescription queryPartitionCreateDesc(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String diskUuid, java.lang.String diagnosticType)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[314]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPartitionCreateDesc"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, diskUuid, diagnosticType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiagnosticPartitionCreateDescription) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiagnosticPartitionCreateDescription) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiagnosticPartitionCreateDescription.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void createDiagnosticPartition(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostDiagnosticPartitionCreateSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[315]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateDiagnosticPartition"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDefaultPolicy(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostFirewallDefaultPolicy defaultPolicy)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[316]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDefaultPolicy"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, defaultPolicy });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void enableRuleset(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[317]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableRuleset"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void disableRuleset(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[318]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisableRuleset"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshFirewall(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[319]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshFirewall"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetFirmwareToFactoryDefaults(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[320]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetFirmwareToFactoryDefaults"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String backupFirmwareConfiguration(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[321]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"BackupFirmwareConfiguration"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String queryFirmwareConfigUploadURL(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[322]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryFirmwareConfigUploadURL"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void restoreFirmwareConfiguration(
			com.vmware.vim25.ManagedObjectReference _this, boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.MismatchedBundle,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InvalidBundle, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[323]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RestoreFirmwareConfiguration"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(force) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.MismatchedBundle) {
					throw (com.vmware.vim25.MismatchedBundle) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidBundle) {
					throw (com.vmware.vim25.InvalidBundle) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshHealthStatusSystem(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[324]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshHealthStatusSystem"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetSystemHealthInfo(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[325]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetSystemHealthInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.KernelModuleInfo[] queryModules(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[326]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryModules"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.KernelModuleInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.KernelModuleInfo[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.KernelModuleInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateModuleOptionString(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String options)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[327]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateModuleOptionString"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, options });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String queryConfiguredModuleOptionString(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[328]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryConfiguredModuleOptionString"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void createUser(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostAccountSpec user)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[329]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateUser"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, user });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateUser(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostAccountSpec user)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[330]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateUser"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, user });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void createGroup(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostAccountSpec group)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[331]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, group });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeUser(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String userName) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[332]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveUser"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, userName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeGroup(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String groupName) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[333]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, groupName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void assignUserToGroup(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String user, java.lang.String group)
			throws java.rmi.RemoteException, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[334]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AssignUserToGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, user, group });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void unassignUserFromGroup(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String user, java.lang.String group)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.UserNotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[335]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnassignUserFromGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, user, group });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.UserNotFound) {
					throw (com.vmware.vim25.UserNotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureServiceConsoleReservation(
			com.vmware.vim25.ManagedObjectReference _this, long cfgBytes)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[336]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureServiceConsoleReservation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Long(cfgBytes) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureVirtualMachineReservation(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.VirtualMachineMemoryReservationSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[337]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureVirtualMachineReservation"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostNetworkConfigResult updateNetworkConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostNetworkConfig config,
			java.lang.String changeMode) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[338]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateNetworkConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config, changeMode });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostNetworkConfigResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostNetworkConfigResult) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostNetworkConfigResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDnsConfig(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostDnsConfig config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[339]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDnsConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateIpRouteConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostIpRouteConfig config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[340]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpRouteConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateConsoleIpRouteConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostIpRouteConfig config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[341]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateConsoleIpRouteConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateIpRouteTableConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostIpRouteTableConfig config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[342]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpRouteTableConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void addVirtualSwitch(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vswitchName,
			com.vmware.vim25.HostVirtualSwitchSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.ResourceInUse, com.vmware.vim25.AlreadyExists,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[343]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddVirtualSwitch"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vswitchName, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeVirtualSwitch(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vswitchName) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[344]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveVirtualSwitch"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vswitchName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateVirtualSwitch(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vswitchName,
			com.vmware.vim25.HostVirtualSwitchSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.ResourceInUse, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[345]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateVirtualSwitch"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vswitchName, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void addPortGroup(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostPortGroupSpec portgrp)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[346]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddPortGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, portgrp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removePortGroup(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String pgName) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[347]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemovePortGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pgName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updatePortGroup(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String pgName, com.vmware.vim25.HostPortGroupSpec portgrp)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[348]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdatePortGroup"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pgName, portgrp });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updatePhysicalNicLinkSpeed(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device,
			com.vmware.vim25.PhysicalNicLinkInfo linkSpeed)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[349]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdatePhysicalNicLinkSpeed"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device, linkSpeed });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.PhysicalNicHintInfo[] queryNetworkHint(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] device) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[350]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryNetworkHint"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.PhysicalNicHintInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.PhysicalNicHintInfo[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.PhysicalNicHintInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String addVirtualNic(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String portgroup, com.vmware.vim25.HostVirtualNicSpec nic)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[351]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, portgroup, nic });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeVirtualNic(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[352]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateVirtualNic(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device, com.vmware.vim25.HostVirtualNicSpec nic)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[353]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device, nic });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String addServiceConsoleVirtualNic(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String portgroup, com.vmware.vim25.HostVirtualNicSpec nic)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[354]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddServiceConsoleVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, portgroup, nic });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeServiceConsoleVirtualNic(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.ResourceInUse,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[355]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveServiceConsoleVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateServiceConsoleVirtualNic(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device, com.vmware.vim25.HostVirtualNicSpec nic)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.ResourceInUse, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[356]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateServiceConsoleVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device, nic });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ResourceInUse) {
					throw (com.vmware.vim25.ResourceInUse) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void restartServiceConsoleVirtualNic(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[357]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RestartServiceConsoleVirtualNic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshNetworkSystem(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[358]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshNetworkSystem"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] metaUrls, java.lang.String[] bundleUrls,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[359]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, metaUrls, bundleUrls, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference scanHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostPatchManagerLocator repository,
			java.lang.String[] updateID) throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.PatchMetadataInvalid {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[360]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ScanHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, repository, updateID });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PatchMetadataInvalid) {
					throw (com.vmware.vim25.PatchMetadataInvalid) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference scanHostPatchV2_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] metaUrls, java.lang.String[] bundleUrls,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[361]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ScanHostPatchV2_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, metaUrls, bundleUrls, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference stageHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] metaUrls, java.lang.String[] bundleUrls,
			java.lang.String[] vibUrls,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[362]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StageHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, metaUrls, bundleUrls, vibUrls, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference installHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostPatchManagerLocator repository,
			java.lang.String updateID, java.lang.Boolean force)
			throws java.rmi.RemoteException, com.vmware.vim25.NoDiskSpace,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.RebootRequired,
			com.vmware.vim25.PatchBinariesNotFound,
			com.vmware.vim25.InvalidState, com.vmware.vim25.PatchNotApplicable,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.PatchInstallFailed,
			com.vmware.vim25.PatchMetadataInvalid {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[363]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"InstallHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, repository, updateID, force });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoDiskSpace) {
					throw (com.vmware.vim25.NoDiskSpace) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RebootRequired) {
					throw (com.vmware.vim25.RebootRequired) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PatchBinariesNotFound) {
					throw (com.vmware.vim25.PatchBinariesNotFound) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PatchNotApplicable) {
					throw (com.vmware.vim25.PatchNotApplicable) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PatchInstallFailed) {
					throw (com.vmware.vim25.PatchInstallFailed) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PatchMetadataInvalid) {
					throw (com.vmware.vim25.PatchMetadataInvalid) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference installHostPatchV2_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] metaUrls, java.lang.String[] bundleUrls,
			java.lang.String[] vibUrls,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[364]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"InstallHostPatchV2_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, metaUrls, bundleUrls, vibUrls, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference uninstallHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] bulletinIds,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[365]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UninstallHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, bulletinIds, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference queryHostPatch_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.PlatformConfigFault,
			com.vmware.vim25.RequestCanceled, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[366]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryHostPatch_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.PlatformConfigFault) {
					throw (com.vmware.vim25.PlatformConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RequestCanceled) {
					throw (com.vmware.vim25.RequestCanceled) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refresh(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[367]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"Refresh"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updatePassthruConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostPciPassthruConfig[] config)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[368]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdatePassthruConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateServicePolicy(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String id,
			java.lang.String policy) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[369]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateServicePolicy"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id, policy });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void startService(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[370]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StartService"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void stopService(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[371]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"StopService"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void restartService(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[372]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RestartService"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void uninstallService(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String id) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[373]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UninstallService"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, id });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshServices(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[374]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshServices"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureSnmpAgent(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostSnmpConfigSpec spec)
			throws java.rmi.RemoteException,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[375]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureSnmpAgent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void sendTestNotification(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[376]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SendTestNotification"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiskPartitionInfo[] retrieveDiskPartitionInfo(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] devicePath) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[377]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveDiskPartitionInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, devicePath });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiskPartitionInfo[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiskPartitionInfo[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiskPartitionInfo[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiskPartitionInfo computeDiskPartitionInfo(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String devicePath,
			com.vmware.vim25.HostDiskPartitionLayout layout)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[378]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ComputeDiskPartitionInfo"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, devicePath, layout });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiskPartitionInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiskPartitionInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiskPartitionInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostDiskPartitionInfo computeDiskPartitionInfoForResize(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostScsiDiskPartition partition,
			com.vmware.vim25.HostDiskPartitionBlockRange blockRange)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[379]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ComputeDiskPartitionInfoForResize"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, partition, blockRange });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostDiskPartitionInfo) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostDiskPartitionInfo) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostDiskPartitionInfo.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateDiskPartitions(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String devicePath,
			com.vmware.vim25.HostDiskPartitionSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[380]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateDiskPartitions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, devicePath, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostVmfsVolume formatVmfs(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostVmfsSpec createSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.AlreadyExists, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[381]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FormatVmfs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, createSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostVmfsVolume) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostVmfsVolume) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.HostVmfsVolume.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.AlreadyExists) {
					throw (com.vmware.vim25.AlreadyExists) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void rescanVmfs(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[382]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RescanVmfs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void attachVmfsExtent(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vmfsPath,
			com.vmware.vim25.HostScsiDiskPartition extent)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[383]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AttachVmfsExtent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vmfsPath, extent });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void expandVmfsExtent(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vmfsPath,
			com.vmware.vim25.HostScsiDiskPartition extent)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[384]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExpandVmfsExtent"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vmfsPath, extent });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void upgradeVmfs(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vmfsPath) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[385]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVmfs"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vmfsPath });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void upgradeVmLayout(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[386]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpgradeVmLayout"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostUnresolvedVmfsVolume[] queryUnresolvedVmfsVolume(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[387]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryUnresolvedVmfsVolume"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostUnresolvedVmfsVolume[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostUnresolvedVmfsVolume[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostUnresolvedVmfsVolume[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostUnresolvedVmfsResolutionResult[] resolveMultipleUnresolvedVmfsVolumes(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostUnresolvedVmfsResolutionSpec[] resolutionSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[388]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResolveMultipleUnresolvedVmfsVolumes"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, resolutionSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostUnresolvedVmfsResolutionResult[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostUnresolvedVmfsResolutionResult[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostUnresolvedVmfsResolutionResult[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void unmountForceMountedVmfsVolume(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String vmfsUuid) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[389]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UnmountForceMountedVmfsVolume"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vmfsUuid });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void rescanHba(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String hbaDevice) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[390]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RescanHba"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, hbaDevice });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void rescanAllHba(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[391]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RescanAllHba"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateSoftwareInternetScsiEnabled(
			com.vmware.vim25.ManagedObjectReference _this, boolean enabled)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[392]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateSoftwareInternetScsiEnabled"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(enabled) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiDiscoveryProperties(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaDiscoveryProperties discoveryProperties)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[393]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiDiscoveryProperties"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, discoveryProperties });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiAuthenticationProperties(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaAuthenticationProperties authenticationProperties,
			com.vmware.vim25.HostInternetScsiHbaTargetSet targetSet)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[394]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAuthenticationProperties"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this, iScsiHbaDevice,
							authenticationProperties, targetSet });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiDigestProperties(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaTargetSet targetSet,
			com.vmware.vim25.HostInternetScsiHbaDigestProperties digestProperties)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[395]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiDigestProperties"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targetSet, digestProperties });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiAdvancedOptions(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaTargetSet targetSet,
			com.vmware.vim25.HostInternetScsiHbaParamValue[] options)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[396]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAdvancedOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targetSet, options });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiIPProperties(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaIPProperties ipProperties)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[397]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiIPProperties"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, ipProperties });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiName(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice, java.lang.String iScsiName)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[398]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiName"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, iScsiName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateInternetScsiAlias(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice, java.lang.String iScsiAlias)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[399]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateInternetScsiAlias"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, iScsiAlias });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void addInternetScsiSendTargets(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaSendTarget[] targets)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[400]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddInternetScsiSendTargets"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targets });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeInternetScsiSendTargets(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaSendTarget[] targets)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[401]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveInternetScsiSendTargets"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targets });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void addInternetScsiStaticTargets(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaStaticTarget[] targets)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[402]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AddInternetScsiStaticTargets"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targets });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeInternetScsiStaticTargets(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String iScsiHbaDevice,
			com.vmware.vim25.HostInternetScsiHbaStaticTarget[] targets)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[403]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveInternetScsiStaticTargets"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, iScsiHbaDevice, targets });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void enableMultipathPath(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String pathName) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[404]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"EnableMultipathPath"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pathName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void disableMultipathPath(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String pathName) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[405]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DisableMultipathPath"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, pathName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void setMultipathLunPolicy(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String lunId,
			com.vmware.vim25.HostMultipathInfoLogicalUnitPolicy policy)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[406]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SetMultipathLunPolicy"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, lunId, policy });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostPathSelectionPolicyOption[] queryPathSelectionPolicyOptions(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[407]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPathSelectionPolicyOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostPathSelectionPolicyOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostPathSelectionPolicyOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostPathSelectionPolicyOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostStorageArrayTypePolicyOption[] queryStorageArrayTypePolicyOptions(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[408]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryStorageArrayTypePolicyOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostStorageArrayTypePolicyOption[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostStorageArrayTypePolicyOption[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostStorageArrayTypePolicyOption[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateScsiLunDisplayName(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String lunUuid, java.lang.String displayName)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.InvalidName, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[409]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateScsiLunDisplayName"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, lunUuid, displayName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void refreshStorageSystem(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[410]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RefreshStorageSystem"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateIpConfig(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostIpConfig ipConfig)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.NotFound {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[411]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateIpConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, ipConfig });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NotFound) {
					throw (com.vmware.vim25.NotFound) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void selectVnic(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String device) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[412]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SelectVnic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void deselectVnic(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[413]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeselectVnic"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.VirtualNicManagerNetConfig queryNetConfig(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String nicType) throws java.rmi.RemoteException,
			com.vmware.vim25.HostConfigFault, com.vmware.vim25.RuntimeFault,
			com.vmware.vim25.InvalidArgument {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[414]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryNetConfig"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, nicType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.VirtualNicManagerNetConfig) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.VirtualNicManagerNetConfig) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.VirtualNicManagerNetConfig.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidArgument) {
					throw (com.vmware.vim25.InvalidArgument) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void selectVnicForNicType(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String nicType, java.lang.String device)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.InvalidArgument {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[415]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"SelectVnicForNicType"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, nicType, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidArgument) {
					throw (com.vmware.vim25.InvalidArgument) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void deselectVnicForNicType(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String nicType, java.lang.String device)
			throws java.rmi.RemoteException, com.vmware.vim25.HostConfigFault,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.InvalidArgument {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[416]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DeselectVnicForNicType"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, nicType, device });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFault) {
					throw (com.vmware.vim25.HostConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidArgument) {
					throw (com.vmware.vim25.InvalidArgument) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.OptionValue[] queryOptions(
			com.vmware.vim25.ManagedObjectReference _this, java.lang.String name)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[417]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.OptionValue[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.OptionValue[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.OptionValue[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateOptions(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.OptionValue[] changedValue)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[418]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateOptions"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, changedValue });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkCompliance_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] profile,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[419]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckCompliance_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, profile, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ComplianceResult[] queryComplianceStatus(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] profile,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[420]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryComplianceStatus"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, profile, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ComplianceResult[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ComplianceResult[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.ComplianceResult[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void clearComplianceStatus(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] profile,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[421]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ClearComplianceStatus"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, profile, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ProfileExpressionMetadata[] queryExpressionMetadata(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] expressionName) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[422]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryExpressionMetadata"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, expressionName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ProfileExpressionMetadata[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ProfileExpressionMetadata[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ProfileExpressionMetadata[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyProfile(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[423]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void associateProfile(com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[424]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"AssociateProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void dissociateProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[425]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DissociateProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkProfileCompliance_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[426]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckProfileCompliance_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public java.lang.String exportProfile(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[427]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExportProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (java.lang.String) _resp;
				} catch (java.lang.Exception _exception) {
					return (java.lang.String) org.apache.axis.utils.JavaUtils
							.convert(_resp, java.lang.String.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ProfileCreateSpec createSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[428]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, createSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ProfilePolicyMetadata[] queryPolicyMetadata(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] policyName) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[429]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryPolicyMetadata"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, policyName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ProfilePolicyMetadata[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ProfilePolicyMetadata[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ProfilePolicyMetadata[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] findAssociatedProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[430]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"FindAssociatedProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateClusterProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ClusterProfileConfigSpec config)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[431]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateClusterProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateReferenceHost(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[432]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateReferenceHost"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void updateHostProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostProfileConfigSpec config)
			throws java.rmi.RemoteException, com.vmware.vim25.DuplicateName,
			com.vmware.vim25.ProfileUpdateFailed, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[433]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"UpdateHostProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, config });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.ProfileUpdateFailed) {
					throw (com.vmware.vim25.ProfileUpdateFailed) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ProfileExecuteResult executeHostProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.ProfileDeferredPolicyOptionParameter[] deferredParam)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[434]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ExecuteHostProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, deferredParam });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ProfileExecuteResult) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ProfileExecuteResult) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.ProfileExecuteResult.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference applyHostConfig_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.HostConfigSpec configSpec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault, com.vmware.vim25.HostConfigFailed {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[435]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ApplyHostConfig_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, configSpec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.HostConfigFailed) {
					throw (com.vmware.vim25.HostConfigFailed) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.HostProfileManagerConfigTaskList generateConfigTaskList(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.HostConfigSpec configSpec,
			com.vmware.vim25.ManagedObjectReference host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[436]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"GenerateConfigTaskList"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, configSpec, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.HostProfileManagerConfigTaskList) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.HostProfileManagerConfigTaskList) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.HostProfileManagerConfigTaskList.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ProfileMetadata[] queryHostProfileMetadata(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String[] profileName) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[437]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryHostProfileMetadata"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, profileName });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ProfileMetadata[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ProfileMetadata[]) org.apache.axis.utils.JavaUtils
							.convert(_resp,
									com.vmware.vim25.ProfileMetadata[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ApplyProfile createDefaultProfile(
			com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String profileType) throws java.rmi.RemoteException,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[438]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateDefaultProfile"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, profileType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ApplyProfile) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ApplyProfile) org.apache.axis.utils.JavaUtils
							.convert(_resp, com.vmware.vim25.ApplyProfile.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void removeScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[439]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void reconfigureScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ScheduledTaskSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[440]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ReconfigureScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void runScheduledTask(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidState,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[441]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RunScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity,
			com.vmware.vim25.ScheduledTaskSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[442]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] retrieveEntityScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[443]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveEntityScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createObjectScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference obj,
			com.vmware.vim25.ScheduledTaskSpec spec)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.DuplicateName, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[444]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateObjectScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj, spec });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.DuplicateName) {
					throw (com.vmware.vim25.DuplicateName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] retrieveObjectScheduledTask(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference obj)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[445]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RetrieveObjectScheduledTask"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] openInventoryViewFolder(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[446]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"OpenInventoryViewFolder"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] closeInventoryViewFolder(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] entity)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[447]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CloseInventoryViewFolder"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, entity });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] modifyListView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] add,
			com.vmware.vim25.ManagedObjectReference[] remove)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[448]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ModifyListView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, add, remove });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference[] resetListView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] obj)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[449]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetListView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference[]) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference[].class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void resetListViewFromView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference view)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[450]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"ResetListViewFromView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, view });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void destroyView(com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[451]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"DestroyView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createInventoryView(
			com.vmware.vim25.ManagedObjectReference _this)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[452]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateInventoryView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call
					.invoke(new java.lang.Object[] { _this });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createContainerView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference container,
			java.lang.String[] type, boolean recursive)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[453]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateContainerView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, container, type, new java.lang.Boolean(recursive) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createListView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] obj)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[454]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateListView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, obj });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference createListViewFromView(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference view)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[455]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CreateListViewFromView"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, view });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference revertToSnapshot_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference host,
			java.lang.Boolean suppressPowerOn) throws java.rmi.RemoteException,
			com.vmware.vim25.VmConfigFault, com.vmware.vim25.TaskInProgress,
			com.vmware.vim25.FileFault, com.vmware.vim25.InvalidState,
			com.vmware.vim25.InsufficientResourcesFault,
			com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[456]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RevertToSnapshot_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, host, suppressPowerOn });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.VmConfigFault) {
					throw (com.vmware.vim25.VmConfigFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.FileFault) {
					throw (com.vmware.vim25.FileFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InsufficientResourcesFault) {
					throw (com.vmware.vim25.InsufficientResourcesFault) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference removeSnapshot_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			boolean removeChildren) throws java.rmi.RemoteException,
			com.vmware.vim25.TaskInProgress, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[457]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RemoveSnapshot_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, new java.lang.Boolean(removeChildren) });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.TaskInProgress) {
					throw (com.vmware.vim25.TaskInProgress) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public void renameSnapshot(com.vmware.vim25.ManagedObjectReference _this,
			java.lang.String name, java.lang.String description)
			throws java.rmi.RemoteException, com.vmware.vim25.InvalidName,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[458]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"RenameSnapshot"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, name, description });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			}
			extractAttachments(_call);
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidName) {
					throw (com.vmware.vim25.InvalidName) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkCompatibility_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.ManagedObjectReference pool,
			java.lang.String[] testType) throws java.rmi.RemoteException,
			com.vmware.vim25.NoActiveHostInCluster,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[459]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckCompatibility_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, host, pool, testType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.NoActiveHostInCluster) {
					throw (com.vmware.vim25.NoActiveHostInCluster) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference queryVMotionCompatibilityEx_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference[] vm,
			com.vmware.vim25.ManagedObjectReference[] host)
			throws java.rmi.RemoteException, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[460]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"QueryVMotionCompatibilityEx_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, host });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkMigrate_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.ManagedObjectReference host,
			com.vmware.vim25.ManagedObjectReference pool,
			com.vmware.vim25.VirtualMachinePowerState state,
			java.lang.String[] testType) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[461]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckMigrate_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, host, pool, state, testType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

	public com.vmware.vim25.ManagedObjectReference checkRelocate_Task(
			com.vmware.vim25.ManagedObjectReference _this,
			com.vmware.vim25.ManagedObjectReference vm,
			com.vmware.vim25.VirtualMachineRelocateSpec spec,
			java.lang.String[] testType) throws java.rmi.RemoteException,
			com.vmware.vim25.InvalidState, com.vmware.vim25.RuntimeFault {
		if (super.cachedEndpoint == null) {
			throw new org.apache.axis.NoEndPointException();
		}
		org.apache.axis.client.Call _call = createCall();
		_call.setOperation(_operations[462]);
		_call.setUseSOAPAction(true);
		_call.setSOAPActionURI("urn:vim25/4.0");
		_call.setEncodingStyle(null);
		_call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR,
				Boolean.FALSE);
		_call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS,
				Boolean.FALSE);
		_call
				.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
		_call.setOperationName(new javax.xml.namespace.QName("urn:vim25",
				"CheckRelocate_Task"));

		setRequestHeaders(_call);
		setAttachments(_call);
		try {
			java.lang.Object _resp = _call.invoke(new java.lang.Object[] {
					_this, vm, spec, testType });

			if (_resp instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) _resp;
			} else {
				extractAttachments(_call);
				try {
					return (com.vmware.vim25.ManagedObjectReference) _resp;
				} catch (java.lang.Exception _exception) {
					return (com.vmware.vim25.ManagedObjectReference) org.apache.axis.utils.JavaUtils
							.convert(
									_resp,
									com.vmware.vim25.ManagedObjectReference.class);
				}
			}
		} catch (org.apache.axis.AxisFault axisFaultException) {
			if (axisFaultException.detail != null) {
				if (axisFaultException.detail instanceof java.rmi.RemoteException) {
					throw (java.rmi.RemoteException) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.InvalidState) {
					throw (com.vmware.vim25.InvalidState) axisFaultException.detail;
				}
				if (axisFaultException.detail instanceof com.vmware.vim25.RuntimeFault) {
					throw (com.vmware.vim25.RuntimeFault) axisFaultException.detail;
				}
			}
			throw axisFaultException;
		}
	}

}
