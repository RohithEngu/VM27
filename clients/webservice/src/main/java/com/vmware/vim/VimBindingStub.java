/**
 * VimBindingStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.vmware.vim;

public class VimBindingStub extends org.apache.axis.client.Stub implements com.vmware.vim.VimPortType {
    private java.util.Vector cachedSerClasses = new java.util.Vector();
    private java.util.Vector cachedSerQNames = new java.util.Vector();
    private java.util.Vector cachedSerFactories = new java.util.Vector();
    private java.util.Vector cachedDeserFactories = new java.util.Vector();

    static org.apache.axis.description.OperationDesc [] _operations;

    static {
        _operations = new org.apache.axis.description.OperationDesc[251];
        _initOperationDesc1();
        _initOperationDesc2();
        _initOperationDesc3();
        _initOperationDesc4();
        _initOperationDesc5();
        _initOperationDesc6();
        _initOperationDesc7();
        _initOperationDesc8();
        _initOperationDesc9();
        _initOperationDesc10();
        _initOperationDesc11();
        _initOperationDesc12();
        _initOperationDesc13();
        _initOperationDesc14();
        _initOperationDesc15();
        _initOperationDesc16();
        _initOperationDesc17();
        _initOperationDesc18();
        _initOperationDesc19();
        _initOperationDesc20();
        _initOperationDesc21();
        _initOperationDesc22();
        _initOperationDesc23();
        _initOperationDesc24();
        _initOperationDesc25();
        _initOperationDesc26();
    }

    private static void _initOperationDesc1(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyPropertyFilter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[0] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateFilter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PropertyFilterSpec"), com.vmware.vim.PropertyFilterSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "partialUpdates"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPropertyFault"),
                      "com.vmware.vim.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidProperty"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[1] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveProperties");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "specSet"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PropertyFilterSpec"), com.vmware.vim.PropertyFilterSpec[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ObjectContent"));
        oper.setReturnClass(com.vmware.vim.ObjectContent[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPropertyFault"),
                      "com.vmware.vim.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidProperty"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[2] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "UpdateSet"));
        oper.setReturnClass(com.vmware.vim.UpdateSet.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidCollectorVersionFault"),
                      "com.vmware.vim.InvalidCollectorVersion",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidCollectorVersion"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[3] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("WaitForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "UpdateSet"));
        oper.setReturnClass(com.vmware.vim.UpdateSet.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidCollectorVersionFault"),
                      "com.vmware.vim.InvalidCollectorVersion",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidCollectorVersion"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[4] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CancelWaitForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[5] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddAuthorizationRole");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "privIds"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        oper.setReturnClass(int.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[6] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveAuthorizationRole");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "roleId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "failIfUsed"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RemoveFailedFault"),
                      "com.vmware.vim.RemoveFailed",
                      new javax.xml.namespace.QName("urn:vim2", "RemoveFailed"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[7] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateAuthorizationRole");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "roleId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "privIds"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[8] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MergePermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "srcRoleId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "dstRoleId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermissionFault"),
                      "com.vmware.vim.AuthMinimumAdminPermission",
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermission"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[9] = oper;

    }

    private static void _initOperationDesc2(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveRolePermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "roleId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Permission"));
        oper.setReturnClass(com.vmware.vim.Permission[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[10] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveEntityPermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "inherited"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Permission"));
        oper.setReturnClass(com.vmware.vim.Permission[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[11] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveAllPermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Permission"));
        oper.setReturnClass(com.vmware.vim.Permission[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[12] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetEntityPermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "permission"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "Permission"), com.vmware.vim.Permission[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermissionFault"),
                      "com.vmware.vim.AuthMinimumAdminPermission",
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermission"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[13] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ResetEntityPermissions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "permission"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "Permission"), com.vmware.vim.Permission[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermissionFault"),
                      "com.vmware.vim.AuthMinimumAdminPermission",
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermission"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[14] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveEntityPermission");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "user"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "isGroup"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermissionFault"),
                      "com.vmware.vim.AuthMinimumAdminPermission",
                      new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermission"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[15] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureCluster_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ClusterConfigSpec"), com.vmware.vim.ClusterConfigSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "modify"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[16] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ApplyRecommendation");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[17] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RecommendHostsForVm");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vm"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ClusterHostRecommendation"));
        oper.setReturnClass(com.vmware.vim.ClusterHostRecommendation[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[18] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostConnectSpec"), com.vmware.vim.HostConnectSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "asConnected"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "resourcePool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFaultFault"),
                      "com.vmware.vim.HostConnectFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[19] = oper;

    }

    private static void _initOperationDesc3(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MoveInto_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TooManyHostsFault"),
                      "com.vmware.vim.TooManyHosts",
                      new javax.xml.namespace.QName("urn:vim2", "TooManyHosts"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[20] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MoveHostInto_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "resourcePool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TooManyHostsFault"),
                      "com.vmware.vim.TooManyHosts",
                      new javax.xml.namespace.QName("urn:vim2", "TooManyHosts"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[21] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddCustomFieldDef");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "CustomFieldDef"));
        oper.setReturnClass(com.vmware.vim.CustomFieldDef.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[22] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveCustomFieldDef");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[23] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RenameCustomFieldDef");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[24] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetField");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "value"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[25] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DoesCustomizationSpecExist");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[26] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("GetCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem"));
        oper.setReturnClass(com.vmware.vim.CustomizationSpecItem.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[27] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "item"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem"), com.vmware.vim.CustomizationSpecItem.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[28] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("OverwriteCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "item"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem"), com.vmware.vim.CustomizationSpecItem.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccessFault"),
                      "com.vmware.vim.ConcurrentAccess",
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[29] = oper;

    }

    private static void _initOperationDesc4(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DeleteCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[30] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DuplicateCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[31] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RenameCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[32] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CustomizationSpecItemToXml");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "item"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem"), com.vmware.vim.CustomizationSpecItem.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[33] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("XmlToCustomizationSpecItem");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "specItemXml"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem"));
        oper.setReturnClass(com.vmware.vim.CustomizationSpecItem.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[34] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckCustomizationResources");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "guestOs"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[35] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryConnectionInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "hostname"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "port"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "username"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostConnectInfo"));
        oper.setReturnClass(com.vmware.vim.HostConnectInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFaultFault"),
                      "com.vmware.vim.HostConnectFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[36] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RenameDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[37] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RefreshDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[38] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[39] = oper;

    }

    private static void _initOperationDesc5(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryDescriptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogDescriptor"));
        oper.setReturnClass(com.vmware.vim.DiagnosticManagerLogDescriptor[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[40] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("BrowseDiagnosticLog");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "start"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), java.lang.Integer.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "lines"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), java.lang.Integer.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogHeader"));
        oper.setReturnClass(com.vmware.vim.DiagnosticManagerLogHeader.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CannotAccessFileFault"),
                      "com.vmware.vim.CannotAccessFile",
                      new javax.xml.namespace.QName("urn:vim2", "CannotAccessFile"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[41] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("GenerateLogBundles_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "includeDefault"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "LogBundlingFailedFault"),
                      "com.vmware.vim.LogBundlingFailed",
                      new javax.xml.namespace.QName("urn:vim2", "LogBundlingFailed"), 
                      true
                     ));
        _operations[42] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryConfigOptionDescriptor");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigOptionDescriptor"));
        oper.setReturnClass(com.vmware.vim.VirtualMachineConfigOptionDescriptor[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[43] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryConfigOption");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigOption"));
        oper.setReturnClass(com.vmware.vim.VirtualMachineConfigOption.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[44] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryConfigTarget");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ConfigTarget"));
        oper.setReturnClass(com.vmware.vim.ConfigTarget.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[45] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateFolder");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[46] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MoveIntoFolder_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "list"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidFolderFault"),
                      "com.vmware.vim.InvalidFolder",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidFolder"), 
                      true
                     ));
        _operations[47] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigSpec"), com.vmware.vim.VirtualMachineConfigSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "OutOfBoundsFault"),
                      "com.vmware.vim.OutOfBounds",
                      new javax.xml.namespace.QName("urn:vim2", "OutOfBounds"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[48] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RegisterVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "path"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "asTemplate"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "OutOfBoundsFault"),
                      "com.vmware.vim.OutOfBounds",
                      new javax.xml.namespace.QName("urn:vim2", "OutOfBounds"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[49] = oper;

    }

    private static void _initOperationDesc6(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateCluster");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ClusterConfigSpec"), com.vmware.vim.ClusterConfigSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[50] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddStandaloneHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostConnectSpec"), com.vmware.vim.HostConnectSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "addConnected"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFaultFault"),
                      "com.vmware.vim.HostConnectFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[51] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateDatacenter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[52] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UnregisterAndDestroy_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccessFault"),
                      "com.vmware.vim.ConcurrentAccess",
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[53] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetCollectorPageSize");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[54] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RewindCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[55] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ResetCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[56] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[57] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryHostConnectionInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostConnectInfo"));
        oper.setReturnClass(com.vmware.vim.HostConnectInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[58] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateSystemResources");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "resourceInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostSystemResourceInfo"), com.vmware.vim.HostSystemResourceInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[59] = oper;

    }

    private static void _initOperationDesc7(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconnectHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "cnxSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostConnectSpec"), com.vmware.vim.HostConnectSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFaultFault"),
                      "com.vmware.vim.HostConnectFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConnectFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[60] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DisconnectHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[61] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("EnterMaintenanceMode_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "timeout"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TimedoutFault"),
                      "com.vmware.vim.Timedout",
                      new javax.xml.namespace.QName("urn:vim2", "Timedout"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[62] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ExitMaintenanceMode_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "timeout"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TimedoutFault"),
                      "com.vmware.vim.Timedout",
                      new javax.xml.namespace.QName("urn:vim2", "Timedout"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[63] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RebootHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "force"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[64] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ShutdownHost_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "force"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[65] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryMemoryOverhead");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "memorySize"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"), long.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "videoRamSize"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), java.lang.Integer.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "numVcpus"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"));
        oper.setReturnClass(long.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[66] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureHostForDAS_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DasConfigFaultFault"),
                      "com.vmware.vim.DasConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "DasConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[67] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryLicenseSourceAvailability");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "LicenseAvailabilityInfo"));
        oper.setReturnClass(com.vmware.vim.LicenseAvailabilityInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[68] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryLicenseUsage");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "LicenseUsageInfo"));
        oper.setReturnClass(com.vmware.vim.LicenseUsageInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[69] = oper;

    }

    private static void _initOperationDesc8(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetLicenseEdition");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "featureKey"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailableFault"),
                      "com.vmware.vim.LicenseServerUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[70] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckLicenseFeature");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "featureKey"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[71] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("EnableFeature");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "featureKey"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailableFault"),
                      "com.vmware.vim.LicenseServerUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[72] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DisableFeature");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "featureKey"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailableFault"),
                      "com.vmware.vim.LicenseServerUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[73] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConfigureLicenseSource");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "licenseSource"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "LicenseSource"), com.vmware.vim.LicenseSource.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CannotAccessLocalSourceFault"),
                      "com.vmware.vim.CannotAccessLocalSource",
                      new javax.xml.namespace.QName("urn:vim2", "CannotAccessLocalSource"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailableFault"),
                      "com.vmware.vim.LicenseServerUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLicenseFault"),
                      "com.vmware.vim.InvalidLicense",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLicense"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[74] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("Reload");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[75] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("Rename_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[76] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("Destroy_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VimFaultFault"),
                      "com.vmware.vim.VimFault",
                      new javax.xml.namespace.QName("urn:vim2", "VimFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[77] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyNetwork");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[78] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPerfProviderSummary");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PerfProviderSummary"));
        oper.setReturnClass(com.vmware.vim.PerfProviderSummary.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[79] = oper;

    }

    private static void _initOperationDesc9(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryAvailablePerfMetric");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "beginTime"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"), java.util.Calendar.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "endTime"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"), java.util.Calendar.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "intervalId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), java.lang.Integer.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PerfMetricId"));
        oper.setReturnClass(com.vmware.vim.PerfMetricId[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[80] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPerfCounter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "counterId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PerfCounterInfo"));
        oper.setReturnClass(com.vmware.vim.PerfCounterInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[81] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPerf");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "querySpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PerfQuerySpec"), com.vmware.vim.PerfQuerySpec[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PerfEntityMetricBase"));
        oper.setReturnClass(com.vmware.vim.PerfEntityMetricBase[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[82] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPerfComposite");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "querySpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PerfQuerySpec"), com.vmware.vim.PerfQuerySpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PerfCompositeMetric"));
        oper.setReturnClass(com.vmware.vim.PerfCompositeMetric.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[83] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreatePerfInterval");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "intervalId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PerfInterval"), com.vmware.vim.PerfInterval.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[84] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemovePerfInterval");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "samplePeriod"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[85] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdatePerfInterval");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "interval"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PerfInterval"), com.vmware.vim.PerfInterval.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[86] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ResourceConfigSpec"), com.vmware.vim.ResourceConfigSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccessFault"),
                      "com.vmware.vim.ConcurrentAccess",
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[87] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MoveIntoResourcePool");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "list"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[88] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateChildResourceConfiguration");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ResourceConfigSpec"), com.vmware.vim.ResourceConfigSpec[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[89] = oper;

    }

    private static void _initOperationDesc10(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateResourcePool");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ResourceConfigSpec"), com.vmware.vim.ResourceConfigSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[90] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyChildren");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[91] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindByUuid");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datacenter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "uuid"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vmSearch"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[92] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindByDatastorePath");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datacenter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "path"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[93] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindByDnsName");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datacenter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "dnsName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vmSearch"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[94] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindByIp");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datacenter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "ip"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vmSearch"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[95] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindByInventoryPath");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "inventoryPath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[96] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FindChild");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[97] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CurrentTime");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"));
        oper.setReturnClass(java.util.Calendar.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[98] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveServiceContent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ServiceContent"));
        oper.setReturnClass(com.vmware.vim.ServiceContent.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[99] = oper;

    }

    private static void _initOperationDesc11(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ValidateMigration");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vm"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "state"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachinePowerState"), com.vmware.vim.VirtualMachinePowerState.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "testType"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Event"));
        oper.setReturnClass(com.vmware.vim.Event[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[100] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryVMotionCompatibility");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vm"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference[].class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "compatibility"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostVMotionCompatibility"));
        oper.setReturnClass(com.vmware.vim.HostVMotionCompatibility[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[101] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateServiceMessage");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "message"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[102] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("Login");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "UserSession"));
        oper.setReturnClass(com.vmware.vim.UserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLocaleFault"),
                      "com.vmware.vim.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[103] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("Logout");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[104] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AcquireLocalTicket");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "SessionManagerLocalTicket"));
        oper.setReturnClass(com.vmware.vim.SessionManagerLocalTicket.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLoginFault"),
                      "com.vmware.vim.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLogin"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[105] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("TerminateSession");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "sessionId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[106] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetLocale");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLocaleFault"),
                      "com.vmware.vim.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[107] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CancelTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[108] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReadNextTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "TaskInfo"));
        oper.setReturnClass(com.vmware.vim.TaskInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[109] = oper;

    }

    private static void _initOperationDesc12(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReadPreviousTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "TaskInfo"));
        oper.setReturnClass(com.vmware.vim.TaskInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[110] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateCollectorForTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpec"), com.vmware.vim.TaskFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[111] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveUserGroups");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "domain"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "searchStr"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "belongsToGroup"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "belongsToUser"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "exactMatch"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "findUsers"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "findGroups"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "UserSearchResult"));
        oper.setReturnClass(com.vmware.vim.UserSearchResult[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[112] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateSnapshot_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "description"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "memory"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "quiesce"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFaultFault"),
                      "com.vmware.vim.SnapshotFault",
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[113] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RevertToCurrentSnapshot_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFaultFault"),
                      "com.vmware.vim.SnapshotFault",
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[114] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveAllSnapshots_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFaultFault"),
                      "com.vmware.vim.SnapshotFault",
                      new javax.xml.namespace.QName("urn:vim2", "SnapshotFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[115] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigSpec"), com.vmware.vim.VirtualMachineConfigSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccessFault"),
                      "com.vmware.vim.ConcurrentAccess",
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[116] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpgradeVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyUpgradedFault"),
                      "com.vmware.vim.AlreadyUpgraded",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyUpgraded"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NoDiskFoundFault"),
                      "com.vmware.vim.NoDiskFound",
                      new javax.xml.namespace.QName("urn:vim2", "NoDiskFound"), 
                      true
                     ));
        _operations[117] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("PowerOnVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[118] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("PowerOffVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[119] = oper;

    }

    private static void _initOperationDesc13(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SuspendVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[120] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ResetVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[121] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ShutdownGuest");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailableFault"),
                      "com.vmware.vim.ToolsUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[122] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RebootGuest");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailableFault"),
                      "com.vmware.vim.ToolsUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[123] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("StandbyGuest");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailableFault"),
                      "com.vmware.vim.ToolsUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[124] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AnswerVM");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "questionId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "answerChoice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccessFault"),
                      "com.vmware.vim.ConcurrentAccess",
                      new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[125] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CustomizeVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "CustomizationSpec"), com.vmware.vim.CustomizationSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[126] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckCustomizationSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "CustomizationSpec"), com.vmware.vim.CustomizationSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[127] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MigrateVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "priority"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachineMovePriority"), com.vmware.vim.VirtualMachineMovePriority.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "state"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachinePowerState"), com.vmware.vim.VirtualMachinePowerState.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TimedoutFault"),
                      "com.vmware.vim.Timedout",
                      new javax.xml.namespace.QName("urn:vim2", "Timedout"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFaultFault"),
                      "com.vmware.vim.MigrationFault",
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[128] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RelocateVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachineRelocateSpec"), com.vmware.vim.VirtualMachineRelocateSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TimedoutFault"),
                      "com.vmware.vim.Timedout",
                      new javax.xml.namespace.QName("urn:vim2", "Timedout"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFaultFault"),
                      "com.vmware.vim.MigrationFault",
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[129] = oper;

    }

    private static void _initOperationDesc14(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CloneVM_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "folder"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VirtualMachineCloneSpec"), com.vmware.vim.VirtualMachineCloneSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFaultFault"),
                      "com.vmware.vim.CustomizationFault",
                      new javax.xml.namespace.QName("urn:vim2", "CustomizationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFaultFault"),
                      "com.vmware.vim.MigrationFault",
                      new javax.xml.namespace.QName("urn:vim2", "MigrationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[130] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MarkAsTemplate");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[131] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MarkAsVirtualMachine");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pool"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[132] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UnregisterVM");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPowerStateFault"),
                      "com.vmware.vim.InvalidPowerState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPowerState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[133] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ResetGuestInformation");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[134] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("MountToolsInstaller");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[135] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UnmountToolsInstaller");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[136] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpgradeTools_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "installerOptions"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmToolsUpgradeFaultFault"),
                      "com.vmware.vim.VmToolsUpgradeFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmToolsUpgradeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailableFault"),
                      "com.vmware.vim.ToolsUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[137] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AcquireMksTicket");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "VirtualMachineMksTicket"));
        oper.setReturnClass(com.vmware.vim.VirtualMachineMksTicket.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[138] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetScreenResolution");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "width"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "height"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailableFault"),
                      "com.vmware.vim.ToolsUnavailable",
                      new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPowerStateFault"),
                      "com.vmware.vim.InvalidPowerState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidPowerState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[139] = oper;

    }

    private static void _initOperationDesc15(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveAlarm");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[140] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureAlarm");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "AlarmSpec"), com.vmware.vim.AlarmSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[141] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateAlarm");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "AlarmSpec"), com.vmware.vim.AlarmSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[142] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("GetAlarm");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[143] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("GetAlarmState");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "AlarmState"));
        oper.setReturnClass(com.vmware.vim.AlarmState[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[144] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReadNextEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Event"));
        oper.setReturnClass(com.vmware.vim.Event[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[145] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReadPreviousEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Event"));
        oper.setReturnClass(com.vmware.vim.Event[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[146] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateCollectorForEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "EventFilterSpec"), com.vmware.vim.EventFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[147] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("LogUserEvent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "msg"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[148] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "EventFilterSpec"), com.vmware.vim.EventFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "Event"));
        oper.setReturnClass(com.vmware.vim.Event[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[149] = oper;

    }

    private static void _initOperationDesc16(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureAutostart");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostAutoStartManagerConfig"), com.vmware.vim.HostAutoStartManagerConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[150] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AutoStartPowerOn");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[151] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AutoStartPowerOff");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[152] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("EnableHyperThreading");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[153] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DisableHyperThreading");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[154] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SearchDatastore_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastorePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "searchSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDatastoreBrowserSearchSpec"), com.vmware.vim.HostDatastoreBrowserSearchSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[155] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SearchDatastoreSubFolders_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastorePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "searchSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDatastoreBrowserSearchSpec"), com.vmware.vim.HostDatastoreBrowserSearchSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[156] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DeleteFile");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastorePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastoreFault"),
                      "com.vmware.vim.InvalidDatastore",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[157] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryAvailableDisksForVmfs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastore"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostScsiDisk"));
        oper.setReturnClass(com.vmware.vim.HostScsiDisk[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[158] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryVmfsDatastoreCreateOptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "devicePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreOption"));
        oper.setReturnClass(com.vmware.vim.VmfsDatastoreOption[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[159] = oper;

    }

    private static void _initOperationDesc17(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateVmfsDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreCreateSpec"), com.vmware.vim.VmfsDatastoreCreateSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[160] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryVmfsDatastoreExtendOptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastore"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "devicePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreOption"));
        oper.setReturnClass(com.vmware.vim.VmfsDatastoreOption[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[161] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ExtendVmfsDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastore"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreExtendSpec"), com.vmware.vim.VmfsDatastoreExtendSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[162] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateNasDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostNasVolumeSpec"), com.vmware.vim.HostNasVolumeSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[163] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateLocalDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "path"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[164] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveDatastore");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "datastore"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[165] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConfigureDatastorePrincipal");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[166] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryAvailablePartition");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartition"));
        oper.setReturnClass(com.vmware.vim.HostDiagnosticPartition[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[167] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SelectActivePartition");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "partition"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostScsiDiskPartition"), com.vmware.vim.HostScsiDiskPartition.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[168] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPartitionCreateOptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "storageType"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "diagnosticType"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateOption"));
        oper.setReturnClass(com.vmware.vim.HostDiagnosticPartitionCreateOption[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[169] = oper;

    }

    private static void _initOperationDesc18(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryPartitionCreateDesc");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "diskUuid"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "diagnosticType"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateDescription"));
        oper.setReturnClass(com.vmware.vim.HostDiagnosticPartitionCreateDescription.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[170] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateDiagnosticPartition");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateSpec"), com.vmware.vim.HostDiagnosticPartitionCreateSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[171] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateDefaultPolicy");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "defaultPolicy"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostFirewallDefaultPolicy"), com.vmware.vim.HostFirewallDefaultPolicy.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[172] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("EnableRuleset");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[173] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DisableRuleset");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[174] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RefreshFirewall");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[175] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateUser");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "user"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostAccountSpec"), com.vmware.vim.HostAccountSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[176] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateUser");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "user"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostAccountSpec"), com.vmware.vim.HostAccountSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[177] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "group"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostAccountSpec"), com.vmware.vim.HostAccountSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[178] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveUser");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[179] = oper;

    }

    private static void _initOperationDesc19(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "groupName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[180] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AssignUserToGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "user"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "group"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[181] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UnassignUserFromGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "user"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "group"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFoundFault"),
                      "com.vmware.vim.UserNotFound",
                      new javax.xml.namespace.QName("urn:vim2", "UserNotFound"), 
                      true
                     ));
        _operations[182] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureServiceConsoleReservation");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "cfgBytes"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"), long.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[183] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateNetworkConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostNetworkConfig"), com.vmware.vim.HostNetworkConfig.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "changeMode"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostNetworkConfigResult"));
        oper.setReturnClass(com.vmware.vim.HostNetworkConfigResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[184] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateDnsConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDnsConfig"), com.vmware.vim.HostDnsConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[185] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateIpRouteConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostIpRouteConfig"), com.vmware.vim.HostIpRouteConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[186] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateConsoleIpRouteConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostIpRouteConfig"), com.vmware.vim.HostIpRouteConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[187] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddVirtualSwitch");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vswitchName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchSpec"), com.vmware.vim.HostVirtualSwitchSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[188] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveVirtualSwitch");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vswitchName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[189] = oper;

    }

    private static void _initOperationDesc20(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateVirtualSwitch");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vswitchName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchSpec"), com.vmware.vim.HostVirtualSwitchSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[190] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddPortGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "portgrp"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostPortGroupSpec"), com.vmware.vim.HostPortGroupSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[191] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemovePortGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pgName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[192] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdatePortGroup");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pgName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "portgrp"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostPortGroupSpec"), com.vmware.vim.HostPortGroupSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[193] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdatePhysicalNicLinkSpeed");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "linkSpeed"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "PhysicalNicLinkInfo"), com.vmware.vim.PhysicalNicLinkInfo.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[194] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryNetworkHint");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "PhysicalNicHintInfo"));
        oper.setReturnClass(com.vmware.vim.PhysicalNicHintInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[195] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "portgroup"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "nic"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicSpec"), com.vmware.vim.HostVirtualNicSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[196] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[197] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "nic"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicSpec"), com.vmware.vim.HostVirtualNicSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[198] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddServiceConsoleVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "portgroup"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "nic"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicSpec"), com.vmware.vim.HostVirtualNicSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[199] = oper;

    }

    private static void _initOperationDesc21(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveServiceConsoleVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[200] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateServiceConsoleVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "nic"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicSpec"), com.vmware.vim.HostVirtualNicSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUseFault"),
                      "com.vmware.vim.ResourceInUse",
                      new javax.xml.namespace.QName("urn:vim2", "ResourceInUse"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[201] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RestartServiceConsoleVirtualNic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[202] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RefreshNetworkSystem");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[203] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateServicePolicy");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "policy"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[204] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("StartService");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[205] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("StopService");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[206] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RestartService");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[207] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UninstallService");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "id"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[208] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RefreshServices");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[209] = oper;

    }

    private static void _initOperationDesc22(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckIfMasterSnmpAgentRunning");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[210] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateSnmpConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "config"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostSnmpConfig"), com.vmware.vim.HostSnmpConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[211] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RestartMasterSnmpAgent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[212] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("StopMasterSnmpAgent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[213] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveDiskPartitionInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "devicePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionInfo"));
        oper.setReturnClass(com.vmware.vim.HostDiskPartitionInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[214] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ComputeDiskPartitionInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "devicePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "layout"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionLayout"), com.vmware.vim.HostDiskPartitionLayout.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionInfo"));
        oper.setReturnClass(com.vmware.vim.HostDiskPartitionInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[215] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateDiskPartitions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "devicePath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionSpec"), com.vmware.vim.HostDiskPartitionSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[216] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("FormatVmfs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "createSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostVmfsSpec"), com.vmware.vim.HostVmfsSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "HostVmfsVolume"));
        oper.setReturnClass(com.vmware.vim.HostVmfsVolume.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExistsFault"),
                      "com.vmware.vim.AlreadyExists",
                      new javax.xml.namespace.QName("urn:vim2", "AlreadyExists"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[217] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RescanVmfs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[218] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AttachVmfsExtent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vmfsPath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "extent"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostScsiDiskPartition"), com.vmware.vim.HostScsiDiskPartition.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[219] = oper;

    }

    private static void _initOperationDesc23(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpgradeVmfs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "vmfsPath"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[220] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpgradeVmLayout");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[221] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RescanHba");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "hbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[222] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RescanAllHba");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[223] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateSoftwareInternetScsiEnabled");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "enabled"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[224] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateInternetScsiDiscoveryProperties");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "discoveryProperties"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaDiscoveryProperties"), com.vmware.vim.HostInternetScsiHbaDiscoveryProperties.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[225] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateInternetScsiAuthenticationProperties");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "authenticationProperties"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaAuthenticationProperties"), com.vmware.vim.HostInternetScsiHbaAuthenticationProperties.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[226] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateInternetScsiIPProperties");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "ipProperties"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaIPProperties"), com.vmware.vim.HostInternetScsiHbaIPProperties.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[227] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateInternetScsiName");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[228] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateInternetScsiAlias");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiAlias"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[229] = oper;

    }

    private static void _initOperationDesc24(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddInternetScsiSendTargets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "targets"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaSendTarget"), com.vmware.vim.HostInternetScsiHbaSendTarget[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[230] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveInternetScsiSendTargets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "targets"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaSendTarget"), com.vmware.vim.HostInternetScsiHbaSendTarget[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[231] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AddInternetScsiStaticTargets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "targets"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaStaticTarget"), com.vmware.vim.HostInternetScsiHbaStaticTarget[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[232] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveInternetScsiStaticTargets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "iScsiHbaDevice"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "targets"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaStaticTarget"), com.vmware.vim.HostInternetScsiHbaStaticTarget[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[233] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("EnableMultipathPath");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pathName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[234] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DisableMultipathPath");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "pathName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[235] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SetMultipathLunPolicy");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "lunId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "policy"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfoLogicalUnitPolicy"), com.vmware.vim.HostMultipathInfoLogicalUnitPolicy.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[236] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RefreshStorageSystem");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[237] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateIpConfig");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "ipConfig"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "HostIpConfig"), com.vmware.vim.HostIpConfig.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "NotFoundFault"),
                      "com.vmware.vim.NotFound",
                      new javax.xml.namespace.QName("urn:vim2", "NotFound"), 
                      true
                     ));
        _operations[238] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("SelectVnic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "device"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[239] = oper;

    }

    private static void _initOperationDesc25(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DeselectVnic");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFaultFault"),
                      "com.vmware.vim.HostConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "HostConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[240] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("QueryOptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "OptionValue"));
        oper.setReturnClass(com.vmware.vim.OptionValue[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[241] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("UpdateOptions");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "changedValue"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "OptionValue"), com.vmware.vim.OptionValue[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[242] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[243] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ReconfigureScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskSpec"), com.vmware.vim.ScheduledTaskSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[244] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RunScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[245] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskSpec"), com.vmware.vim.ScheduledTaskSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateNameFault"),
                      "com.vmware.vim.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim2", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[246] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveEntityScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "entity"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[247] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RevertToSnapshot_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "host"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFaultFault"),
                      "com.vmware.vim.VmConfigFault",
                      new javax.xml.namespace.QName("urn:vim2", "VmConfigFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "FileFaultFault"),
                      "com.vmware.vim.FileFault",
                      new javax.xml.namespace.QName("urn:vim2", "FileFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidStateFault"),
                      "com.vmware.vim.InvalidState",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFaultFault"),
                      "com.vmware.vim.InsufficientResourcesFault",
                      new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[248] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RemoveSnapshot_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "removeChildren"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.vim.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:vim2", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgressFault"),
                      "com.vmware.vim.TaskInProgress",
                      new javax.xml.namespace.QName("urn:vim2", "TaskInProgress"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[249] = oper;

    }

    private static void _initOperationDesc26(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RenameSnapshot");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference"), com.vmware.vim.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "name"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim2", "description"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "InvalidNameFault"),
                      "com.vmware.vim.InvalidName",
                      new javax.xml.namespace.QName("urn:vim2", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFaultFault"),
                      "com.vmware.vim.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim2", "RuntimeFault"), 
                      true
                     ));
        _operations[250] = oper;

    }

    public VimBindingStub() throws org.apache.axis.AxisFault {
         this(null);
    }

    public VimBindingStub(java.net.URL endpointURL, javax.xml.rpc.Service service) throws org.apache.axis.AxisFault {
         this(service);
         super.cachedEndpoint = endpointURL;
    }

    public VimBindingStub(javax.xml.rpc.Service service) throws org.apache.axis.AxisFault {
        if (service == null) {
            super.service = new org.apache.axis.client.Service();
        } else {
            super.service = service;
        }
        ((org.apache.axis.client.Service)super.service).setTypeMappingVersion("1.2");
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
        addBindings0();
        addBindings1();
        addBindings2();
        addBindings3();
        addBindings4();
        addBindings5();
        addBindings6();
        addBindings7();
        addBindings8();
        addBindings9();
        addBindings10();
        addBindings11();
        addBindings12();
        addBindings13();
        addBindings14();
        addBindings15();
        addBindings16();
    }

    private void addBindings0() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">AcquireLocalTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AcquireLocalTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AcquireLocalTicketResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AcquireLocalTicketResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AcquireMksTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AcquireMksTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AcquireMksTicketResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AcquireMksTicketResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddAuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddAuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddAuthorizationRoleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddAuthorizationRoleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddCustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddCustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddCustomFieldDefResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddCustomFieldDefResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddInternetScsiSendTargets");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddInternetScsiSendTargets.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddInternetScsiSendTargetsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddInternetScsiSendTargetsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddInternetScsiStaticTargets");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddInternetScsiStaticTargets.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddInternetScsiStaticTargetsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddInternetScsiStaticTargetsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddPortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddPortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddPortGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddPortGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddServiceConsoleVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddServiceConsoleVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddServiceConsoleVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddServiceConsoleVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddStandaloneHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddStandaloneHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddStandaloneHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddStandaloneHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AddVirtualSwitchResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AddVirtualSwitchResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AnswerVM");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AnswerVM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AnswerVMResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AnswerVMResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ApplyRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ApplyRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ApplyRecommendationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ApplyRecommendationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AssignUserToGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AssignUserToGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AssignUserToGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AssignUserToGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AttachVmfsExtent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AttachVmfsExtent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AttachVmfsExtentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AttachVmfsExtentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AutoStartPowerOff");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartPowerOff.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AutoStartPowerOffResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartPowerOffResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AutoStartPowerOn");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartPowerOn.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">AutoStartPowerOnResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartPowerOnResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">BrowseDiagnosticLog");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.BrowseDiagnosticLog.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">BrowseDiagnosticLogResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.BrowseDiagnosticLogResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CancelTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CancelTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CancelTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CancelTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CancelWaitForUpdates");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CancelWaitForUpdates.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CancelWaitForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CancelWaitForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckCustomizationResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckCustomizationResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckCustomizationResourcesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckCustomizationResourcesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckForUpdates");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckForUpdates.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckIfMasterSnmpAgentRunning");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckIfMasterSnmpAgentRunning.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckIfMasterSnmpAgentRunningResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckIfMasterSnmpAgentRunningResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckLicenseFeature");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckLicenseFeature.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CheckLicenseFeatureResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CheckLicenseFeatureResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CloneVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CloneVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CloneVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CloneVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ComputeDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ComputeDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ComputeDiskPartitionInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ComputeDiskPartitionInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ConfigureDatastorePrincipal");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConfigureDatastorePrincipal.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ConfigureDatastorePrincipalResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConfigureDatastorePrincipalResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ConfigureLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConfigureLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ConfigureLicenseSourceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConfigureLicenseSourceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateAlarmResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateAlarmResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateClusterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateClusterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCollectorForEvents");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCollectorForEvents.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCollectorForEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCollectorForEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCollectorForTasks");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCollectorForTasks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCollectorForTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCollectorForTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateDatacenter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateDatacenter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateDatacenterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateDatacenterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateDiagnosticPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateDiagnosticPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateDiagnosticPartitionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateDiagnosticPartitionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateFilterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateFilterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateFolder");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateFolder.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateFolderResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateFolderResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateLocalDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateLocalDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateLocalDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateLocalDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateNasDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateNasDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateNasDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateNasDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreatePerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreatePerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreatePerfIntervalResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreatePerfIntervalResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateResourcePoolResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateResourcePoolResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateScheduledTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateScheduledTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateSnapshot_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateSnapshot_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateSnapshot_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateSnapshot_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateUser");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateUser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateUserResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateUserResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateVmfsDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateVmfsDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CreateVmfsDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CreateVmfsDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CurrentTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CurrentTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CurrentTimeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CurrentTimeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings1() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">CustomizationSpecItemToXml");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSpecItemToXml.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CustomizationSpecItemToXmlResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSpecItemToXmlResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CustomizeVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizeVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">CustomizeVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizeVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeleteCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeleteCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeleteCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeleteCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeleteFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeleteFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeleteFileResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeleteFileResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeselectVnic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeselectVnic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DeselectVnicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeselectVnicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Destroy_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Destroy_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Destroy_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Destroy_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyChildren");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyChildren.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyChildrenResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyChildrenResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyCollector");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyCollector.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyNetworkResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyNetworkResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyPropertyFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyPropertyFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DestroyPropertyFilterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestroyPropertyFilterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableFeature");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableFeature.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableFeatureResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableFeatureResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableHyperThreading");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableHyperThreading.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableHyperThreadingResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableHyperThreadingResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableMultipathPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableMultipathPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableMultipathPathResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableMultipathPathResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisableRulesetResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisableRulesetResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisconnectHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisconnectHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DisconnectHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisconnectHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DoesCustomizationSpecExist");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DoesCustomizationSpecExist.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DoesCustomizationSpecExistResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DoesCustomizationSpecExistResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DuplicateCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DuplicateCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">DuplicateCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DuplicateCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableFeature");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableFeature.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableFeatureResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableFeatureResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableHyperThreading");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableHyperThreading.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableHyperThreadingResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableHyperThreadingResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableMultipathPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableMultipathPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableMultipathPathResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableMultipathPathResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnableRulesetResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnableRulesetResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnterMaintenanceMode_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnterMaintenanceMode_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">EnterMaintenanceMode_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnterMaintenanceMode_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ExitMaintenanceMode_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ExitMaintenanceMode_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ExitMaintenanceMode_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ExitMaintenanceMode_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ExtendVmfsDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ExtendVmfsDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ExtendVmfsDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ExtendVmfsDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByDatastorePath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByDatastorePath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByDatastorePathResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByDatastorePathResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByDnsName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByDnsName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByDnsNameResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByDnsNameResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByInventoryPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByInventoryPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByInventoryPathResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByInventoryPathResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByIp");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByIp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByIpResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByIpResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByUuid");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByUuid.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindByUuidResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindByUuidResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindChild");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindChild.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FindChildResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FindChildResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FormatVmfs");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FormatVmfs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">FormatVmfsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FormatVmfsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GenerateLogBundles_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GenerateLogBundles_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GenerateLogBundles_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GenerateLogBundles_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetAlarmResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetAlarmResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetAlarmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetAlarmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetAlarmStateResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetAlarmStateResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">GetCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GetCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Login");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Login.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">LoginResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LoginResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Logout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Logout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">LogoutResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LogoutResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">LogUserEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LogUserEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">LogUserEventResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LogUserEventResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MarkAsTemplate");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MarkAsTemplate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MarkAsTemplateResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MarkAsTemplateResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MarkAsVirtualMachine");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MarkAsVirtualMachine.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MarkAsVirtualMachineResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MarkAsVirtualMachineResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MergePermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MergePermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MergePermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MergePermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MigrateVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrateVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MigrateVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrateVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MountToolsInstaller");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MountToolsInstaller.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MountToolsInstallerResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MountToolsInstallerResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveHostInto_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveHostInto_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveHostInto_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveHostInto_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveInto_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveInto_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveInto_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveInto_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveIntoFolder_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveIntoFolder_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveIntoFolder_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveIntoFolder_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveIntoResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveIntoResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">MoveIntoResourcePoolResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MoveIntoResourcePoolResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">OverwriteCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OverwriteCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">OverwriteCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OverwriteCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">PowerOffVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PowerOffVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">PowerOffVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PowerOffVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings2() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">PowerOnVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PowerOnVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">PowerOnVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PowerOnVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailableDisksForVmfs");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailableDisksForVmfs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailableDisksForVmfsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailableDisksForVmfsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailablePartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailablePartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailablePartitionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailablePartitionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailablePerfMetric");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailablePerfMetric.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryAvailablePerfMetricResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryAvailablePerfMetricResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigOptionDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigOptionDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigOptionDescriptorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigOptionDescriptorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigOptionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigOptionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConfigTargetResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConfigTargetResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConnectionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConnectionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryConnectionInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryConnectionInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryDescriptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryDescriptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryDescriptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryDescriptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryEvents");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryEvents.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryHostConnectionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryHostConnectionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryHostConnectionInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryHostConnectionInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryLicenseSourceAvailability");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryLicenseSourceAvailability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryLicenseSourceAvailabilityResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryLicenseSourceAvailabilityResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryLicenseUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryLicenseUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryLicenseUsageResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryLicenseUsageResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryMemoryOverhead");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryMemoryOverhead.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryMemoryOverheadResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryMemoryOverheadResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryNetworkHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryNetworkHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryNetworkHintResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryNetworkHintResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryOptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryOptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPartitionCreateDesc");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPartitionCreateDesc.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPartitionCreateDescResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPartitionCreateDescResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPartitionCreateOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPartitionCreateOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPartitionCreateOptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPartitionCreateOptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerf");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerf.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfComposite");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfComposite.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfCompositeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfCompositeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfCounter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfCounter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfCounterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfCounterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfProviderSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfProviderSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfProviderSummaryResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfProviderSummaryResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryPerfResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryPerfResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVmfsDatastoreCreateOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVmfsDatastoreCreateOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVmfsDatastoreCreateOptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVmfsDatastoreCreateOptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVmfsDatastoreExtendOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVmfsDatastoreExtendOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVmfsDatastoreExtendOptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVmfsDatastoreExtendOptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVMotionCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVMotionCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">QueryVMotionCompatibilityResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.QueryVMotionCompatibilityResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadNextEvents");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadNextEvents.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadNextEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadNextEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadNextTasks");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadNextTasks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadNextTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadNextTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadPreviousEvents");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadPreviousEvents.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadPreviousEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadPreviousEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadPreviousTasks");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadPreviousTasks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReadPreviousTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadPreviousTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RebootGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RebootGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RebootGuestResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RebootGuestResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RebootHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RebootHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RebootHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RebootHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RecommendHostsForVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RecommendHostsForVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RecommendHostsForVmResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RecommendHostsForVmResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureAlarmResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureAlarmResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureAutostart");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureAutostart.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureAutostartResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureAutostartResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureCluster_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureCluster_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureCluster_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureCluster_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureHostForDAS_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureHostForDAS_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureHostForDAS_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureHostForDAS_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureScheduledTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureScheduledTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureServiceConsoleReservation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureServiceConsoleReservation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigureServiceConsoleReservationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigureServiceConsoleReservationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconfigVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconfigVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconnectHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconnectHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReconnectHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReconnectHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshFirewall");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshFirewall.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshFirewallResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshFirewallResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshNetworkSystem");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshNetworkSystem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshNetworkSystemResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshNetworkSystemResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshServices");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshServices.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshServicesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshServicesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshStorageSystem");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshStorageSystem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RefreshStorageSystemResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RefreshStorageSystemResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RegisterVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RegisterVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RegisterVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RegisterVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Reload");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Reload.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ReloadResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReloadResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RelocateVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RelocateVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RelocateVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RelocateVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAlarmResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAlarmResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAllSnapshots_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAllSnapshots_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAllSnapshots_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAllSnapshots_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings3() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveAuthorizationRoleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveAuthorizationRoleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveCustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveCustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveCustomFieldDefResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveCustomFieldDefResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveEntityPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveEntityPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveEntityPermissionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveEntityPermissionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveInternetScsiSendTargets");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveInternetScsiSendTargets.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveInternetScsiSendTargetsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveInternetScsiSendTargetsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveInternetScsiStaticTargets");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveInternetScsiStaticTargets.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveInternetScsiStaticTargetsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveInternetScsiStaticTargetsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemovePerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemovePerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemovePerfIntervalResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemovePerfIntervalResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemovePortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemovePortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemovePortGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemovePortGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveScheduledTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveScheduledTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveServiceConsoleVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveServiceConsoleVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveServiceConsoleVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveServiceConsoleVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveSnapshot_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveSnapshot_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveSnapshot_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveSnapshot_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveUser");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveUser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveUserResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveUserResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RemoveVirtualSwitchResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveVirtualSwitchResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Rename_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Rename_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">Rename_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Rename_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameCustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameCustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameCustomFieldDefResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameCustomFieldDefResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameCustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameCustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameCustomizationSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameCustomizationSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameDatastoreResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameDatastoreResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameSnapshot");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameSnapshot.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RenameSnapshotResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RenameSnapshotResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanAllHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanAllHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanAllHbaResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanAllHbaResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanHbaResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanHbaResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanVmfs");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanVmfs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RescanVmfsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RescanVmfsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetCollector");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetCollector.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetEntityPermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetEntityPermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetEntityPermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetEntityPermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetGuestInformation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetGuestInformation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetGuestInformationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetGuestInformationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ResetVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResetVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartMasterSnmpAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartMasterSnmpAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartMasterSnmpAgentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartMasterSnmpAgentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartServiceConsoleVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartServiceConsoleVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartServiceConsoleVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartServiceConsoleVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RestartServiceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RestartServiceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveAllPermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveAllPermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveAllPermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveAllPermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveDiskPartitionInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveDiskPartitionInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveEntityPermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveEntityPermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveEntityPermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveEntityPermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveEntityScheduledTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveEntityScheduledTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveEntityScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveEntityScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrievePropertiesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrievePropertiesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveRolePermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveRolePermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveRolePermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveRolePermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveServiceContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveServiceContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveServiceContentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveServiceContentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveUserGroups");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveUserGroups.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RetrieveUserGroupsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RetrieveUserGroupsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RevertToCurrentSnapshot_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RevertToCurrentSnapshot_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RevertToCurrentSnapshot_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RevertToCurrentSnapshot_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RevertToSnapshot_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RevertToSnapshot_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RevertToSnapshot_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RevertToSnapshot_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RewindCollector");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RewindCollector.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RewindCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RewindCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RunScheduledTask");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RunScheduledTask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">RunScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RunScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SearchDatastore_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SearchDatastore_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SearchDatastore_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SearchDatastore_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SearchDatastoreSubFolders_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SearchDatastoreSubFolders_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SearchDatastoreSubFolders_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SearchDatastoreSubFolders_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SelectActivePartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SelectActivePartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SelectActivePartitionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SelectActivePartitionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SelectVnic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SelectVnic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SelectVnicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SelectVnicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetCollectorPageSize");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetCollectorPageSize.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetCollectorPageSizeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetCollectorPageSizeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetEntityPermissions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetEntityPermissions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetEntityPermissionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetEntityPermissionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetField");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetField.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetFieldResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetFieldResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetLicenseEdition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetLicenseEdition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetLicenseEditionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetLicenseEditionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings4() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">SetLocale");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetLocale.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetLocaleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetLocaleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetMultipathLunPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetMultipathLunPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetMultipathLunPolicyResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetMultipathLunPolicyResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetScreenResolution");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetScreenResolution.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SetScreenResolutionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SetScreenResolutionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ShutdownGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ShutdownGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ShutdownGuestResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ShutdownGuestResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ShutdownHost_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ShutdownHost_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ShutdownHost_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ShutdownHost_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StandbyGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StandbyGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StandbyGuestResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StandbyGuestResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StartService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StartService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StartServiceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StartServiceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StopMasterSnmpAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StopMasterSnmpAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StopMasterSnmpAgentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StopMasterSnmpAgentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StopService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StopService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">StopServiceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StopServiceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SuspendVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SuspendVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">SuspendVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SuspendVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">TerminateSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TerminateSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">TerminateSessionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TerminateSessionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnassignUserFromGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnassignUserFromGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnassignUserFromGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnassignUserFromGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UninstallService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UninstallService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UninstallServiceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UninstallServiceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnmountToolsInstaller");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnmountToolsInstaller.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnmountToolsInstallerResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnmountToolsInstallerResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnregisterAndDestroy_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnregisterAndDestroy_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnregisterAndDestroy_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnregisterAndDestroy_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnregisterVM");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnregisterVM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UnregisterVMResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnregisterVMResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateAuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateAuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateAuthorizationRoleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateAuthorizationRoleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateChildResourceConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateChildResourceConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateChildResourceConfigurationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateChildResourceConfigurationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateConsoleIpRouteConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateConsoleIpRouteConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateConsoleIpRouteConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateConsoleIpRouteConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDefaultPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDefaultPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDefaultPolicyResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDefaultPolicyResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDiskPartitions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDiskPartitions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDiskPartitionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDiskPartitionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDnsConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDnsConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateDnsConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateDnsConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiAlias");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiAlias.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiAliasResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiAliasResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiAuthenticationProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiAuthenticationProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiAuthenticationPropertiesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiAuthenticationPropertiesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiDiscoveryProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiDiscoveryProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiDiscoveryPropertiesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiDiscoveryPropertiesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiIPProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiIPProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiIPPropertiesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiIPPropertiesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateInternetScsiNameResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateInternetScsiNameResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateIpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateIpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateIpConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateIpConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateIpRouteConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateIpRouteConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateIpRouteConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateIpRouteConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateNetworkConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateNetworkConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateNetworkConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateNetworkConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateOptionsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateOptionsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePerfIntervalResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePerfIntervalResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePhysicalNicLinkSpeed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePhysicalNicLinkSpeed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePhysicalNicLinkSpeedResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePhysicalNicLinkSpeedResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdatePortGroupResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdatePortGroupResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServiceConsoleVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServiceConsoleVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServiceConsoleVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServiceConsoleVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServiceMessage");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServiceMessage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServiceMessageResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServiceMessageResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServicePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServicePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateServicePolicyResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateServicePolicyResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSnmpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSnmpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSnmpConfigResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSnmpConfigResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSoftwareInternetScsiEnabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSoftwareInternetScsiEnabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSoftwareInternetScsiEnabledResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSoftwareInternetScsiEnabledResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSystemResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSystemResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateSystemResourcesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSystemResourcesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateUser");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateUser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateUserResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateUserResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateVirtualNicResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateVirtualNicResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpdateVirtualSwitchResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateVirtualSwitchResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeTools_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeTools_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeTools_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeTools_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVM_Task");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVM_Task.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVM_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVM_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVmfs");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVmfs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVmfsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVmfsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVmLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVmLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">UpgradeVmLayoutResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeVmLayoutResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ValidateMigration");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ValidateMigration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">ValidateMigrationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ValidateMigrationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">WaitForUpdates");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WaitForUpdates.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">WaitForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WaitForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings5() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", ">XmlToCustomizationSpecItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.XmlToCustomizationSpecItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", ">XmlToCustomizationSpecItemResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.XmlToCustomizationSpecItemResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AboutInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AboutInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AccountCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AccountCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AccountRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AccountRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AccountUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AccountUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Action");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Action.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ActionParameter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ActionParameter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AffinityConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AffinityConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AffinityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AffinityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AfterStartupTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AfterStartupTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AgentInstallFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AgentInstallFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmActionTriggeredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmActionTriggeredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmEmailCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmEmailCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmEmailFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmEmailFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmScriptCompleteEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmScriptCompleteEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmScriptFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmScriptFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmSnmpCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmSnmpCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmSnmpFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmSnmpFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlarmTriggeringAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlarmTriggeringAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlreadyAuthenticatedSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlreadyAuthenticatedSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlreadyBeingManaged");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlreadyBeingManaged.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlreadyConnected");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlreadyConnected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AlreadyUpgraded");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AlreadyUpgraded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AndAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AndAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ApplicationQuiesceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ApplicationQuiesceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAlarmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAlarmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAnyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAnyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAuthorizationPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAuthorizationPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfAutoStartPowerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfAutoStartPowerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfByte");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfByte.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDasVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDasVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDasVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDasVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDrsMigration");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDrsMigration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDrsRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDrsRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterHostRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterHostRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterRuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterRuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfClusterRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfClusterRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfCustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfCustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfCustomFieldValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfCustomFieldValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfCustomizationAdapterMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfCustomizationAdapterMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfCustomizationSpecInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfCustomizationSpecInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfDatacenterMismatchArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfDatacenterMismatchArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfDatastoreHostMount");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfDatastoreHostMount.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfDiagnosticManagerBundleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfDiagnosticManagerBundleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfDiagnosticManagerLogDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfDiagnosticManagerLogDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfDynamicProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfDynamicProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfElementDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfElementDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfEventDescriptionEventDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfEventDescriptionEventDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfGuestDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfGuestDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfGuestNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfGuestNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfGuestOsDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfGuestOsDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostConnectInfoNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostConnectInfoNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostCpuIdInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostCpuIdInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostCpuPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostCpuPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDatastoreBrowserSearchResults");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDatastoreBrowserSearchResults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDatastoreConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDatastoreConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiagnosticPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiagnosticPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiagnosticPartitionCreateOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiagnosticPartitionCreateOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiskMappingPartitionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiskMappingPartitionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiskPartitionAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiskPartitionAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiskPartitionBlockRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiskPartitionBlockRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostFileSystemMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostFileSystemMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostFirewallRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostFirewallRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostFirewallRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostFirewallRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostHostBusAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostHostBusAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostInternetScsiHbaSendTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostInternetScsiHbaSendTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostInternetScsiHbaStaticTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostInternetScsiHbaStaticTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostMultipathInfoLogicalUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostMultipathInfoLogicalUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostMultipathInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostMultipathInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostNumaNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostNumaNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostPciDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostPciDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostPortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostPortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostPortGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostPortGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostPortGroupPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostPortGroupPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostScsiDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostScsiDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostScsiDiskPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostScsiDiskPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings6() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostScsiTopologyInterface");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostScsiTopologyInterface.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostScsiTopologyLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostScsiTopologyLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostScsiTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostScsiTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostSystemResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostSystemResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVirtualNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVirtualNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVirtualSwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVirtualSwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVMotionCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVMotionCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfHostVMotionManagerReparentSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfHostVMotionManagerReparentSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfInt");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfInt.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfLicenseAvailabilityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfLicenseAvailabilityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfLicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfLicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfLicenseReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfLicenseReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfLong");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfLong.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfManagedObjectReference");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfManagedObjectReference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfMethodActionArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfMethodActionArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfMissingObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfMissingObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfMissingProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfMissingProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfObjectContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfObjectContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfObjectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfObjectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfObjectUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfObjectUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfOptionDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfOptionDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfOptionValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfOptionValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfCounterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfCounterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfEntityMetricBase");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfEntityMetricBase.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfEntityMetricCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfEntityMetricCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfMetricId");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfMetricId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfMetricSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfMetricSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfMetricSeriesCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfMetricSeriesCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfQuerySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfQuerySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPerfSampleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPerfSampleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNicHintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNicHintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNicIpHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNicIpHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNicLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNicLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPhysicalNicNameHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPhysicalNicNameHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPropertyChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPropertyChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPropertyFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPropertyFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPropertyFilterUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPropertyFilterUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfPropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfPropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfScheduledTaskDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfScheduledTaskDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfScsiLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfScsiLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfSelectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfSelectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfShort");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfShort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfString");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfString.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfTaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfTaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfTypeDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfTypeDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfUserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfUserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfUserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfUserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualDeviceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualDeviceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineCdromInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineCdromInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineConfigInfoDatastoreUrlPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineConfigInfoDatastoreUrlPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineConfigOptionDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineConfigOptionDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineCpuIdInfoSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineCpuIdInfoSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineDatastoreVolumeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineDatastoreVolumeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineFileLayoutDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineFileLayoutDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineFileLayoutSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineFileLayoutSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineFloppyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineFloppyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineIdeDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineIdeDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineIdeDiskDevicePartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineIdeDiskDevicePartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineLegacyNetworkSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineLegacyNetworkSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineParallelInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineParallelInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineRelocateSpecDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineRelocateSpecDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineScsiDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineScsiDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineScsiPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineScsiPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineSerialInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineSerialInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineSnapshotTree");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineSnapshotTree.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualMachineSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualMachineSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVirtualSCSISharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVirtualSCSISharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayOfVmfsDatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayOfVmfsDatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayUpdateOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayUpdateOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ArrayUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ArrayUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AuthMinimumAdminPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AuthMinimumAdminPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AuthorizationDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AuthorizationDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AuthorizationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AuthorizationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AuthorizationPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AuthorizationPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AutoStartAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AutoStartDefaults");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartDefaults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AutoStartPowerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartPowerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "AutoStartWaitHeartbeatSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.AutoStartWaitHeartbeatSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "BadUsernameSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.BadUsernameSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "BoolOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.BoolOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CanceledHostOperationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CanceledHostOperationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessLocalSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessLocalSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessVmComponent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessVmComponent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings7() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessVmConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessVmConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessVmDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessVmDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotAccessVmDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotAccessVmDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotDecryptPasswords");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotDecryptPasswords.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotDeleteFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotDeleteFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CannotModifyConfigCpuRequirements");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CannotModifyConfigCpuRequirements.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Capability");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Capability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ChoiceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ChoiceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterAffinityRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterAffinityRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterAntiAffinityRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterAntiAffinityRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterComputeResourceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterComputeResourceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDasConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDasConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDasVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDasVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDasVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDasVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDrsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDrsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDrsMigration");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDrsMigration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDrsRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDrsRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterHostRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterHostRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterOvercommittedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterOvercommittedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterRuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterRuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ClusterStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ClusterStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ComputeResourceEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ComputeResourceEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ComputeResourceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ComputeResourceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ConcurrentAccess");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConcurrentAccess.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ConfigTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ConfigTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CpuCompatibilityUnknown");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CpuCompatibilityUnknown.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CpuIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CpuIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldDefAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldDefAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldDefEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldDefEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldDefRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldDefRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldDefRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldDefRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldStringValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldStringValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomFieldValueChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomFieldValueChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationAdapterMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationAdapterMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationCustomIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationCustomIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationCustomName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationCustomName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationDhcpIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationDhcpIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationFixedIp");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationFixedIp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationFixedName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationFixedName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationGlobalIPSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationGlobalIPSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationGuiRunOnce");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationGuiRunOnce.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationGuiUnattended");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationGuiUnattended.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationIdentification");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationIdentification.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationIdentitySettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationIdentitySettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationIPSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationIPSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationLicenseDataMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationLicenseDataMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationLicenseFilePrintData");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationLicenseFilePrintData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationLinuxOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationLinuxOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationLinuxPrep");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationLinuxPrep.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationNetBIOSMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationNetBIOSMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationPassword");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationPassword.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationPrefixName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationPrefixName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSpecInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSpecItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationSysprep");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSysprep.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationSysprepText");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationSysprepText.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationUnknownIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationUnknownIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationUnknownName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationUnknownName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationUserData");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationUserData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationVirtualMachineName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationVirtualMachineName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "CustomizationWinOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.CustomizationWinOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DailyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DailyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasAdmissionControlDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasAdmissionControlDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasAdmissionControlEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasAdmissionControlEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasAgentFoundEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasAgentFoundEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasAgentUnavailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasAgentUnavailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasHostFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasHostFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasHostIsolatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasHostIsolatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DasVmPriority");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DasVmPriority.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatabaseError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatabaseError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatacenterEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatacenterEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatacenterMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatacenterMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatacenterMismatchArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatacenterMismatchArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreDiscoveredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreDiscoveredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreDuplicatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreDuplicatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreHostMount");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreHostMount.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings8() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreNotWritableOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreNotWritableOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastorePrincipalConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastorePrincipalConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreRemovedOnHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreRemovedOnHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreRenamedOnHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreRenamedOnHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DatastoreSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DatastoreSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DayOfWeek");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DayOfWeek.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Description");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Description.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DestinationSwitchFull");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DestinationSwitchFull.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DeviceNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeviceNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DeviceNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DeviceNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerBundleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticManagerBundleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogCreator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticManagerLogCreator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticManagerLogDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticManagerLogFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticManagerLogHeader");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticManagerLogHeader.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticPartitionStorageType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticPartitionStorageType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiagnosticPartitionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiagnosticPartitionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DisallowedDiskModeChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisallowedDiskModeChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DisallowedMigrationDeviceAttached");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DisallowedMigrationDeviceAttached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsBehavior");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsBehavior.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsRecommendationReasonCode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsRecommendationReasonCode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsResourceConfigureFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsResourceConfigureFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsResourceConfigureSyncedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsResourceConfigureSyncedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DrsVmMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DrsVmMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DuplicateName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DuplicateName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DynamicArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DynamicArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DynamicData");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DynamicData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "DynamicProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.DynamicProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ElementDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ElementDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EnteredMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnteredMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EnteringMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EnteringMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EntityEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EntityEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ErrorUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ErrorUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Event");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Event.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventCategory");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventCategory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventDescriptionEventDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventDescriptionEventDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventFilterSpecByEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventFilterSpecByEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "EventFilterSpecRecursionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.EventFilterSpecRecursionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ExitMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ExitMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FailoverLevelRestored");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FailoverLevelRestored.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FibreChannelPortType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FibreChannelPortType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileAlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileAlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileLocked");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileLocked.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileNotWritable");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileNotWritable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FilesystemQuiesceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FilesystemQuiesceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FloatOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FloatOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FloppyImageFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FloppyImageFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FloppyImageFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FloppyImageFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FolderEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FolderEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FolderFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FolderFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "FolderFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.FolderFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralHostErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralHostErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralHostInfoEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralHostInfoEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralHostWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralHostWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralUserEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralUserEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralVmErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralVmErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralVmInfoEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralVmInfoEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GeneralVmWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GeneralVmWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GenericVmConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GenericVmConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GlobalMessageChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GlobalMessageChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GroupAlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GroupAlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GuestDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GuestDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GuestInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GuestInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GuestNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GuestNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GuestOsDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GuestOsDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "GuestScreenInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.GuestScreenInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostAccountSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostAccountSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostAddFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostAddFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostAutoStartManagerConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostAutoStartManagerConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostBlockAdapterTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostBlockAdapterTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostBlockHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostBlockHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedAccountFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedAccountFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedAlreadyManagedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedAlreadyManagedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedBadCcagentEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedBadCcagentEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedBadUsernameEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedBadUsernameEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedBadVersionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedBadVersionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedCcagentUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedCcagentUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedNetworkErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedNetworkErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedNoAccessEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedNoAccessEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedNoConnectionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedNoConnectionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings9() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedNoLicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedNoLicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedNotFoundEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedNotFoundEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCnxFailedTimeoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCnxFailedTimeoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCommunication");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCommunication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigChangeMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigChangeMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigChangeOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigChangeOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigManager");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigManager.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConfigSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConfigSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectInfoNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectInfoNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectionLostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectionLostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostConnectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostConnectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCpuIdInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCpuIdInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCpuInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCpuInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCpuPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCpuPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostCpuPackageVendor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostCpuPackageVendor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasDisablingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasDisablingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasEnablingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasEnablingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDasOkEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDasOkEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDatastoreBrowserSearchResults");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDatastoreBrowserSearchResults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDatastoreBrowserSearchSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDatastoreBrowserSearchSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDatastoreConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDatastoreConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDatastoreExistsConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDatastoreExistsConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDatastoreNameConflictConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDatastoreNameConflictConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiagnosticPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiagnosticPartitionCreateDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiagnosticPartitionCreateOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiagnosticPartitionCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiagnosticPartitionCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskDimensions");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskDimensions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskDimensionsChs");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskDimensionsChs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskDimensionsLba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskDimensionsLba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskMappingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskMappingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskMappingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskMappingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskMappingPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskMappingPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskMappingPartitionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskMappingPartitionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionBlockRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionBlockRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionInfoType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionInfoType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDiskPartitionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDiskPartitionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostDnsConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostDnsConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFibreChannelHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFibreChannelHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFibreChannelTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFibreChannelTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFileAccess");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFileAccess.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFileSystemMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFileSystemMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFileSystemVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFileSystemVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFileSystemVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFileSystemVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallDefaultPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallDefaultPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallRuleDirection");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallRuleDirection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallRuleProtocol");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallRuleProtocol.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostFirewallRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostFirewallRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostHardwareInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostHardwareInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostHardwareSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostHardwareSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostHostBusAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostHostBusAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostHyperThreadScheduleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostHyperThreadScheduleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaAuthenticationCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaAuthenticationCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaAuthenticationProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaAuthenticationProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaDiscoveryCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaDiscoveryCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaDiscoveryProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaDiscoveryProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaIPCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaIPCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaIPProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaIPProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaSendTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaSendTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiHbaStaticTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiHbaStaticTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostInternetScsiTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostInternetScsiTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostIpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostIpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostIpRouteConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostIpRouteConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostListSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostListSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostListSummaryQuickStats");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostListSummaryQuickStats.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostLocalFileSystemVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostLocalFileSystemVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostLocalFileSystemVolumeSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostLocalFileSystemVolumeSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMountMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMountMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMultipathInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfoFixedLogicalUnitPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMultipathInfoFixedLogicalUnitPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfoLogicalUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMultipathInfoLogicalUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfoLogicalUnitPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMultipathInfoLogicalUnitPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostMultipathInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostMultipathInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNasVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNasVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNasVolumeSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNasVolumeSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetOffloadCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetOffloadCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkConfigResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkConfigResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings10() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkSecurityPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkSecurityPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNetworkTrafficShapingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNetworkTrafficShapingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNewNetworkConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNewNetworkConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNicFailureCriteria");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNicFailureCriteria.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNicOrderPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNicOrderPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNicTeamingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNicTeamingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNotConnected");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNotConnected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNotReachable");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNotReachable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNumaInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNumaInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostNumaNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostNumaNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostParallelScsiHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostParallelScsiHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostParallelScsiTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostParallelScsiTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPciDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPciDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPortGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPortGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPortGroupPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPortGroupPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPortGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPortGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostPosixAccountSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostPosixAccountSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostReconnectionFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostReconnectionFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiDiskPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiDiskPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiTopology");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiTopology.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiTopologyInterface");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiTopologyInterface.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiTopologyLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiTopologyLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostScsiTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostScsiTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostService");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostServicePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostServicePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostServiceTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostServiceTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostShutdownEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostShutdownEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostSnmpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostSnmpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostStorageDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostStorageDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostSystemConnectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostSystemConnectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostSystemInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostSystemInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostSystemResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostSystemResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualNicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualNicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchAutoBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchAutoBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchBeaconConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchBeaconConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchBondBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchBondBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchSimpleBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchSimpleBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVirtualSwitchSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVirtualSwitchSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVmfsSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVmfsSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVmfsVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVmfsVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionManagerDestinationState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionManagerDestinationState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionManagerReparentSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionManagerReparentSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionManagerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionManagerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HostVMotionNetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HostVMotionNetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "HourlyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.HourlyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IDEDiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IDEDiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InaccessibleDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InaccessibleDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IncompatibleSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IncompatibleSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IncorrectFileType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IncorrectFileType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InfoUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InfoUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientCpuResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientCpuResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientFailoverResourcesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientFailoverResourcesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientFailoverResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientFailoverResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientHostCapacityFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientHostCapacityFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientMemoryResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientMemoryResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InsufficientResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InsufficientResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InternetScsiSnsDiscoveryMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InternetScsiSnsDiscoveryMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IntOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IntOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidCollectorVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidCollectorVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDatastorePath");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDatastorePath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDeviceBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDeviceBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDeviceOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDeviceOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDeviceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDeviceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidDiskFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidDiskFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidFolder");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidFolder.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidLocale");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidLocale.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidLogin");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidLogin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidPowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidPowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidResourcePoolStructureFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidResourcePoolStructureFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidSnapshotFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidSnapshotFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "InvalidVmConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.InvalidVmConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IpHostnameGeneratorError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IpHostnameGeneratorError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "IsoImageFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IsoImageFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings11() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "IsoImageFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.IsoImageFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LegacyNetworkInterfaceInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LegacyNetworkInterfaceInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseAvailabilityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseAvailabilityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseFeatureInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseFeatureInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseFeatureInfoUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseFeatureInfoUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseManagerLicenseKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseManagerLicenseKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseReservationInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseReservationInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseServerAvailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseServerAvailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseServerSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseServerSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseServerUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseServerUnavailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseServerUnavailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LicenseUsageInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LicenseUsageInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LinuxVolumeNotClean");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LinuxVolumeNotClean.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LocalDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LocalDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LocalDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LocalDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LocalizedMethodFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LocalizedMethodFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LocalLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LocalLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LogBundlingFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LogBundlingFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "LongOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.LongOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ManagedEntityEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ManagedEntityEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ManagedEntityStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ManagedEntityStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ManagedObjectNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ManagedObjectNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ManagedObjectReference");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ManagedObjectReference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(org.apache.axis.encoding.ser.BaseSerializerFactory.createFactory(org.apache.axis.encoding.ser.SimpleSerializerFactory.class, cls, qName));
            cachedDeserFactories.add(org.apache.axis.encoding.ser.BaseDeserializerFactory.createFactory(org.apache.axis.encoding.ser.SimpleDeserializerFactory.class, cls, qName));

            qName = new javax.xml.namespace.QName("urn:vim2", "MemorySnapshotOnIndependentDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MemorySnapshotOnIndependentDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MethodAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MethodAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MethodActionArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MethodActionArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MethodDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MethodDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MethodFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MethodFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MethodNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MethodNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MetricAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MetricAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MetricAlarmOperator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MetricAlarmOperator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationHostErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationHostErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationHostWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationHostWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationResourceErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationResourceErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationResourceWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationResourceWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MigrationWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MigrationWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MismatchedNetworkPolicies");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MismatchedNetworkPolicies.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MismatchedVMotionNetworkNames");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MismatchedVMotionNetworkNames.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MissingController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MissingController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MissingLinuxCustResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MissingLinuxCustResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MissingObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MissingObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MissingProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MissingProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MissingWindowsCustResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MissingWindowsCustResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ModeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ModeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MonthlyByDayTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MonthlyByDayTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MonthlyByWeekdayTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MonthlyByWeekdayTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MonthlyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MonthlyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MountError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MountError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MultipathState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MultipathState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "MultipleSnapshotsNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.MultipleSnapshotsNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NASDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NASDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NasDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NasDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NetworkCopyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NetworkCopyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NetworkSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NetworkSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoAccessUserEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoAccessUserEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoActiveHostInCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoActiveHostInCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoDiskFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoDiskFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoDiskSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoDiskSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoDisksToCustomize");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoDisksToCustomize.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoGateway");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoGateway.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoGuestHeartbeat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoGuestHeartbeat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoLicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoLicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoMaintenanceModeDrsRecommendationForVM");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoMaintenanceModeDrsRecommendationForVM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoPermissionOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoPermissionOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotEnoughCpus");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotEnoughCpus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotEnoughLicenses");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotEnoughLicenses.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotEnoughLogicalCpus");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotEnoughLogicalCpus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotEnoughResourcesToStartVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotEnoughResourcesToStartVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotImplemented");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotImplemented.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NotSupportedHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NotSupportedHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NoVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NoVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "NumVirtualCpusNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.NumVirtualCpusNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ObjectContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ObjectContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ObjectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ObjectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ObjectUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ObjectUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ObjectUpdateKind");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ObjectUpdateKind.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OnceTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OnceTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OptionDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OptionDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OptionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OptionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OptionValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OptionValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OrAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OrAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "OutOfBounds");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.OutOfBounds.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfCompositeMetric");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfCompositeMetric.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfCounterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfCounterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfEntityMetric");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfEntityMetric.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfEntityMetricBase");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfEntityMetricBase.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfEntityMetricCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfEntityMetricCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings12() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "PerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfMetricId");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfMetricId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfMetricIntSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfMetricIntSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfMetricSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfMetricSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfMetricSeriesCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfMetricSeriesCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerformanceDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerformanceDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerformanceManagerUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerformanceManagerUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfProviderSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfProviderSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfQuerySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfQuerySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfSampleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfSampleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfStatsType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfStatsType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PerfSummaryType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PerfSummaryType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Permission");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Permission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PermissionAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PermissionAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PermissionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PermissionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PermissionRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PermissionRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PermissionUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PermissionUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysCompatRDMNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysCompatRDMNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicHintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicHintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicIpHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicIpHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicNameHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicNameHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PhysicalNicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PhysicalNicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PlatformConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PlatformConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PortGroupConnecteeType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PortGroupConnecteeType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PosixUserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PosixUserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PropertyChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PropertyChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PropertyChangeOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PropertyChangeOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PropertyFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PropertyFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PropertyFilterUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PropertyFilterUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "PropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.PropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RawDiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RawDiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RDMNotPreserved");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RDMNotPreserved.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RDMNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RDMNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RDMPointsToInaccessibleDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RDMPointsToInaccessibleDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ReadOnlyDisksWithLegacyDestination");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ReadOnlyDisksWithLegacyDestination.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RecurrentTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RecurrentTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RemoteDeviceNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoteDeviceNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RemoveFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RemoveFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RequestCanceled");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RequestCanceled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourceAllocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourceAllocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourceInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourceInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolMovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolMovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolResourceUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolResourceUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourcePoolSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourcePoolSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ResourceViolatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ResourceViolatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RoleAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RoleAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RoleEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RoleEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RoleEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RoleEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RoleRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RoleRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RoleUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RoleUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RuleViolation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RuleViolation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RunScriptAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RunScriptAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "RuntimeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.RuntimeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskEmailCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskEmailCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskEmailFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskEmailFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScheduledTaskStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScheduledTaskStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScsiLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScsiLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScsiLunDurableName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScsiLunDurableName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScsiLunState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScsiLunState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ScsiLunType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ScsiLunType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SecurityError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SecurityError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SelectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SelectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SendEmailAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SendEmailAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SendSNMPAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SendSNMPAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ServerLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ServerLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ServerStartedSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ServerStartedSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ServiceConsoleReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ServiceConsoleReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ServiceContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ServiceContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SessionManagerLocalTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SessionManagerLocalTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SessionTerminatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SessionTerminatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SharedBusControllerNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SharedBusControllerNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SharesInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SharesInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SharesLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SharesLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SlpDiscoveryMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SlpDiscoveryMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SnapshotCopyNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SnapshotCopyNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SnapshotIncompatibleDeviceInVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SnapshotIncompatibleDeviceInVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings13() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "SnapshotRevertIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SnapshotRevertIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "StateAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StateAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "StateAlarmOperator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StateAlarmOperator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "StringOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.StringOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SuspendedRelocateNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SuspendedRelocateNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "SystemError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.SystemError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpecByEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpecByEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpecRecursionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpecRecursionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskFilterSpecTimeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskFilterSpecTimeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskReasonAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskReasonAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskReasonSchedule");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskReasonSchedule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskReasonSystem");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskReasonSystem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskReasonUser");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskReasonUser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateBeingUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateBeingUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateConfigFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateConfigFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateConfigFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateConfigFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TemplateUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TemplateUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "Timedout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.Timedout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TimedOutHostOperationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TimedOutHostOperationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ToolsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ToolsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ToolsUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ToolsUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TooManyDevices");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TooManyDevices.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TooManyHosts");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TooManyHosts.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TooManySnapshotLevels");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TooManySnapshotLevels.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TraversalSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TraversalSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "TypeDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.TypeDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UncommittedUndoableDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UncommittedUndoableDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UncustomizableGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UncustomizableGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UnexpectedCustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnexpectedCustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UnsupportedDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnsupportedDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UnsupportedGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnsupportedGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UnsupportedVmxLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UnsupportedVmxLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UpdateSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpdateSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserAssignedToGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserAssignedToGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserLoginSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserLoginSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserLogoutSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserLogoutSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserPasswordChanged");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserPasswordChanged.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserUnassignedFromGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserUnassignedFromGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "UserUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.UserUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "ValidateMigrationTestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.ValidateMigrationTestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VcAgentUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VcAgentUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VcAgentUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VcAgentUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VimFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VimFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualBusLogicController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualBusLogicController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualBusLogicControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualBusLogicControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdrom");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdrom.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromAtapiBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromAtapiBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromAtapiBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromAtapiBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromIsoBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromIsoBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromIsoBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromIsoBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromPassthroughBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromPassthroughBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromPassthroughBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromPassthroughBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromRemoteAtapiBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromRemoteAtapiBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromRemoteAtapiBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromRemoteAtapiBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromRemotePassthroughBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromRemotePassthroughBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualCdromRemotePassthroughBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualCdromRemotePassthroughBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceConfigSpecFileOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceConfigSpecFileOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceConfigSpecOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceConfigSpecOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceConnectOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceConnectOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceFileExtension");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceFileExtension.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDevicePipeBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDevicePipeBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDevicePipeBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDevicePipeBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceRemoteDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceRemoteDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDeviceRemoteDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDeviceRemoteDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskCompatibilityMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskCompatibilityMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskFlatVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskFlatVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskFlatVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskFlatVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskFlatVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskFlatVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskFlatVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskFlatVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings14() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskPartitionedRawDiskVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskPartitionedRawDiskVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskPartitionedRawDiskVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskPartitionedRawDiskVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskRawDiskMappingVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskRawDiskMappingVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskRawDiskMappingVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskRawDiskMappingVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskRawDiskVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskRawDiskVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskRawDiskVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskRawDiskVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskSparseVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskSparseVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskSparseVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskSparseVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskSparseVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskSparseVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualDiskSparseVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualDiskSparseVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualE1000");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualE1000.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualE1000Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualE1000Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEnsoniq1371");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEnsoniq1371.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEnsoniq1371Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEnsoniq1371Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardLegacyNetworkBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardLegacyNetworkBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardLegacyNetworkBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardLegacyNetworkBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardLegacyNetworkDeviceName");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardLegacyNetworkDeviceName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardMacType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardMacType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardNetworkBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardNetworkBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardNetworkBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardNetworkBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualEthernetCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualEthernetCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppy");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyImageBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyImageBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyImageBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyImageBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyRemoteDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyRemoteDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualFloppyRemoteDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualFloppyRemoteDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualHardware");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualHardware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualHardwareCompatibilityIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualHardwareCompatibilityIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualHardwareOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualHardwareOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualHardwareVersionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualHardwareVersionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualIDEController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualIDEController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualIDEControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualIDEControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualKeyboard");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualKeyboard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualKeyboardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualKeyboardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualLsiLogicController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualLsiLogicController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualLsiLogicControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualLsiLogicControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineAffinityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineAffinityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineCdromInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineCdromInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineCloneSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineCloneSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigInfoDatastoreUrlPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigInfoDatastoreUrlPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigOptionDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigOptionDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConfigSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConfigSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConnectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConnectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineConsolePreferences");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineConsolePreferences.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineCpuIdInfoSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineCpuIdInfoSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineDatastoreVolumeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineDatastoreVolumeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineDefaultPowerOpInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineDefaultPowerOpInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFileLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFileLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFileLayoutDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFileLayoutDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFileLayoutSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFileLayoutSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFlagInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFlagInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineFloppyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineFloppyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineGuestOsFamily");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineGuestOsFamily.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineGuestOsIdentifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineGuestOsIdentifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineGuestState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineGuestState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineGuestSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineGuestSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineHtSharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineHtSharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineIdeDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineIdeDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineIdeDiskDevicePartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineIdeDiskDevicePartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineLegacyNetworkSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineLegacyNetworkSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineMksTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineMksTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineMovePriority");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineMovePriority.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineNetworkShaperInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineNetworkShaperInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineParallelInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineParallelInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachinePowerOpType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachinePowerOpType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachinePowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachinePowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineQuestionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineQuestionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineQuickStats");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineQuickStats.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineRelocateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineRelocateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineRelocateSpecDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineRelocateSpecDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineRelocateTransformation");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineRelocateTransformation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineScsiDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineScsiDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineScsiPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineScsiPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineScsiPassthroughType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineScsiPassthroughType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineSerialInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineSerialInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineSnapshotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineSnapshotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineSnapshotTree");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineSnapshotTree.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineStandbyActionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineStandbyActionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineTargetInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineTargetInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineTargetInfoConfigurationTag");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineTargetInfoConfigurationTag.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineToolsStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineToolsStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualMachineVideoCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualMachineVideoCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPortDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPortDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPortDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPortDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings15() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPortFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPortFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPortFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPortFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualParallelPortOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualParallelPortOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPCIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPCIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPCIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPCIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPCNet32");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPCNet32.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPCNet32Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPCNet32Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPointingDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPointingDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPointingDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPointingDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPointingDeviceDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPointingDeviceDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPointingDeviceHostChoice");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPointingDeviceHostChoice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPointingDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPointingDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPS2Controller");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPS2Controller.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualPS2ControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualPS2ControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIPassthrough");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIPassthrough.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIPassthroughDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIPassthroughDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIPassthroughDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIPassthroughDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSIPassthroughOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSIPassthroughOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSCSISharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSCSISharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortEndPoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortEndPoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortPipeBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortPipeBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSerialPortPipeBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSerialPortPipeBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSIOController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSIOController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSIOControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSIOControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundBlaster16");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundBlaster16.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundBlaster16Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundBlaster16Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundCardDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundCardDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundCardDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundCardDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualSoundCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualSoundCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualUSB");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualUSB.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualUSBController");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualUSBController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualUSBControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualUSBControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualUSBOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualUSBOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualVideoCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualVideoCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualVmxnet");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualVmxnet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VirtualVmxnetOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VirtualVmxnetOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmAutoRenameEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmAutoRenameEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingDeployedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingDeployedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingHotMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingHotMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmBeingRelocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmBeingRelocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmCloneEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmCloneEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmCloneFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmCloneFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigFileQueryFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigFileQueryFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigFileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigFileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConfigMissingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConfigMissingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDasUpdateErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDasUpdateErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDasUpdateOkEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDasUpdateOkEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDateRolledBackEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDateRolledBackEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDeployedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDeployedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDeployFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDeployFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiscoveredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiscoveredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiskFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiskFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiskFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiskFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiskFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiskFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiskFileQueryFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiskFileQueryFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmDiskFileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmDiskFileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmEmigratingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmEmigratingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedMigrateEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedMigrateEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedRelayoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedRelayoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedRelayoutOnVmfs2DatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedRelayoutOnVmfs2DatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToPowerOffEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToPowerOffEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToPowerOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToPowerOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToRebootGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToRebootGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToResetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToResetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToShutdownGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToShutdownGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToStandbyGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToStandbyGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailedToSuspendEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailedToSuspendEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmFailoverFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmFailoverFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreAllExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreAllExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreBaseOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreBaseOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMFSDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMFSDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreExtendSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreExtendSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreMultipleExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreMultipleExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreSingleExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreSingleExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmfsDatastoreSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmfsDatastoreSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmGuestRebootEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmGuestRebootEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings16() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim2", "VmGuestShutdownEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmGuestShutdownEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmGuestStandbyEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmGuestStandbyEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmLimitLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmLimitLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmLogFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmLogFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmLogFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmLogFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmMacAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmMacAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmMacChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmMacChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmMacConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmMacConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmMessageEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmMessageEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmNoNetworkAccessEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmNoNetworkAccessEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmNvramFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmNvramFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmNvramFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmNvramFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMOnVirtualIntranet");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMOnVirtualIntranet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmOrphanedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmOrphanedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionCompatibilityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionCompatibilityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionInterfaceIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionInterfaceIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionLinkCapacityLow");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionLinkCapacityLow.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionLinkDown");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionLinkDown.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionNotConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionNotConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionNotLicensed");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionNotLicensed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VMotionProtocolIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VMotionProtocolIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmPoweredOffEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmPoweredOffEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmPoweredOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmPoweredOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmPowerOffOnIsolationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmPowerOffOnIsolationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRegisteredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRegisteredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRelayoutSuccessfulEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRelayoutSuccessfulEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRelayoutUpToDateEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRelayoutUpToDateEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRelocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRelocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRelocateFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRelocateFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRelocateSpecEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRelocateSpecEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmResettingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmResettingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmResourcePoolMovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmResourcePoolMovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmResourceReallocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmResourceReallocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmRestartedOnAlternateHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmRestartedOnAlternateHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmResumingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmResumingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmSnapshotFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmSnapshotFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmSnapshotFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmSnapshotFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmStartingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmStartingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmStaticMacConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmStaticMacConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmStoppingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmStoppingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmSuspendedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmSuspendedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmSuspendingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmSuspendingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmToolsUpgradeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmToolsUpgradeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUnsupportedStartingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUnsupportedStartingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUpgradeCompleteEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUpgradeCompleteEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUpgradingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUpgradingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUuidAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUuidAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUuidChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUuidChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VmUuidConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VmUuidConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "VolumeEditorError");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.VolumeEditorError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "WarningUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WarningUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "WeeklyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WeeklyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim2", "WeekOfMonth");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WeekOfMonth.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim2", "WillModifyConfigCpuRequirements");
            cachedSerQNames.add(qName);
            cls = com.vmware.vim.WillModifyConfigCpuRequirements.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }

    protected org.apache.axis.client.Call createCall() throws java.rmi.RemoteException {
        try {
            org.apache.axis.client.Call _call = super._createCall();
            if (super.maintainSessionSet) {
                _call.setMaintainSession(super.maintainSession);
            }
            if (super.cachedUsername != null) {
                _call.setUsername(super.cachedUsername);
            }
            if (super.cachedPassword != null) {
                _call.setPassword(super.cachedPassword);
            }
            if (super.cachedEndpoint != null) {
                _call.setTargetEndpointAddress(super.cachedEndpoint);
            }
            if (super.cachedTimeout != null) {
                _call.setTimeout(super.cachedTimeout);
            }
            if (super.cachedPortName != null) {
                _call.setPortName(super.cachedPortName);
            }
            java.util.Enumeration keys = super.cachedProperties.keys();
            while (keys.hasMoreElements()) {
                java.lang.String key = (java.lang.String) keys.nextElement();
                _call.setProperty(key, super.cachedProperties.get(key));
            }
            // All the type mapping information is registered
            // when the first call is made.
            // The type mapping information is actually registered in
            // the TypeMappingRegistry of the service, which
            // is the reason why registration is only needed for the first call.
            synchronized (this) {
                if (firstCall()) {
                    // must set encoding style before registering serializers
                    _call.setEncodingStyle(null);
                    for (int i = 0; i < cachedSerFactories.size(); ++i) {
                        java.lang.Class cls = (java.lang.Class) cachedSerClasses.get(i);
                        javax.xml.namespace.QName qName =
                                (javax.xml.namespace.QName) cachedSerQNames.get(i);
                        java.lang.Object x = cachedSerFactories.get(i);
                        if (x instanceof Class) {
                            java.lang.Class sf = (java.lang.Class)
                                 cachedSerFactories.get(i);
                            java.lang.Class df = (java.lang.Class)
                                 cachedDeserFactories.get(i);
                            _call.registerTypeMapping(cls, qName, sf, df, false);
                        }
                        else if (x instanceof javax.xml.rpc.encoding.SerializerFactory) {
                            org.apache.axis.encoding.SerializerFactory sf = (org.apache.axis.encoding.SerializerFactory)
                                 cachedSerFactories.get(i);
                            org.apache.axis.encoding.DeserializerFactory df = (org.apache.axis.encoding.DeserializerFactory)
                                 cachedDeserFactories.get(i);
                            _call.registerTypeMapping(cls, qName, sf, df, false);
                        }
                    }
                }
            }
            return _call;
        }
        catch (java.lang.Throwable _t) {
            throw new org.apache.axis.AxisFault("Failure trying to get the Call object", _t);
        }
    }

    public void destroyPropertyFilter(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[0]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DestroyPropertyFilter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createFilter(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PropertyFilterSpec spec, boolean partialUpdates) throws java.rmi.RemoteException, com.vmware.vim.InvalidProperty, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[1]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateFilter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, new java.lang.Boolean(partialUpdates)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidProperty) {
              throw (com.vmware.vim.InvalidProperty) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ObjectContent[] retrieveProperties(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PropertyFilterSpec[] specSet) throws java.rmi.RemoteException, com.vmware.vim.InvalidProperty, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[2]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveProperties"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, specSet});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ObjectContent[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ObjectContent[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ObjectContent[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidProperty) {
              throw (com.vmware.vim.InvalidProperty) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.UpdateSet checkForUpdates(com.vmware.vim.ManagedObjectReference _this, java.lang.String version) throws java.rmi.RemoteException, com.vmware.vim.InvalidCollectorVersion, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[3]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CheckForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.UpdateSet) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.UpdateSet) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.UpdateSet.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidCollectorVersion) {
              throw (com.vmware.vim.InvalidCollectorVersion) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.UpdateSet waitForUpdates(com.vmware.vim.ManagedObjectReference _this, java.lang.String version) throws java.rmi.RemoteException, com.vmware.vim.InvalidCollectorVersion, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[4]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "WaitForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.UpdateSet) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.UpdateSet) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.UpdateSet.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidCollectorVersion) {
              throw (com.vmware.vim.InvalidCollectorVersion) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void cancelWaitForUpdates(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[5]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CancelWaitForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public int addAuthorizationRole(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String[] privIds) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[6]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddAuthorizationRole"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, privIds});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Integer) _resp).intValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Integer) org.apache.axis.utils.JavaUtils.convert(_resp, int.class)).intValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeAuthorizationRole(com.vmware.vim.ManagedObjectReference _this, int roleId, boolean failIfUsed) throws java.rmi.RemoteException, com.vmware.vim.RemoveFailed, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[7]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveAuthorizationRole"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(roleId), new java.lang.Boolean(failIfUsed)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RemoveFailed) {
              throw (com.vmware.vim.RemoveFailed) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateAuthorizationRole(com.vmware.vim.ManagedObjectReference _this, int roleId, java.lang.String newName, java.lang.String[] privIds) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[8]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateAuthorizationRole"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(roleId), newName, privIds});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void mergePermissions(com.vmware.vim.ManagedObjectReference _this, int srcRoleId, int dstRoleId) throws java.rmi.RemoteException, com.vmware.vim.AuthMinimumAdminPermission, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[9]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MergePermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(srcRoleId), new java.lang.Integer(dstRoleId)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AuthMinimumAdminPermission) {
              throw (com.vmware.vim.AuthMinimumAdminPermission) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Permission[] retrieveRolePermissions(com.vmware.vim.ManagedObjectReference _this, int roleId) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[10]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveRolePermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(roleId)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Permission[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Permission[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Permission[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Permission[] retrieveEntityPermissions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, boolean inherited) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[11]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveEntityPermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, new java.lang.Boolean(inherited)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Permission[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Permission[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Permission[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Permission[] retrieveAllPermissions(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[12]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveAllPermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Permission[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Permission[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Permission[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setEntityPermissions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, com.vmware.vim.Permission[] permission) throws java.rmi.RemoteException, com.vmware.vim.AuthMinimumAdminPermission, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[13]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetEntityPermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, permission});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AuthMinimumAdminPermission) {
              throw (com.vmware.vim.AuthMinimumAdminPermission) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void resetEntityPermissions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, com.vmware.vim.Permission[] permission) throws java.rmi.RemoteException, com.vmware.vim.AuthMinimumAdminPermission, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[14]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ResetEntityPermissions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, permission});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AuthMinimumAdminPermission) {
              throw (com.vmware.vim.AuthMinimumAdminPermission) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeEntityPermission(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, java.lang.String user, boolean isGroup) throws java.rmi.RemoteException, com.vmware.vim.AuthMinimumAdminPermission, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[15]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveEntityPermission"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, user, new java.lang.Boolean(isGroup)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AuthMinimumAdminPermission) {
              throw (com.vmware.vim.AuthMinimumAdminPermission) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference reconfigureCluster_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ClusterConfigSpec spec, boolean modify) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[16]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureCluster_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, new java.lang.Boolean(modify)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void applyRecommendation(com.vmware.vim.ManagedObjectReference _this, java.lang.String key) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[17]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ApplyRecommendation"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ClusterHostRecommendation[] recommendHostsForVm(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference vm, com.vmware.vim.ManagedObjectReference pool) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[18]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RecommendHostsForVm"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vm, pool});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ClusterHostRecommendation[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ClusterHostRecommendation[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ClusterHostRecommendation[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference addHost_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostConnectSpec spec, boolean asConnected, com.vmware.vim.ManagedObjectReference resourcePool) throws java.rmi.RemoteException, com.vmware.vim.InvalidLogin, com.vmware.vim.HostConnectFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[19]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, new java.lang.Boolean(asConnected), resourcePool});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConnectFault) {
              throw (com.vmware.vim.HostConnectFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference moveInto_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference[] host) throws java.rmi.RemoteException, com.vmware.vim.DuplicateName, com.vmware.vim.InvalidState, com.vmware.vim.TooManyHosts, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[20]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MoveInto_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TooManyHosts) {
              throw (com.vmware.vim.TooManyHosts) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference moveHostInto_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, com.vmware.vim.ManagedObjectReference resourcePool) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.TooManyHosts, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[21]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MoveHostInto_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, resourcePool});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TooManyHosts) {
              throw (com.vmware.vim.TooManyHosts) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.CustomFieldDef addCustomFieldDef(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[22]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddCustomFieldDef"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.CustomFieldDef) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.CustomFieldDef) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.CustomFieldDef.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeCustomFieldDef(com.vmware.vim.ManagedObjectReference _this, int key) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[23]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveCustomFieldDef"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(key)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void renameCustomFieldDef(com.vmware.vim.ManagedObjectReference _this, int key, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[24]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RenameCustomFieldDef"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(key), name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setField(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, int key, java.lang.String value) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[25]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetField"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, new java.lang.Integer(key), value});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean doesCustomizationSpecExist(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[26]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DoesCustomizationSpecExist"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.CustomizationSpecItem getCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[27]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "GetCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.CustomizationSpecItem) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.CustomizationSpecItem) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.CustomizationSpecItem.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void createCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.CustomizationSpecItem item) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[28]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, item});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void overwriteCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.CustomizationSpecItem item) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.ConcurrentAccess, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[29]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "OverwriteCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, item});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ConcurrentAccess) {
              throw (com.vmware.vim.ConcurrentAccess) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void deleteCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[30]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DeleteCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void duplicateCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String newName) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[31]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DuplicateCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, newName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void renameCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String newName) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[32]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RenameCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, newName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String customizationSpecItemToXml(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.CustomizationSpecItem item) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[33]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CustomizationSpecItemToXml"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, item});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.CustomizationSpecItem xmlToCustomizationSpecItem(com.vmware.vim.ManagedObjectReference _this, java.lang.String specItemXml) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[34]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "XmlToCustomizationSpecItem"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, specItemXml});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.CustomizationSpecItem) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.CustomizationSpecItem) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.CustomizationSpecItem.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void checkCustomizationResources(com.vmware.vim.ManagedObjectReference _this, java.lang.String guestOs) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[35]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CheckCustomizationResources"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, guestOs});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostConnectInfo queryConnectionInfo(com.vmware.vim.ManagedObjectReference _this, java.lang.String hostname, int port, java.lang.String username, java.lang.String password) throws java.rmi.RemoteException, com.vmware.vim.InvalidLogin, com.vmware.vim.HostConnectFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[36]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryConnectionInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, hostname, new java.lang.Integer(port), username, password});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostConnectInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostConnectInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostConnectInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConnectFault) {
              throw (com.vmware.vim.HostConnectFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void renameDatastore(com.vmware.vim.ManagedObjectReference _this, java.lang.String newName) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[37]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RenameDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, newName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void refreshDatastore(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[38]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RefreshDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void destroyDatastore(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[39]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DestroyDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.DiagnosticManagerLogDescriptor[] queryDescriptions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[40]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryDescriptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.DiagnosticManagerLogDescriptor[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.DiagnosticManagerLogDescriptor[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.DiagnosticManagerLogDescriptor[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.DiagnosticManagerLogHeader browseDiagnosticLog(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, java.lang.String key, java.lang.Integer start, java.lang.Integer lines) throws java.rmi.RemoteException, com.vmware.vim.CannotAccessFile, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[41]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "BrowseDiagnosticLog"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, key, start, lines});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.DiagnosticManagerLogHeader) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.DiagnosticManagerLogHeader) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.DiagnosticManagerLogHeader.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CannotAccessFile) {
              throw (com.vmware.vim.CannotAccessFile) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference generateLogBundles_Task(com.vmware.vim.ManagedObjectReference _this, boolean includeDefault, com.vmware.vim.ManagedObjectReference[] host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.LogBundlingFailed {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[42]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "GenerateLogBundles_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Boolean(includeDefault), host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.LogBundlingFailed) {
              throw (com.vmware.vim.LogBundlingFailed) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.VirtualMachineConfigOptionDescriptor[] queryConfigOptionDescriptor(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[43]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryConfigOptionDescriptor"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.VirtualMachineConfigOptionDescriptor[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.VirtualMachineConfigOptionDescriptor[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.VirtualMachineConfigOptionDescriptor[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.VirtualMachineConfigOption queryConfigOption(com.vmware.vim.ManagedObjectReference _this, java.lang.String key, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[44]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryConfigOption"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.VirtualMachineConfigOption) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.VirtualMachineConfigOption) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.VirtualMachineConfigOption.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ConfigTarget queryConfigTarget(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[45]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryConfigTarget"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ConfigTarget) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ConfigTarget) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ConfigTarget.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createFolder(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[46]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateFolder"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference moveIntoFolder_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference[] list) throws java.rmi.RemoteException, com.vmware.vim.DuplicateName, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault, com.vmware.vim.InvalidFolder {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[47]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MoveIntoFolder_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, list});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidFolder) {
              throw (com.vmware.vim.InvalidFolder) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.VirtualMachineConfigSpec config, com.vmware.vim.ManagedObjectReference pool, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.VmConfigFault, com.vmware.vim.DuplicateName, com.vmware.vim.FileFault, com.vmware.vim.OutOfBounds, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[48]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config, pool, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.OutOfBounds) {
              throw (com.vmware.vim.OutOfBounds) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference registerVM_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String path, java.lang.String name, boolean asTemplate, com.vmware.vim.ManagedObjectReference pool, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.FileFault, com.vmware.vim.OutOfBounds, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[49]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RegisterVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, path, name, new java.lang.Boolean(asTemplate), pool, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.OutOfBounds) {
              throw (com.vmware.vim.OutOfBounds) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createCluster(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, com.vmware.vim.ClusterConfigSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[50]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateCluster"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference addStandaloneHost_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostConnectSpec spec, boolean addConnected) throws java.rmi.RemoteException, com.vmware.vim.InvalidLogin, com.vmware.vim.HostConnectFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[51]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddStandaloneHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, new java.lang.Boolean(addConnected)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConnectFault) {
              throw (com.vmware.vim.HostConnectFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createDatacenter(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[52]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateDatacenter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference unregisterAndDestroy_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.ConcurrentAccess, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[53]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UnregisterAndDestroy_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ConcurrentAccess) {
              throw (com.vmware.vim.ConcurrentAccess) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setCollectorPageSize(com.vmware.vim.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[54]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetCollectorPageSize"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void rewindCollector(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[55]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RewindCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void resetCollector(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[56]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ResetCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void destroyCollector(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[57]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DestroyCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostConnectInfo queryHostConnectionInfo(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[58]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryHostConnectionInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostConnectInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostConnectInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostConnectInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateSystemResources(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostSystemResourceInfo resourceInfo) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[59]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateSystemResources"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, resourceInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference reconnectHost_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostConnectSpec cnxSpec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.InvalidLogin, com.vmware.vim.InvalidState, com.vmware.vim.HostConnectFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[60]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconnectHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, cnxSpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConnectFault) {
              throw (com.vmware.vim.HostConnectFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference disconnectHost_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[61]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DisconnectHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference enterMaintenanceMode_Task(com.vmware.vim.ManagedObjectReference _this, int timeout) throws java.rmi.RemoteException, com.vmware.vim.Timedout, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[62]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "EnterMaintenanceMode_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(timeout)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.Timedout) {
              throw (com.vmware.vim.Timedout) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference exitMaintenanceMode_Task(com.vmware.vim.ManagedObjectReference _this, int timeout) throws java.rmi.RemoteException, com.vmware.vim.Timedout, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[63]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ExitMaintenanceMode_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(timeout)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.Timedout) {
              throw (com.vmware.vim.Timedout) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference rebootHost_Task(com.vmware.vim.ManagedObjectReference _this, boolean force) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[64]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RebootHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Boolean(force)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference shutdownHost_Task(com.vmware.vim.ManagedObjectReference _this, boolean force) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[65]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ShutdownHost_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Boolean(force)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public long queryMemoryOverhead(com.vmware.vim.ManagedObjectReference _this, long memorySize, java.lang.Integer videoRamSize, int numVcpus) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[66]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryMemoryOverhead"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Long(memorySize), videoRamSize, new java.lang.Integer(numVcpus)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Long) _resp).longValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Long) org.apache.axis.utils.JavaUtils.convert(_resp, long.class)).longValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference reconfigureHostForDAS_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.DasConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[67]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureHostForDAS_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DasConfigFault) {
              throw (com.vmware.vim.DasConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.LicenseAvailabilityInfo[] queryLicenseSourceAvailability(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[68]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryLicenseSourceAvailability"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.LicenseAvailabilityInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.LicenseAvailabilityInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.LicenseAvailabilityInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.LicenseUsageInfo queryLicenseUsage(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[69]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryLicenseUsage"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.LicenseUsageInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.LicenseUsageInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.LicenseUsageInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setLicenseEdition(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, java.lang.String featureKey) throws java.rmi.RemoteException, com.vmware.vim.LicenseServerUnavailable, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[70]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetLicenseEdition"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, featureKey});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.LicenseServerUnavailable) {
              throw (com.vmware.vim.LicenseServerUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean checkLicenseFeature(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, java.lang.String featureKey) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[71]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CheckLicenseFeature"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, featureKey});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean enableFeature(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, java.lang.String featureKey) throws java.rmi.RemoteException, com.vmware.vim.LicenseServerUnavailable, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[72]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "EnableFeature"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, featureKey});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.LicenseServerUnavailable) {
              throw (com.vmware.vim.LicenseServerUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean disableFeature(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, java.lang.String featureKey) throws java.rmi.RemoteException, com.vmware.vim.LicenseServerUnavailable, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[73]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DisableFeature"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, featureKey});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.LicenseServerUnavailable) {
              throw (com.vmware.vim.LicenseServerUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void configureLicenseSource(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host, com.vmware.vim.LicenseSource licenseSource) throws java.rmi.RemoteException, com.vmware.vim.CannotAccessLocalSource, com.vmware.vim.LicenseServerUnavailable, com.vmware.vim.InvalidLicense, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[74]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ConfigureLicenseSource"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host, licenseSource});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CannotAccessLocalSource) {
              throw (com.vmware.vim.CannotAccessLocalSource) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.LicenseServerUnavailable) {
              throw (com.vmware.vim.LicenseServerUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLicense) {
              throw (com.vmware.vim.InvalidLicense) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void reload(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[75]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "Reload"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference rename_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String newName) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[76]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "Rename_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, newName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference destroy_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.VimFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[77]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "Destroy_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VimFault) {
              throw (com.vmware.vim.VimFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void destroyNetwork(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[78]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DestroyNetwork"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PerfProviderSummary queryPerfProviderSummary(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[79]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPerfProviderSummary"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PerfProviderSummary) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PerfProviderSummary) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PerfProviderSummary.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PerfMetricId[] queryAvailablePerfMetric(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, java.util.Calendar beginTime, java.util.Calendar endTime, java.lang.Integer intervalId) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[80]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryAvailablePerfMetric"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, beginTime, endTime, intervalId});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PerfMetricId[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PerfMetricId[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PerfMetricId[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PerfCounterInfo[] queryPerfCounter(com.vmware.vim.ManagedObjectReference _this, int[] counterId) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[81]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPerfCounter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, counterId});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PerfCounterInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PerfCounterInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PerfCounterInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PerfEntityMetricBase[] queryPerf(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PerfQuerySpec[] querySpec) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[82]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPerf"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, querySpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PerfEntityMetricBase[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PerfEntityMetricBase[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PerfEntityMetricBase[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PerfCompositeMetric queryPerfComposite(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PerfQuerySpec querySpec) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[83]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPerfComposite"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, querySpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PerfCompositeMetric) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PerfCompositeMetric) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PerfCompositeMetric.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void createPerfInterval(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PerfInterval intervalId) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[84]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreatePerfInterval"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, intervalId});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removePerfInterval(com.vmware.vim.ManagedObjectReference _this, int samplePeriod) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[85]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemovePerfInterval"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(samplePeriod)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updatePerfInterval(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.PerfInterval interval) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[86]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdatePerfInterval"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, interval});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateConfig(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, com.vmware.vim.ResourceConfigSpec config) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.ConcurrentAccess, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[87]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, config});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ConcurrentAccess) {
              throw (com.vmware.vim.ConcurrentAccess) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void moveIntoResourcePool(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference[] list) throws java.rmi.RemoteException, com.vmware.vim.DuplicateName, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[88]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MoveIntoResourcePool"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, list});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateChildResourceConfiguration(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ResourceConfigSpec[] spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[89]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateChildResourceConfiguration"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createResourcePool(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, com.vmware.vim.ResourceConfigSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[90]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateResourcePool"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void destroyChildren(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[91]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DestroyChildren"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findByUuid(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datacenter, java.lang.String uuid, boolean vmSearch) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[92]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindByUuid"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datacenter, uuid, new java.lang.Boolean(vmSearch)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findByDatastorePath(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datacenter, java.lang.String path) throws java.rmi.RemoteException, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[93]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindByDatastorePath"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datacenter, path});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findByDnsName(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datacenter, java.lang.String dnsName, boolean vmSearch) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[94]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindByDnsName"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datacenter, dnsName, new java.lang.Boolean(vmSearch)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findByIp(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datacenter, java.lang.String ip, boolean vmSearch) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[95]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindByIp"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datacenter, ip, new java.lang.Boolean(vmSearch)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findByInventoryPath(com.vmware.vim.ManagedObjectReference _this, java.lang.String inventoryPath) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[96]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindByInventoryPath"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, inventoryPath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference findChild(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[97]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FindChild"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.util.Calendar currentTime(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[98]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CurrentTime"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.util.Calendar) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.util.Calendar) org.apache.axis.utils.JavaUtils.convert(_resp, java.util.Calendar.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ServiceContent retrieveServiceContent(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[99]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveServiceContent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ServiceContent) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ServiceContent) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ServiceContent.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Event[] validateMigration(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference[] vm, com.vmware.vim.VirtualMachinePowerState state, java.lang.String[] testType, com.vmware.vim.ManagedObjectReference pool, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[100]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ValidateMigration"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vm, state, testType, pool, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Event[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Event[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Event[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostVMotionCompatibility[] queryVMotionCompatibility(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference vm, com.vmware.vim.ManagedObjectReference[] host, java.lang.String[] compatibility) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[101]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryVMotionCompatibility"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vm, host, compatibility});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostVMotionCompatibility[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostVMotionCompatibility[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostVMotionCompatibility[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateServiceMessage(com.vmware.vim.ManagedObjectReference _this, java.lang.String message) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[102]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateServiceMessage"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, message});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.UserSession login(com.vmware.vim.ManagedObjectReference _this, java.lang.String userName, java.lang.String password, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.vim.InvalidLogin, com.vmware.vim.InvalidLocale, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[103]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "Login"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, password, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.UserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.UserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.UserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLocale) {
              throw (com.vmware.vim.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void logout(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[104]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "Logout"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.SessionManagerLocalTicket acquireLocalTicket(com.vmware.vim.ManagedObjectReference _this, java.lang.String userName) throws java.rmi.RemoteException, com.vmware.vim.InvalidLogin, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[105]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AcquireLocalTicket"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.SessionManagerLocalTicket) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.SessionManagerLocalTicket) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.SessionManagerLocalTicket.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLogin) {
              throw (com.vmware.vim.InvalidLogin) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void terminateSession(com.vmware.vim.ManagedObjectReference _this, java.lang.String[] sessionId) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[106]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "TerminateSession"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, sessionId});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setLocale(com.vmware.vim.ManagedObjectReference _this, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.vim.InvalidLocale, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[107]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetLocale"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidLocale) {
              throw (com.vmware.vim.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void cancelTask(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[108]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CancelTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.TaskInfo[] readNextTasks(com.vmware.vim.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[109]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReadNextTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.TaskInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.TaskInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.TaskInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.TaskInfo[] readPreviousTasks(com.vmware.vim.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[110]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReadPreviousTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.TaskInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.TaskInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.TaskInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createCollectorForTasks(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.TaskFilterSpec filter) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[111]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateCollectorForTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.UserSearchResult[] retrieveUserGroups(com.vmware.vim.ManagedObjectReference _this, java.lang.String domain, java.lang.String searchStr, java.lang.String belongsToGroup, java.lang.String belongsToUser, boolean exactMatch, boolean findUsers, boolean findGroups) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[112]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveUserGroups"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, domain, searchStr, belongsToGroup, belongsToUser, new java.lang.Boolean(exactMatch), new java.lang.Boolean(findUsers), new java.lang.Boolean(findGroups)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.UserSearchResult[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.UserSearchResult[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.UserSearchResult[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createSnapshot_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String description, boolean memory, boolean quiesce) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.VmConfigFault, com.vmware.vim.SnapshotFault, com.vmware.vim.TaskInProgress, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[113]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateSnapshot_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, description, new java.lang.Boolean(memory), new java.lang.Boolean(quiesce)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.SnapshotFault) {
              throw (com.vmware.vim.SnapshotFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference revertToCurrentSnapshot_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.SnapshotFault, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[114]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RevertToCurrentSnapshot_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.SnapshotFault) {
              throw (com.vmware.vim.SnapshotFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference removeAllSnapshots_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.SnapshotFault, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[115]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveAllSnapshots_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.SnapshotFault) {
              throw (com.vmware.vim.SnapshotFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference reconfigVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.VirtualMachineConfigSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.VmConfigFault, com.vmware.vim.DuplicateName, com.vmware.vim.TaskInProgress, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.ConcurrentAccess, com.vmware.vim.InvalidDatastore, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[116]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ConcurrentAccess) {
              throw (com.vmware.vim.ConcurrentAccess) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference upgradeVM_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String version) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.AlreadyUpgraded, com.vmware.vim.RuntimeFault, com.vmware.vim.NoDiskFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[117]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpgradeVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyUpgraded) {
              throw (com.vmware.vim.AlreadyUpgraded) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NoDiskFound) {
              throw (com.vmware.vim.NoDiskFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference powerOnVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.TaskInProgress, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[118]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "PowerOnVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference powerOffVM_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[119]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "PowerOffVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference suspendVM_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[120]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SuspendVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference resetVM_Task(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[121]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ResetVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void shutdownGuest(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.ToolsUnavailable, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[122]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ShutdownGuest"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ToolsUnavailable) {
              throw (com.vmware.vim.ToolsUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void rebootGuest(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.ToolsUnavailable, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[123]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RebootGuest"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ToolsUnavailable) {
              throw (com.vmware.vim.ToolsUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void standbyGuest(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.InvalidState, com.vmware.vim.ToolsUnavailable, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[124]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "StandbyGuest"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ToolsUnavailable) {
              throw (com.vmware.vim.ToolsUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void answerVM(com.vmware.vim.ManagedObjectReference _this, java.lang.String questionId, java.lang.String answerChoice) throws java.rmi.RemoteException, com.vmware.vim.ConcurrentAccess, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[125]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AnswerVM"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, questionId, answerChoice});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ConcurrentAccess) {
              throw (com.vmware.vim.ConcurrentAccess) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference customizeVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.CustomizationSpec spec) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[126]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CustomizeVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void checkCustomizationSpec(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.CustomizationSpec spec) throws java.rmi.RemoteException, com.vmware.vim.CustomizationFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[127]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CheckCustomizationSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference migrateVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference pool, com.vmware.vim.ManagedObjectReference host, com.vmware.vim.VirtualMachineMovePriority priority, com.vmware.vim.VirtualMachinePowerState state) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.Timedout, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.MigrationFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[128]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MigrateVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pool, host, priority, state});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.Timedout) {
              throw (com.vmware.vim.Timedout) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.MigrationFault) {
              throw (com.vmware.vim.MigrationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference relocateVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.VirtualMachineRelocateSpec spec) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.Timedout, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.MigrationFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[129]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RelocateVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.Timedout) {
              throw (com.vmware.vim.Timedout) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.MigrationFault) {
              throw (com.vmware.vim.MigrationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference cloneVM_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference folder, java.lang.String name, com.vmware.vim.VirtualMachineCloneSpec spec) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.TaskInProgress, com.vmware.vim.CustomizationFault, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.MigrationFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[130]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CloneVM_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, folder, name, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.CustomizationFault) {
              throw (com.vmware.vim.CustomizationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.MigrationFault) {
              throw (com.vmware.vim.MigrationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void markAsTemplate(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[131]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MarkAsTemplate"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void markAsVirtualMachine(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference pool, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[132]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MarkAsVirtualMachine"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pool, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void unregisterVM(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidPowerState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[133]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UnregisterVM"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidPowerState) {
              throw (com.vmware.vim.InvalidPowerState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void resetGuestInformation(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[134]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ResetGuestInformation"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void mountToolsInstaller(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[135]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "MountToolsInstaller"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void unmountToolsInstaller(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[136]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UnmountToolsInstaller"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference upgradeTools_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String installerOptions) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.VmToolsUpgradeFault, com.vmware.vim.InvalidState, com.vmware.vim.ToolsUnavailable, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[137]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpgradeTools_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, installerOptions});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmToolsUpgradeFault) {
              throw (com.vmware.vim.VmToolsUpgradeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ToolsUnavailable) {
              throw (com.vmware.vim.ToolsUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.VirtualMachineMksTicket acquireMksTicket(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[138]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AcquireMksTicket"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.VirtualMachineMksTicket) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.VirtualMachineMksTicket) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.VirtualMachineMksTicket.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setScreenResolution(com.vmware.vim.ManagedObjectReference _this, int width, int height) throws java.rmi.RemoteException, com.vmware.vim.ToolsUnavailable, com.vmware.vim.InvalidPowerState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[139]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetScreenResolution"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(width), new java.lang.Integer(height)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ToolsUnavailable) {
              throw (com.vmware.vim.ToolsUnavailable) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidPowerState) {
              throw (com.vmware.vim.InvalidPowerState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeAlarm(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[140]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveAlarm"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void reconfigureAlarm(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.AlarmSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[141]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureAlarm"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createAlarm(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, com.vmware.vim.AlarmSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[142]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateAlarm"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference[] getAlarm(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[143]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "GetAlarm"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.AlarmState[] getAlarmState(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[144]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "GetAlarmState"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.AlarmState[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.AlarmState[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.AlarmState[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Event[] readNextEvents(com.vmware.vim.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[145]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReadNextEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Event[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Event[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Event[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Event[] readPreviousEvents(com.vmware.vim.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[146]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReadPreviousEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Event[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Event[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Event[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createCollectorForEvents(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.EventFilterSpec filter) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[147]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateCollectorForEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void logUserEvent(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, java.lang.String msg) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[148]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "LogUserEvent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, msg});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.Event[] queryEvents(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.EventFilterSpec filter) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[149]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.Event[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.Event[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.Event[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void reconfigureAutostart(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostAutoStartManagerConfig spec) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[150]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureAutostart"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void autoStartPowerOn(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[151]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AutoStartPowerOn"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void autoStartPowerOff(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[152]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AutoStartPowerOff"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void enableHyperThreading(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[153]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "EnableHyperThreading"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void disableHyperThreading(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[154]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DisableHyperThreading"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference searchDatastore_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String datastorePath, com.vmware.vim.HostDatastoreBrowserSearchSpec searchSpec) throws java.rmi.RemoteException, com.vmware.vim.FileFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[155]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SearchDatastore_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastorePath, searchSpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference searchDatastoreSubFolders_Task(com.vmware.vim.ManagedObjectReference _this, java.lang.String datastorePath, com.vmware.vim.HostDatastoreBrowserSearchSpec searchSpec) throws java.rmi.RemoteException, com.vmware.vim.FileFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[156]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SearchDatastoreSubFolders_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastorePath, searchSpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void deleteFile(com.vmware.vim.ManagedObjectReference _this, java.lang.String datastorePath) throws java.rmi.RemoteException, com.vmware.vim.FileFault, com.vmware.vim.InvalidDatastore, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[157]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DeleteFile"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastorePath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidDatastore) {
              throw (com.vmware.vim.InvalidDatastore) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostScsiDisk[] queryAvailableDisksForVmfs(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datastore) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[158]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryAvailableDisksForVmfs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastore});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostScsiDisk[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostScsiDisk[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostScsiDisk[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.VmfsDatastoreOption[] queryVmfsDatastoreCreateOptions(com.vmware.vim.ManagedObjectReference _this, java.lang.String devicePath) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[159]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryVmfsDatastoreCreateOptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, devicePath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.VmfsDatastoreOption[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.VmfsDatastoreOption[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.VmfsDatastoreOption[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createVmfsDatastore(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.VmfsDatastoreCreateSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[160]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateVmfsDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.VmfsDatastoreOption[] queryVmfsDatastoreExtendOptions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datastore, java.lang.String devicePath) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[161]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryVmfsDatastoreExtendOptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastore, devicePath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.VmfsDatastoreOption[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.VmfsDatastoreOption[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.VmfsDatastoreOption[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference extendVmfsDatastore(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datastore, com.vmware.vim.VmfsDatastoreExtendSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[162]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ExtendVmfsDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastore, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createNasDatastore(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostNasVolumeSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.DuplicateName, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[163]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateNasDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createLocalDatastore(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String path) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[164]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateLocalDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, path});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeDatastore(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference datastore) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[165]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveDatastore"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, datastore});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void configureDatastorePrincipal(com.vmware.vim.ManagedObjectReference _this, java.lang.String userName, java.lang.String password) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[166]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ConfigureDatastorePrincipal"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, password});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostDiagnosticPartition[] queryAvailablePartition(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[167]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryAvailablePartition"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostDiagnosticPartition[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostDiagnosticPartition[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostDiagnosticPartition[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void selectActivePartition(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostScsiDiskPartition partition) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[168]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SelectActivePartition"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, partition});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostDiagnosticPartitionCreateOption[] queryPartitionCreateOptions(com.vmware.vim.ManagedObjectReference _this, java.lang.String storageType, java.lang.String diagnosticType) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[169]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPartitionCreateOptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, storageType, diagnosticType});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostDiagnosticPartitionCreateOption[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostDiagnosticPartitionCreateOption[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostDiagnosticPartitionCreateOption[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostDiagnosticPartitionCreateDescription queryPartitionCreateDesc(com.vmware.vim.ManagedObjectReference _this, java.lang.String diskUuid, java.lang.String diagnosticType) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[170]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryPartitionCreateDesc"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, diskUuid, diagnosticType});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostDiagnosticPartitionCreateDescription) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostDiagnosticPartitionCreateDescription) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostDiagnosticPartitionCreateDescription.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void createDiagnosticPartition(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostDiagnosticPartitionCreateSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[171]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateDiagnosticPartition"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateDefaultPolicy(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostFirewallDefaultPolicy defaultPolicy) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[172]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateDefaultPolicy"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, defaultPolicy});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void enableRuleset(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[173]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "EnableRuleset"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void disableRuleset(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[174]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DisableRuleset"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void refreshFirewall(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[175]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RefreshFirewall"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void createUser(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostAccountSpec user) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[176]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateUser"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, user});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateUser(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostAccountSpec user) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[177]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateUser"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, user});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void createGroup(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostAccountSpec group) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[178]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, group});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeUser(com.vmware.vim.ManagedObjectReference _this, java.lang.String userName) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[179]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveUser"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeGroup(com.vmware.vim.ManagedObjectReference _this, java.lang.String groupName) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[180]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, groupName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void assignUserToGroup(com.vmware.vim.ManagedObjectReference _this, java.lang.String user, java.lang.String group) throws java.rmi.RemoteException, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[181]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AssignUserToGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, user, group});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void unassignUserFromGroup(com.vmware.vim.ManagedObjectReference _this, java.lang.String user, java.lang.String group) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault, com.vmware.vim.UserNotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[182]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UnassignUserFromGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, user, group});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.UserNotFound) {
              throw (com.vmware.vim.UserNotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void reconfigureServiceConsoleReservation(com.vmware.vim.ManagedObjectReference _this, long cfgBytes) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[183]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureServiceConsoleReservation"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Long(cfgBytes)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostNetworkConfigResult updateNetworkConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostNetworkConfig config, java.lang.String changeMode) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[184]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateNetworkConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config, changeMode});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostNetworkConfigResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostNetworkConfigResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostNetworkConfigResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateDnsConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostDnsConfig config) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[185]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateDnsConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateIpRouteConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostIpRouteConfig config) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[186]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateIpRouteConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateConsoleIpRouteConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostIpRouteConfig config) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[187]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateConsoleIpRouteConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void addVirtualSwitch(com.vmware.vim.ManagedObjectReference _this, java.lang.String vswitchName, com.vmware.vim.HostVirtualSwitchSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[188]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddVirtualSwitch"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vswitchName, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeVirtualSwitch(com.vmware.vim.ManagedObjectReference _this, java.lang.String vswitchName) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[189]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveVirtualSwitch"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vswitchName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateVirtualSwitch(com.vmware.vim.ManagedObjectReference _this, java.lang.String vswitchName, com.vmware.vim.HostVirtualSwitchSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[190]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateVirtualSwitch"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vswitchName, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void addPortGroup(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostPortGroupSpec portgrp) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[191]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddPortGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, portgrp});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removePortGroup(com.vmware.vim.ManagedObjectReference _this, java.lang.String pgName) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[192]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemovePortGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pgName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updatePortGroup(com.vmware.vim.ManagedObjectReference _this, java.lang.String pgName, com.vmware.vim.HostPortGroupSpec portgrp) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[193]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdatePortGroup"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pgName, portgrp});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updatePhysicalNicLinkSpeed(com.vmware.vim.ManagedObjectReference _this, java.lang.String device, com.vmware.vim.PhysicalNicLinkInfo linkSpeed) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[194]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdatePhysicalNicLinkSpeed"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device, linkSpeed});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.PhysicalNicHintInfo[] queryNetworkHint(com.vmware.vim.ManagedObjectReference _this, java.lang.String[] device) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[195]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryNetworkHint"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.PhysicalNicHintInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.PhysicalNicHintInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.PhysicalNicHintInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String addVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String portgroup, com.vmware.vim.HostVirtualNicSpec nic) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[196]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, portgroup, nic});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[197]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device, com.vmware.vim.HostVirtualNicSpec nic) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[198]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device, nic});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String addServiceConsoleVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String portgroup, com.vmware.vim.HostVirtualNicSpec nic) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[199]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddServiceConsoleVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, portgroup, nic});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeServiceConsoleVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[200]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveServiceConsoleVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateServiceConsoleVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device, com.vmware.vim.HostVirtualNicSpec nic) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.ResourceInUse, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[201]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateServiceConsoleVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device, nic});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.ResourceInUse) {
              throw (com.vmware.vim.ResourceInUse) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void restartServiceConsoleVirtualNic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[202]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RestartServiceConsoleVirtualNic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void refreshNetworkSystem(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[203]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RefreshNetworkSystem"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateServicePolicy(com.vmware.vim.ManagedObjectReference _this, java.lang.String id, java.lang.String policy) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[204]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateServicePolicy"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id, policy});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void startService(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[205]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "StartService"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void stopService(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[206]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "StopService"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void restartService(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[207]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RestartService"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void uninstallService(com.vmware.vim.ManagedObjectReference _this, java.lang.String id) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[208]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UninstallService"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, id});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void refreshServices(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[209]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RefreshServices"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean checkIfMasterSnmpAgentRunning(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[210]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CheckIfMasterSnmpAgentRunning"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateSnmpConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostSnmpConfig config) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[211]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateSnmpConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, config});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void restartMasterSnmpAgent(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[212]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RestartMasterSnmpAgent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void stopMasterSnmpAgent(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[213]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "StopMasterSnmpAgent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostDiskPartitionInfo[] retrieveDiskPartitionInfo(com.vmware.vim.ManagedObjectReference _this, java.lang.String[] devicePath) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[214]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveDiskPartitionInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, devicePath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostDiskPartitionInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostDiskPartitionInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostDiskPartitionInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostDiskPartitionInfo computeDiskPartitionInfo(com.vmware.vim.ManagedObjectReference _this, java.lang.String devicePath, com.vmware.vim.HostDiskPartitionLayout layout) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[215]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ComputeDiskPartitionInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, devicePath, layout});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostDiskPartitionInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostDiskPartitionInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostDiskPartitionInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateDiskPartitions(com.vmware.vim.ManagedObjectReference _this, java.lang.String devicePath, com.vmware.vim.HostDiskPartitionSpec spec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[216]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateDiskPartitions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, devicePath, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.HostVmfsVolume formatVmfs(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostVmfsSpec createSpec) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.AlreadyExists, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[217]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "FormatVmfs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, createSpec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.HostVmfsVolume) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.HostVmfsVolume) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.HostVmfsVolume.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.AlreadyExists) {
              throw (com.vmware.vim.AlreadyExists) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void rescanVmfs(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[218]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RescanVmfs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void attachVmfsExtent(com.vmware.vim.ManagedObjectReference _this, java.lang.String vmfsPath, com.vmware.vim.HostScsiDiskPartition extent) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[219]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AttachVmfsExtent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vmfsPath, extent});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void upgradeVmfs(com.vmware.vim.ManagedObjectReference _this, java.lang.String vmfsPath) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[220]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpgradeVmfs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, vmfsPath});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void upgradeVmLayout(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[221]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpgradeVmLayout"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void rescanHba(com.vmware.vim.ManagedObjectReference _this, java.lang.String hbaDevice) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[222]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RescanHba"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, hbaDevice});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void rescanAllHba(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[223]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RescanAllHba"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateSoftwareInternetScsiEnabled(com.vmware.vim.ManagedObjectReference _this, boolean enabled) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[224]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateSoftwareInternetScsiEnabled"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Boolean(enabled)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateInternetScsiDiscoveryProperties(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaDiscoveryProperties discoveryProperties) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[225]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateInternetScsiDiscoveryProperties"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, discoveryProperties});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateInternetScsiAuthenticationProperties(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaAuthenticationProperties authenticationProperties) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[226]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateInternetScsiAuthenticationProperties"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, authenticationProperties});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateInternetScsiIPProperties(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaIPProperties ipProperties) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[227]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateInternetScsiIPProperties"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, ipProperties});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateInternetScsiName(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, java.lang.String iScsiName) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[228]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateInternetScsiName"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, iScsiName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateInternetScsiAlias(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, java.lang.String iScsiAlias) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[229]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateInternetScsiAlias"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, iScsiAlias});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void addInternetScsiSendTargets(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaSendTarget[] targets) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[230]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddInternetScsiSendTargets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, targets});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeInternetScsiSendTargets(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaSendTarget[] targets) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[231]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveInternetScsiSendTargets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, targets});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void addInternetScsiStaticTargets(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaStaticTarget[] targets) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[232]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "AddInternetScsiStaticTargets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, targets});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeInternetScsiStaticTargets(com.vmware.vim.ManagedObjectReference _this, java.lang.String iScsiHbaDevice, com.vmware.vim.HostInternetScsiHbaStaticTarget[] targets) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[233]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveInternetScsiStaticTargets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, iScsiHbaDevice, targets});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void enableMultipathPath(com.vmware.vim.ManagedObjectReference _this, java.lang.String pathName) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[234]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "EnableMultipathPath"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pathName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void disableMultipathPath(com.vmware.vim.ManagedObjectReference _this, java.lang.String pathName) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[235]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DisableMultipathPath"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, pathName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void setMultipathLunPolicy(com.vmware.vim.ManagedObjectReference _this, java.lang.String lunId, com.vmware.vim.HostMultipathInfoLogicalUnitPolicy policy) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[236]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SetMultipathLunPolicy"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, lunId, policy});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void refreshStorageSystem(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[237]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RefreshStorageSystem"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateIpConfig(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.HostIpConfig ipConfig) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault, com.vmware.vim.NotFound {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[238]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateIpConfig"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, ipConfig});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.NotFound) {
              throw (com.vmware.vim.NotFound) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void selectVnic(com.vmware.vim.ManagedObjectReference _this, java.lang.String device) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[239]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "SelectVnic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, device});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void deselectVnic(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.HostConfigFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[240]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "DeselectVnic"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.HostConfigFault) {
              throw (com.vmware.vim.HostConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.OptionValue[] queryOptions(com.vmware.vim.ManagedObjectReference _this, java.lang.String name) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[241]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "QueryOptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.OptionValue[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.OptionValue[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.OptionValue[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void updateOptions(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.OptionValue[] changedValue) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[242]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "UpdateOptions"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, changedValue});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void removeScheduledTask(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[243]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void reconfigureScheduledTask(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ScheduledTaskSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[244]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "ReconfigureScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void runScheduledTask(com.vmware.vim.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.vim.InvalidState, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[245]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RunScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference createScheduledTask(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity, com.vmware.vim.ScheduledTaskSpec spec) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.DuplicateName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[246]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "CreateScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.DuplicateName) {
              throw (com.vmware.vim.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference[] retrieveEntityScheduledTask(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference entity) throws java.rmi.RemoteException, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[247]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RetrieveEntityScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, entity});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference revertToSnapshot_Task(com.vmware.vim.ManagedObjectReference _this, com.vmware.vim.ManagedObjectReference host) throws java.rmi.RemoteException, com.vmware.vim.VmConfigFault, com.vmware.vim.TaskInProgress, com.vmware.vim.FileFault, com.vmware.vim.InvalidState, com.vmware.vim.InsufficientResourcesFault, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[248]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RevertToSnapshot_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, host});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.VmConfigFault) {
              throw (com.vmware.vim.VmConfigFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.FileFault) {
              throw (com.vmware.vim.FileFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidState) {
              throw (com.vmware.vim.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InsufficientResourcesFault) {
              throw (com.vmware.vim.InsufficientResourcesFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.vim.ManagedObjectReference removeSnapshot_Task(com.vmware.vim.ManagedObjectReference _this, boolean removeChildren) throws java.rmi.RemoteException, com.vmware.vim.TaskInProgress, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[249]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RemoveSnapshot_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Boolean(removeChildren)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.vim.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.vim.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.vim.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.TaskInProgress) {
              throw (com.vmware.vim.TaskInProgress) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void renameSnapshot(com.vmware.vim.ManagedObjectReference _this, java.lang.String name, java.lang.String description) throws java.rmi.RemoteException, com.vmware.vim.InvalidName, com.vmware.vim.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[250]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:vim2", "RenameSnapshot"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, name, description});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.InvalidName) {
              throw (com.vmware.vim.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.vim.RuntimeFault) {
              throw (com.vmware.vim.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

}
