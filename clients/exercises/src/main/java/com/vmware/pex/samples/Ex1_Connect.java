package com.vmware.pex.samples;

/* **********************************************************
 * Copyright 2008 VMware, Inc.  All rights reserved.
 * **********************************************************/
 
/* **********************************************************************************************
* DISCLAIMER. THIS CODE IS PROVIDED TO YOU "AS IS" WITHOUT WARRANTIES OR CONDITIONS 
* OF ANY KIND, WHETHER ORAL OR WRITTEN, EXPRESS OR IMPLIED. THE AUTHOR SPECIFICALLY 
* DISCLAIMS ANY IMPLIED WARRANTIES OR CONDITIONS OF MERCHANTABILITY, SATISFACTORY 
* QUALITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. 
 * **********************************************************************************************/

/**
 * This class demonstrates how to establish connection using the VI SDK.
 * To confirm the connection this retrieves the current time from the server.
 * 
 * This class uses the client side code generated by AXIS.
 * This class will not compile with JAX-WS / JAXB generated client side code.
 * 
 * Usage: java Connect <host> <username> <password>
 * 
 * host     - URL of the Virtual Center Server / ESX host
 *            https://<Server host name / ip>/sdk
 * username - User name
 * password - Password
 *
 * @author bparimi
 */

import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.vmware.vim25.ManagedObjectReference;
import com.vmware.vim25.ServiceContent;
import com.vmware.vim25.VimPortType;
import com.vmware.vim25.VimServiceLocator;

public class Ex1_Connect {
    private static final ManagedObjectReference SIMO_REF = new ManagedObjectReference();
    private static VimPortType VIM_PORT;
    private static ServiceContent SERVICE_CONTENT;
    private static final String STR_SERVICE_INSTANCE = "ServiceInstance";
    private static String VIM_HOST;
    private static String USER_NAME;
    private static String PASSWORD;

    /**
     * Set the managed object reference type, and value to 
     * ServiceInstance
     */
    private static void initSIMORef() {
        SIMO_REF.setType(STR_SERVICE_INSTANCE);
        SIMO_REF.set_value(STR_SERVICE_INSTANCE);
    }

    /**
     * 
     * @param url The URL of the Virtual Center Server
     * 
     * https://<Server IP / host name>/sdk
     * 
     * The method establishes connection with the web service port on the server.
     * This is not to be confused with the session connection.
     * 
     */
    private static void initVimPort(String url) {
    	/********************************
    	 ********************************
    	 ***                          ***
    	 ***   Your code goes here    ***
    	 ***    (fill-in 1 of 2)      ***
    	 ***                          ***
    	 ********************************
    	 ********************************
    	 */
    	VimServiceLocator locator = new VimServiceLocator();
    	locator.setMaintainSession(true);
    	try {
	    	VIM_PORT = locator.getVimPort(new URL(url));
    	} catch (MalformedURLException mue) {
	    	mue.printStackTrace();
    	} catch (Exception se) {
	    	se.printStackTrace();
    	}
    }

    /*
     * This method calls all the initialization methods required in order.
     */
    private static void initAll() {
        //These following methods have to be called in this order.
        initSIMORef();
        initVimPort(VIM_HOST);
        initServiceContent();
        try {
            connect(VIM_HOST, USER_NAME, PASSWORD);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void initServiceContent() {
        if (SERVICE_CONTENT == null) {
            try {
                SERVICE_CONTENT = VIM_PORT.retrieveServiceContent(SIMO_REF);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * 
     * @param url The URL of the server
     * @param uname The user name for the session 
     * @param pword The password for the user
     * 
     * Establishes session with the virtual center / ESX server
     * 
     * @throws Exception
     */
    private static void connect(String url, String uname, String pword) throws Exception {
    	/********************************
    	 ********************************
    	 ***                          ***
    	 ***   Your code goes here    ***
    	 ***    (fill-in 2 of 2)      ***
    	 ***                          ***
    	 ********************************
    	 ********************************
    	 */
    	VIM_PORT.login(SERVICE_CONTENT.getSessionManager(), uname, pword, null);
    }

    /**
     * Disconnects the user session
     * 
     * @throws Exception
     */
    private static void disconnect() throws Exception {
        VIM_PORT.logout(SERVICE_CONTENT.getSessionManager());
    }

    public static Calendar getCurrentTime() {
        Calendar ct = null;
        try {
            ct = VIM_PORT.currentTime(SIMO_REF); 
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return ct;
    }
    
    public static void printServerTime(Calendar ct) {
        try {
            if (ct != null) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd 'T' HH:mm:ss.SSSZ");
                System.out.println("Server current time: " + sdf.format(ct.getTime()));
            } else {
                System.out.println("Error in retrieving the server current time");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static void printUsage() {
        System.out.println("Usage: java Ex1_Connect <host> <username> <password>");
    }

    /**
     * @param args
     * arg[0] - URL of the Virtual Center Server / ESX host
     *          https://<Server host name / ip>/sdk
     * arg[1] - User name
     * arg[2] - Password
     */
    public static void main(String[] args) {
        //This is to accept all SSL certifcates by default.
        System.setProperty("org.apache.axis.components.net.SecureSocketFactory", "org.apache.axis.components.net.SunFakeTrustSocketFactory");
        if (args.length < 3) {
            printUsage();
        } else {
            try {
                VIM_HOST = args[0];
                USER_NAME = args[1];
                PASSWORD = args[2];

                initAll();
                Calendar ct = getCurrentTime();
                printServerTime(ct);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    disconnect();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }

}
