#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

gem "buildr", "~>1.2.4"
require "buildr"
require "buildr/xmlbeans.rb"
require "buildr/openjpa"
require "buildr/javacc"
require "buildr/jetty"
require "buildr/hibernate"

# Keep this structure to allow the build system to update version numbers.
VERSION_NUMBER = "1.0"
NEXT_VERSION = "1.1"

ANT                 = "ant:ant:jar:1.6.5"
AXIOM               = [ group("axiom-api", "axiom-impl", "axiom-dom",
                        :under=>"org.apache.ws.commons.axiom", :version=>"1.2.5") ]
AXIS2_ALL           = group( "axis2", #"axis2-adb", "axis2-codegen", "axis2-kernel", "axis", "axis2-java2wsdl", "axis2-jibx", "axis2-saaj", "axis2-xmlbeans", 
							:under=>"org.apache.axis2", :version=>"1.4")
JAX_RPC 		    = "javax.xml:rpc:jar:1.0"							
AXIS2_TEST          = group("httpcore", "httpcore-nio", "httpcore-niossl", 
                           :under=>"org.apache.httpcomponents", :version=>"4.0-alpha5")
AXIS2_MODULES        = struct(
 :mods              => ["org.apache.rampart:rampart:mar:1.3", 
                         "org.apache.rampart:rahas:mar:1.3",
                         "org.apache.axis2:addressing:mar:1.3"],
 :libs              => [group("rampart-core", "rampart-policy", "rampart-trust",
                              :under=>"org.apache.rampart",
                              :version=>"1.3"), 
                        "org.apache.ws.security:wss4j:jar:1.5.3", 
                        "org.apache.santuario:xmlsec:jar:1.4.0",
                        "opensaml:opensaml:jar:1.1",
                        "bouncycastle:bcprov-jdk15:jar:132"] 
)
COMMONS             = struct(
  :codec            =>"commons-codec:commons-codec:jar:1.3",
  :collections      =>"commons-collections:commons-collections:jar:3.1",
  :dbcp             =>"commons-dbcp:commons-dbcp:jar:1.2.1",
  :fileupload       =>"commons-fileupload:commons-fileupload:jar:1.1.1",
  :httpclient       =>"commons-httpclient:commons-httpclient:jar:3.0",
  :lang             =>"commons-lang:commons-lang:jar:2.3",
  :logging          =>"commons-logging:commons-logging:jar:1.1",
  :io               =>"commons-io:commons-io:jar:1.4",
  :pool             =>"commons-pool:commons-pool:jar:1.2",
  :primitives       =>"commons-primitives:commons-primitives:jar:1.0",
  :discovery	    =>"commons-discovery:commons-discovery:jar:0.4"
)
DOM4J               = "dom4j:dom4j:jar:1.6.1"
JAVAX               = struct(
  :activation       =>"javax.activation:activation:jar:1.1",
  #:activation       =>"geronimo-spec:geronimo-spec-activation:jar:1.0.2-rc4",
  :connector        =>"org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.0",
  :ejb              =>"org.apache.geronimo.specs:geronimo-ejb_2.1_spec:jar:1.1",
  :javamail         =>"geronimo-spec:geronimo-spec-javamail:jar:1.3.1-rc5",
  :jms              =>"geronimo-spec:geronimo-spec-jms:jar:1.1-rc4",
  :persistence      =>"javax.persistence:persistence-api:jar:1.0",
  :servlet          =>"org.apache.geronimo.specs:geronimo-servlet_2.4_spec:jar:1.0",
  :stream           =>"stax:stax-api:jar:1.0.1",
  :transaction      =>"org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1",
  :resource         =>"org.apache.geronimo.specs:geronimo-j2ee-connector_1.5_spec:jar:1.0"
)
JAXEN               = "jaxen:jaxen:jar:1.1.1"
LOG4J               = "log4j:log4j:jar:1.2.13"
WSDL4J              = "wsdl4j:wsdl4j:jar:1.6.1"
XALAN               = "org.apache.ode:xalan:jar:2.7.0-2"
XERCES              = "xerces:xercesImpl:jar:2.9.0"
VMWARE_SDK		    = [ "com.vmware:apputils:jar:1.0",
						"com.vmware:credstore:jar:1.0",
						"com.vmware:samples:jar:1.0",
						"com.vmware:vim:jar:1.0",
						"com.vmware:vim25:jar:2.5",
						"com.vmware:smapputils:jar:1.0",
						"com.vmware:sms:jar:1.0",
						"com.vmware:smsamples:jar:1.0"						 
					  ]
WBEM			    = "org.wbemservices:wbem:jar:1.0"					  
ENV['JAVA_OPTS']    = '-Xms1g -Xmx1g'

repositories.remote << "http://www.intalio.org/public/maven2"
repositories.remote << "http://people.apache.org/repo/m2-incubating-repository"
repositories.remote << "http://repo1.maven.org/maven2"
repositories.remote << "http://people.apache.org/repo/m2-snapshot-repository"
repositories.remote << "http://download.java.net/maven/2"
repositories.remote << "http://ws.zones.apache.org/repository2"
repositories.release_to[:url] ||= "sftp://guest@localhost/home/guest"

# Changing releases tag names
class Release
  class << self
    def tag_with_vmware_exercises(version)
      tag_without_vmware_exercises("VMWARE_EXERCISES_#{version.upcase}")
    end
    alias_method_chain :tag, :vmware_exercises
  end
end


desc "VMWare SDK Clients"
define "clients" do
  project.version = VERSION_NUMBER
  project.group = "com.intalio.vmware.clients"

  compile.options.source = "1.5"
  compile.options.target = "1.5"
  manifest["Implementation-Vendor"] = "VMWare SDK Clients"
  #meta_inf << file("NOTICE")

  desc "VMWare SDK Exercises"
  define "exercises" do
    compile.with VMWARE_SDK, JAVAX.activation, JAVAX.javamail, JAXEN, JAX_RPC,
      AXIOM, AXIS2_ALL, COMMONS.lang, COMMONS.logging, COMMONS.collections, COMMONS.httpclient, COMMONS.lang, COMMONS.discovery,
      JAVAX.activation, JAVAX.servlet, JAVAX.stream, JAVAX.transaction, WSDL4J, AXIS2_MODULES.libs

    test.exclude 'com.vmware.*'
    test.with AXIOM, JAVAX.javamail, COMMONS.codec, COMMONS.httpclient, XERCES

    package :jar
  end
  
  define "utilities" do
    compile.with VMWARE_SDK, JAVAX.activation, JAVAX.javamail, JAXEN, JAX_RPC, WBEM,
      AXIOM, AXIS2_ALL, COMMONS.lang, COMMONS.logging, COMMONS.collections, COMMONS.httpclient, COMMONS.lang, 
      JAVAX.activation, JAVAX.servlet, JAVAX.stream, JAVAX.transaction, WSDL4J, AXIS2_MODULES.libs
	
    test.exclude 'com.vmware.*'
    test.with AXIOM, JAVAX.javamail, COMMONS.codec, COMMONS.httpclient, XERCES

    package :jar
  end

  define "commands" do
    compile.with VMWARE_SDK, JAVAX.activation, JAVAX.javamail, JAXEN, JAX_RPC,
      AXIOM, AXIS2_ALL, COMMONS.lang, COMMONS.logging, COMMONS.collections, COMMONS.httpclient, COMMONS.lang, 
      JAVAX.activation, JAVAX.servlet, JAVAX.stream, JAVAX.transaction, WSDL4J, AXIS2_MODULES.libs
	
    test.exclude 'com.vmware.*'
    test.with AXIOM, JAVAX.javamail, COMMONS.codec, COMMONS.httpclient, XERCES

    package :jar
  end
  
  define "webservice" do
    compile.with JAVAX.activation, JAVAX.javamail, JAXEN, JAX_RPC, WBEM, 
      AXIOM, AXIS2_ALL, COMMONS.lang, COMMONS.logging, COMMONS.collections, COMMONS.httpclient, COMMONS.lang, 
      JAVAX.activation, JAVAX.servlet, JAVAX.stream, JAVAX.transaction, WSDL4J, AXIS2_MODULES.libs
	
    test.exclude 'com.vmware.*'
    test.with AXIOM, JAVAX.javamail, COMMONS.codec, COMMONS.httpclient, XERCES

    package :jar
  end
  
  package(:zip, :id=>"#{id}-sources").path("#{id}-sources-#{version}").tap do |zip|
    if File.exist?(".svn")
      `svn status -v`.reject { |l| l[0] == ?? || l[0] == ?D || l.strip.empty? || l[0...3] == "---"}.
        map { |l| l.split.last }.reject { |f| File.directory?(f) }.
        each { |f| zip.include f, :as=>f }
    else
      zip.include Dir.pwd, :as=>"."
    end
  end

  #package(:zip, :id=>"#{id}-docs").include(javadoc(project("clients").projects).target) unless ENV["JAVADOC"] =~ /^(no|off|false|skip)$/i
end

